???????? $ Nullable Set(0)
**************** SymbolTable *****************
CBin::FOR  No Data
CBin::==/  No Data
CBin::POINTER  No Data
CBin::LTEQ  No Data
CBin::==+  No Data
CBin::==*  No Data
CBin::==%  No Data
CBin::LSH  No Data
CBin::==&  No Data
CBin::==!  No Data
CBin::WHILE  No Data
CBin::ENDASM  No Data
CBin::ASM  No Data
CBin::ROUTINES  No Data
CBin::GTEQ  No Data
CBin::IF  No Data
CBin::RECORDTYPE  No Data
CBin::MODULE  No Data
CBin::STEP  No Data
CBin::BOOL  No Data
CBin::END  No Data
CBin::ARRAY  No Data
CBin::RSH  No Data
CBin::ELSE  No Data
CBin::AND  No Data
CBin::!  No Data
CBin::FUNC_IDENT  No Data
CBin::#  No Data
CBin::PROC  No Data
CBin::TO  No Data
CBin::CHAR  No Data
CBin::%  No Data
CBin::&  No Data
CBin::==RSH  No Data
CBin::BEGIN  No Data
CBin::(  No Data
CBin::)  No Data
CBin::IDENT  No Data
CBin::*  No Data
CBin::+  No Data
CBin::UNTILL  No Data
CBin::,  No Data
CBin::-  No Data
CBin::ELSEIF  No Data
CBin::.  No Data
CBin::/  No Data
CBin::OD  No Data
CBin::BYTE  No Data
CBin::CARD  No Data
CBin::DO  No Data
CBin::THEN  No Data
CBin::NUMBER  No Data
CBin::TYPE  No Data
CBin::RETURN  No Data
CBin::FI  No Data
CBin::INT  No Data
CBin::==LSH  No Data
CBin::;  No Data
CBin::<  No Data
CBin::=  No Data
CBin::OR  No Data
CBin::>  No Data
CBin::@  No Data
CBin::FUNC  No Data
CBin::<*  No Data
CBin::==MOD  No Data
CBin::PROC_IDENT  No Data
CBin::==XOR  No Data
CBin:::=  No Data
CBin::EXIT  No Data
CBin::GLOBALS  No Data
CBin::DEFINE  No Data
CBin::MOD  No Data
CBin::[  No Data
CBin::]  No Data
CBin::^  No Data
CBin::==-  No Data
^^^^^^^^^^^^^^^ SymbolTable ^^^^^^^^^^^^^^^^^^^^^^
Action65:  Token:NONTERMINAL Value:265 NULLABLE(0) START(1)
     FIRST['Action65'] { }
     FOLLOW['Action65'] { '$' }
Parser:NT:MODULE
Parser:NT:MODULE
Parser:NT:END
Parser:NT:FUNC
Parser:NT:BEGIN
Parser:NT:PROC
Parser:NT:BEGIN
Parser:NT:(
Parser:NT:)
Parser:NT:(
Parser:NT:)
Parser:NT:FUNC_IDENT
Parser:NT:PROC_IDENT
Parser:NT:;
Parser:NT:FI
Parser:NT:OD
Parser:NT:)
Parser:NT:]
Parser:NT:PROC_IDENT
Parser:NT:(
Parser:NT:IF
Parser:NT:WHILE
Parser:NT:DO
Parser:NT:DO
Parser:NT:;
Parser:NT:UNTILL
Parser:NT:THEN
Parser:NT:ELSEIF
Parser:NT:ELSE
Parser:NT:OR
Parser:NT:AND
Parser:NT:>
Parser:NT:<
Parser:NT:GTEQ
Parser:NT:LTEQ
Parser:NT:=
Parser:NT:#
Parser:NT:%
Parser:NT:&
Parser:NT:!
Parser:NT:+
Parser:NT:-
Parser:NT:LSH
Parser:NT:RSH
Parser:NT:*
Parser:NT:/
Parser:NT:MOD
Parser:NT:-
Parser:NT:(
Parser:NT:)
Parser:NT:(
Parser:NT:)
Parser:NT:,
Parser:NT:BOOL
Parser:NT:CHAR
Parser:NT:BYTE
Parser:NT:INT
Parser:NT:CARD
Parser:NT:POINTER
Parser:NT:,
Parser:NT:RECORDTYPE
Parser:NT:CHAR
Parser:NT:BYTE
Parser:NT:INT
Parser:NT:CARD
Parser:NT:BOOL
Parser:NT:RECORDTYPE
Parser:NT:CHAR
Parser:NT:BYTE
Parser:NT:INT
Parser:NT:CARD
Parser:NT:BOOL
Parser:NT:;
Parser:NT:DEFINE
Parser:NT:TYPE
Parser:NT:RECORDTYPE
Parser:NT:CHAR
Parser:NT:BYTE
Parser:NT:INT
Parser:NT:CARD
Parser:NT:BOOL
Parser:NT:,
Parser:NT:=
Parser:NT:,
Parser:NT:=
Parser:NT:=
Parser:NT:[
Parser:NT:]
Parser:NT:;
Parser:NT:POINTER
Parser:NT:ARRAY
Parser:NT:(
Parser:NT:)
Parser:NT:=
Parser:NT:[
Parser:NT:]
Parser:NT:,
Parser:NT:+
Parser:NT:NUMBER
Parser:NT:*
Parser:NT:@
Parser:NT:IDENT
Parser:NT:(
Parser:NT:)
Parser:NT:^
Parser:NT:.
*************  Print Out Grammar Structure************
ArithExpr
-> LogicalAND LogicalOR_1
StructStmts
-> PROC_IDENT ( IdentList
-> IF IfStmt
-> WHILE WhileLoop
-> DO DoLoop
-> ϵ
RelOperation
-> RelEquals RelOperation_1
Factor
-> BaseCompConst
-> FUNCcall
-> ( ArithExpr )
-> MemContents
AddExpr_1
-> + ShifExpr AddExpr_1
-> - ShifExpr AddExpr_1
-> ϵ
IdentList
-> MemContents IdentList_1
FUNCcall
-> FuncIdent ( IdentList )
MultExpr_1
-> * Unary MultExpr_1
-> / Unary MultExpr_1
-> MOD Unary MultExpr_1
-> ϵ
RecField
-> = [ RecFieldList ]
SysDecls
-> SysDecl SysDecls_1
BitwiseOR_1
-> % BitwiseAND BitwiseOR_1
-> ϵ
MultExpr
-> Unary MultExpr_1
LogicalAND_1
-> AND RelOperation LogicalAND_1
-> ϵ
ParamList_1
-> , Param ParamList_1
-> ϵ
DoLoop
-> Statements UNTILLstmt ;
OptModifier
-> POINTER
-> ϵ
Unary
-> - Unary
-> Factor
Routine
-> FUNC FundType FuncDecl BEGIN ProcBody
-> PROC ProcDecl BEGIN ProcBody
WhileLoop
-> ArithExpr DO Statements
RecIdent
-> RecField
CompConstList
-> CompConst CompConstList_1
Def
-> Ident = CompConst
ProcBody_1
-> Statements
BitwiseAND
-> BitwiseXOR BitwiseAND_1
Statement
-> StructStmts
ShifExpr
-> MultExpr ShiftExpr_1
AddExpr
-> ShifExpr AddExpr_1
Ident
-> IDENT
ThenPart_1
-> Statements ElseIfPart
VarDecls
-> RECORDTYPE Modifier VarList
-> CHAR Modifier VarList
-> BYTE Modifier VarList
-> INT Modifier VarList
-> CARD Modifier VarList
-> BOOL Modifier VarList
Statements_1
-> ; Statement Statements_1
-> FI Statement Statements_1
-> OD Statement Statements_1
-> ) Statement Statements_1
-> ] Statement Statements_1
-> ϵ
Module
-> SysDecls Routines
-> Routines
RelEquals
-> BitwiseOR RelEquals_1
SysDecl
-> DEFINE DefList
-> TYPE RecIdent
-> RECORDTYPE Modifier VarList
-> CHAR Modifier VarList
-> BYTE Modifier VarList
-> INT Modifier VarList
-> CARD Modifier VarList
-> BOOL VarList
-> ϵ
DefList
-> Def DefList_1
ProcDecl
-> ProcIdent OptInit ( ParamList )
BaseCompConst
-> NUMBER
-> *
-> @ MemContents
Modifier
-> POINTER
-> ARRAY ArrayStuff
-> ϵ
ShiftExpr_1
-> LSH MultExpr ShiftExpr_1
-> RSH MultExpr ShiftExpr_1
-> ϵ
ArrayStuff
-> ( CompConst ) OptArrayInit
-> ϵ
FuncDecl
-> FuncIdent OptInit ( ParamList )
RelEquals_1
-> = BitwiseOR RelEquals_1
-> # BitwiseOR RelEquals_1
-> ϵ
SimpleRelExpr_1
-> ! AddExpr SimpleRelExpr_1
-> ϵ
FuncIdent
-> FUNC_IDENT
VarList_1
-> , VarName VarList_1
-> ϵ
Action65
-> Modules
OptInit
-> = CompConst
-> ϵ
LogicalOR_1
-> OR LogicalAND LogicalOR_1
-> ϵ
VarList
-> VarName VarList_1
SysDecls_1
-> ; SysDecl SysDecls_1
-> ϵ
CompConst_1
-> + BaseCompConst CompConst_1
-> ϵ
RecFieldList_1
-> ; VarDecls RecFieldList_1
-> ϵ
ThenPart
-> THEN ThenPart_1
BitwiseAND_1
-> & BitwiseXOR BitwiseAND_1
-> ϵ
MemContents
-> Ident MemContentsType
RecFieldList
-> VarDecls RecFieldList_1
ParamList
-> Param ParamList_1
LogicalAND
-> RelOperation LogicalAND_1
OptArrayInit
-> = [ CompConstList ]
-> ϵ
UNTILLstmt
-> UNTILL ArithExpr
ElseIfPart
-> ELSEIF ArithExpr ThenPart
-> ELSE Statements
-> ϵ
RelOperation_1
-> > RelEquals RelOperation_1
-> < RelEquals RelOperation_1
-> GTEQ RelEquals RelOperation_1
-> LTEQ RelEquals RelOperation_1
-> ϵ
FundType
-> BOOL
-> CHAR OptModifier
-> BYTE OptModifier
-> INT OptModifier
-> CARD OptModifier
Param
-> RECORDTYPE OptModifier Ident
-> CHAR OptModifier Ident
-> BYTE OptModifier Ident
-> INT OptModifier Ident
-> CARD OptModifier Ident
-> BOOL OptModifier Ident
CompConstList_1
-> , CompConst CompConstList_1
-> ϵ
Modules_1
-> MODULE Module Modules_1
-> ϵ
CompConst
-> BaseCompConst CompConst_1
Routines_1
-> END Routine Routines_1
-> ϵ
BitwiseOR
-> BitwiseAND BitwiseOR_1
MemContentsType
-> ( ArithExpr )
-> ^
-> . Ident
-> ϵ
BitwiseXOR
-> AddExpr SimpleRelExpr_1
Routines
-> Routine Routines_1
VarName
-> Ident OptInit
DefList_1
-> , Def DefList_1
-> ϵ
Statements
-> Statement Statements_1
IdentList_1
-> , MemContents IdentList_1
-> ϵ
ProcBody
-> SysDecls ProcBody_1
Modules
-> MODULE Modules_1
ProcIdent
-> PROC_IDENT
IfStmt
-> ArithExpr ThenPart
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
********** Non Terminals Set **********
NONTERMINALS['Non Terminals'] { 'Action65','Modules','Modules_1','Module','Routines','Routines_1','Routine','ProcBody','ProcBody_1','ProcDecl','FuncDecl','FuncIdent','ProcIdent','Statements','Statements_1','Statement','StructStmts','WhileLoop','DoLoop','UNTILLstmt','IfStmt','ThenPart','ThenPart_1','ElseIfPart','ArithExpr','LogicalOR_1','LogicalAND','LogicalAND_1','RelOperation','RelOperation_1','RelEquals','RelEquals_1','BitwiseOR','BitwiseOR_1','BitwiseAND','BitwiseAND_1','BitwiseXOR','SimpleRelExpr_1','AddExpr','AddExpr_1','ShifExpr','ShiftExpr_1','MultExpr','MultExpr_1','Unary','Factor','FUNCcall','IdentList','IdentList_1','FundType','OptModifier','ParamList','ParamList_1','Param','VarDecls','SysDecls','SysDecls_1','SysDecl','VarList','VarList_1','VarName','OptInit','DefList','DefList_1','Def','RecIdent','RecField','RecFieldList','RecFieldList_1','Modifier','ArrayStuff','OptArrayInit','CompConstList','CompConstList_1','CompConst','CompConst_1','BaseCompConst','Ident','MemContents','MemContentsType' }
*********** Build Nullable Set **********
----- Generate Nullables-------
Action65-> Modules
Modules-> MODULE Modules_1
Modules_1-> MODULE Module Modules_1
Modules_1-> ϵ
Module-> SysDecls Routines
Module-> Routines
Routines-> Routine Routines_1
Routines_1-> END Routine Routines_1
Routines_1-> ϵ
Routine-> FUNC FundType FuncDecl BEGIN ProcBody
Routine-> PROC ProcDecl BEGIN ProcBody
ProcBody-> SysDecls ProcBody_1
ProcBody_1-> Statements
ProcDecl-> ProcIdent OptInit ( ParamList )
FuncDecl-> FuncIdent OptInit ( ParamList )
FuncIdent-> FUNC_IDENT
ProcIdent-> PROC_IDENT
Statements-> Statement Statements_1
Statements_1-> ; Statement Statements_1
Statements_1-> FI Statement Statements_1
Statements_1-> OD Statement Statements_1
Statements_1-> ) Statement Statements_1
Statements_1-> ] Statement Statements_1
Statements_1-> ϵ
Statement-> StructStmts
StructStmts-> PROC_IDENT ( IdentList
StructStmts-> IF IfStmt
StructStmts-> WHILE WhileLoop
StructStmts-> DO DoLoop
StructStmts-> ϵ
WhileLoop-> ArithExpr DO Statements
DoLoop-> Statements UNTILLstmt ;
UNTILLstmt-> UNTILL ArithExpr
IfStmt-> ArithExpr ThenPart
ThenPart-> THEN ThenPart_1
ThenPart_1-> Statements ElseIfPart
ElseIfPart-> ELSEIF ArithExpr ThenPart
ElseIfPart-> ELSE Statements
ElseIfPart-> ϵ
ArithExpr-> LogicalAND LogicalOR_1
LogicalOR_1-> OR LogicalAND LogicalOR_1
LogicalOR_1-> ϵ
LogicalAND-> RelOperation LogicalAND_1
LogicalAND_1-> AND RelOperation LogicalAND_1
LogicalAND_1-> ϵ
RelOperation-> RelEquals RelOperation_1
RelOperation_1-> > RelEquals RelOperation_1
RelOperation_1-> < RelEquals RelOperation_1
RelOperation_1-> GTEQ RelEquals RelOperation_1
RelOperation_1-> LTEQ RelEquals RelOperation_1
RelOperation_1-> ϵ
RelEquals-> BitwiseOR RelEquals_1
RelEquals_1-> = BitwiseOR RelEquals_1
RelEquals_1-> # BitwiseOR RelEquals_1
RelEquals_1-> ϵ
BitwiseOR-> BitwiseAND BitwiseOR_1
BitwiseOR_1-> % BitwiseAND BitwiseOR_1
BitwiseOR_1-> ϵ
BitwiseAND-> BitwiseXOR BitwiseAND_1
BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
BitwiseAND_1-> ϵ
BitwiseXOR-> AddExpr SimpleRelExpr_1
SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
SimpleRelExpr_1-> ϵ
AddExpr-> ShifExpr AddExpr_1
AddExpr_1-> + ShifExpr AddExpr_1
AddExpr_1-> - ShifExpr AddExpr_1
AddExpr_1-> ϵ
ShifExpr-> MultExpr ShiftExpr_1
ShiftExpr_1-> LSH MultExpr ShiftExpr_1
ShiftExpr_1-> RSH MultExpr ShiftExpr_1
ShiftExpr_1-> ϵ
MultExpr-> Unary MultExpr_1
MultExpr_1-> * Unary MultExpr_1
MultExpr_1-> / Unary MultExpr_1
MultExpr_1-> MOD Unary MultExpr_1
MultExpr_1-> ϵ
Unary-> - Unary
Unary-> Factor
Factor-> BaseCompConst
Factor-> FUNCcall
Factor-> ( ArithExpr )
Factor-> MemContents
FUNCcall-> FuncIdent ( IdentList )
IdentList-> MemContents IdentList_1
IdentList_1-> , MemContents IdentList_1
IdentList_1-> ϵ
FundType-> BOOL
FundType-> CHAR OptModifier
FundType-> BYTE OptModifier
FundType-> INT OptModifier
FundType-> CARD OptModifier
OptModifier-> POINTER
OptModifier-> ϵ
ParamList-> Param ParamList_1
ParamList_1-> , Param ParamList_1
ParamList_1-> ϵ
Param-> RECORDTYPE OptModifier Ident
Param-> CHAR OptModifier Ident
Param-> BYTE OptModifier Ident
Param-> INT OptModifier Ident
Param-> CARD OptModifier Ident
Param-> BOOL OptModifier Ident
VarDecls-> RECORDTYPE Modifier VarList
VarDecls-> CHAR Modifier VarList
VarDecls-> BYTE Modifier VarList
VarDecls-> INT Modifier VarList
VarDecls-> CARD Modifier VarList
VarDecls-> BOOL Modifier VarList
SysDecls-> SysDecl SysDecls_1
SysDecls_1-> ; SysDecl SysDecls_1
SysDecls_1-> ϵ
SysDecl-> DEFINE DefList
SysDecl-> TYPE RecIdent
SysDecl-> RECORDTYPE Modifier VarList
SysDecl-> CHAR Modifier VarList
SysDecl-> BYTE Modifier VarList
SysDecl-> INT Modifier VarList
SysDecl-> CARD Modifier VarList
SysDecl-> BOOL VarList
SysDecl-> ϵ
VarList-> VarName VarList_1
VarList_1-> , VarName VarList_1
VarList_1-> ϵ
VarName-> Ident OptInit
OptInit-> = CompConst
OptInit-> ϵ
DefList-> Def DefList_1
DefList_1-> , Def DefList_1
DefList_1-> ϵ
Def-> Ident = CompConst
RecIdent-> RecField
RecField-> = [ RecFieldList ]
RecFieldList-> VarDecls RecFieldList_1
RecFieldList_1-> ; VarDecls RecFieldList_1
RecFieldList_1-> ϵ
Modifier-> POINTER
Modifier-> ARRAY ArrayStuff
Modifier-> ϵ
ArrayStuff-> ( CompConst ) OptArrayInit
ArrayStuff-> ϵ
OptArrayInit-> = [ CompConstList ]
OptArrayInit-> ϵ
CompConstList-> CompConst CompConstList_1
CompConstList_1-> , CompConst CompConstList_1
CompConstList_1-> ϵ
CompConst-> BaseCompConst CompConst_1
CompConst_1-> + BaseCompConst CompConst_1
CompConst_1-> ϵ
BaseCompConst-> NUMBER
BaseCompConst-> *
BaseCompConst-> @ MemContents
Ident-> IDENT
MemContents-> Ident MemContentsType
MemContentsType-> ( ArithExpr )
MemContentsType-> ^
MemContentsType-> . Ident
MemContentsType-> ϵ
************ Nullable Iteration 1 *********
Action65-> Modules
Modules-> MODULE Modules_1
Modules_1-> MODULE Module Modules_1
Modules_1-> ϵ
Module-> SysDecls Routines
Module-> Routines
Routines-> Routine Routines_1
Routines_1-> END Routine Routines_1
Routines_1-> ϵ
Routine-> FUNC FundType FuncDecl BEGIN ProcBody
Routine-> PROC ProcDecl BEGIN ProcBody
ProcBody-> SysDecls ProcBody_1
ProcBody_1-> Statements
ProcDecl-> ProcIdent OptInit ( ParamList )
FuncDecl-> FuncIdent OptInit ( ParamList )
FuncIdent-> FUNC_IDENT
ProcIdent-> PROC_IDENT
Statements-> Statement Statements_1
Statements_1-> ; Statement Statements_1
Statements_1-> FI Statement Statements_1
Statements_1-> OD Statement Statements_1
Statements_1-> ) Statement Statements_1
Statements_1-> ] Statement Statements_1
Statements_1-> ϵ
Statement-> StructStmts
StructStmts-> PROC_IDENT ( IdentList
StructStmts-> IF IfStmt
StructStmts-> WHILE WhileLoop
StructStmts-> DO DoLoop
StructStmts-> ϵ
WhileLoop-> ArithExpr DO Statements
DoLoop-> Statements UNTILLstmt ;
UNTILLstmt-> UNTILL ArithExpr
IfStmt-> ArithExpr ThenPart
ThenPart-> THEN ThenPart_1
ThenPart_1-> Statements ElseIfPart
ElseIfPart-> ELSEIF ArithExpr ThenPart
ElseIfPart-> ELSE Statements
ElseIfPart-> ϵ
ArithExpr-> LogicalAND LogicalOR_1
LogicalOR_1-> OR LogicalAND LogicalOR_1
LogicalOR_1-> ϵ
LogicalAND-> RelOperation LogicalAND_1
LogicalAND_1-> AND RelOperation LogicalAND_1
LogicalAND_1-> ϵ
RelOperation-> RelEquals RelOperation_1
RelOperation_1-> > RelEquals RelOperation_1
RelOperation_1-> < RelEquals RelOperation_1
RelOperation_1-> GTEQ RelEquals RelOperation_1
RelOperation_1-> LTEQ RelEquals RelOperation_1
RelOperation_1-> ϵ
RelEquals-> BitwiseOR RelEquals_1
RelEquals_1-> = BitwiseOR RelEquals_1
RelEquals_1-> # BitwiseOR RelEquals_1
RelEquals_1-> ϵ
BitwiseOR-> BitwiseAND BitwiseOR_1
BitwiseOR_1-> % BitwiseAND BitwiseOR_1
BitwiseOR_1-> ϵ
BitwiseAND-> BitwiseXOR BitwiseAND_1
BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
BitwiseAND_1-> ϵ
BitwiseXOR-> AddExpr SimpleRelExpr_1
SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
SimpleRelExpr_1-> ϵ
AddExpr-> ShifExpr AddExpr_1
AddExpr_1-> + ShifExpr AddExpr_1
AddExpr_1-> - ShifExpr AddExpr_1
AddExpr_1-> ϵ
ShifExpr-> MultExpr ShiftExpr_1
ShiftExpr_1-> LSH MultExpr ShiftExpr_1
ShiftExpr_1-> RSH MultExpr ShiftExpr_1
ShiftExpr_1-> ϵ
MultExpr-> Unary MultExpr_1
MultExpr_1-> * Unary MultExpr_1
MultExpr_1-> / Unary MultExpr_1
MultExpr_1-> MOD Unary MultExpr_1
MultExpr_1-> ϵ
Unary-> - Unary
Unary-> Factor
Factor-> BaseCompConst
Factor-> FUNCcall
Factor-> ( ArithExpr )
Factor-> MemContents
FUNCcall-> FuncIdent ( IdentList )
IdentList-> MemContents IdentList_1
IdentList_1-> , MemContents IdentList_1
IdentList_1-> ϵ
FundType-> BOOL
FundType-> CHAR OptModifier
FundType-> BYTE OptModifier
FundType-> INT OptModifier
FundType-> CARD OptModifier
OptModifier-> POINTER
OptModifier-> ϵ
ParamList-> Param ParamList_1
ParamList_1-> , Param ParamList_1
ParamList_1-> ϵ
Param-> RECORDTYPE OptModifier Ident
Param-> CHAR OptModifier Ident
Param-> BYTE OptModifier Ident
Param-> INT OptModifier Ident
Param-> CARD OptModifier Ident
Param-> BOOL OptModifier Ident
VarDecls-> RECORDTYPE Modifier VarList
VarDecls-> CHAR Modifier VarList
VarDecls-> BYTE Modifier VarList
VarDecls-> INT Modifier VarList
VarDecls-> CARD Modifier VarList
VarDecls-> BOOL Modifier VarList
SysDecls-> SysDecl SysDecls_1
SysDecls_1-> ; SysDecl SysDecls_1
SysDecls_1-> ϵ
SysDecl-> DEFINE DefList
SysDecl-> TYPE RecIdent
SysDecl-> RECORDTYPE Modifier VarList
SysDecl-> CHAR Modifier VarList
SysDecl-> BYTE Modifier VarList
SysDecl-> INT Modifier VarList
SysDecl-> CARD Modifier VarList
SysDecl-> BOOL VarList
SysDecl-> ϵ
VarList-> VarName VarList_1
VarList_1-> , VarName VarList_1
VarList_1-> ϵ
VarName-> Ident OptInit
OptInit-> = CompConst
OptInit-> ϵ
DefList-> Def DefList_1
DefList_1-> , Def DefList_1
DefList_1-> ϵ
Def-> Ident = CompConst
RecIdent-> RecField
RecField-> = [ RecFieldList ]
RecFieldList-> VarDecls RecFieldList_1
RecFieldList_1-> ; VarDecls RecFieldList_1
RecFieldList_1-> ϵ
Modifier-> POINTER
Modifier-> ARRAY ArrayStuff
Modifier-> ϵ
ArrayStuff-> ( CompConst ) OptArrayInit
ArrayStuff-> ϵ
OptArrayInit-> = [ CompConstList ]
OptArrayInit-> ϵ
CompConstList-> CompConst CompConstList_1
CompConstList_1-> , CompConst CompConstList_1
CompConstList_1-> ϵ
CompConst-> BaseCompConst CompConst_1
CompConst_1-> + BaseCompConst CompConst_1
CompConst_1-> ϵ
BaseCompConst-> NUMBER
BaseCompConst-> *
BaseCompConst-> @ MemContents
Ident-> IDENT
MemContents-> Ident MemContentsType
MemContentsType-> ( ArithExpr )
MemContentsType-> ^
MemContentsType-> . Ident
MemContentsType-> ϵ
************ Nullable Iteration 2 *********
----- Done Generate Nullables-------
NULLABLES['Nullables'] { 'Modules_1','Routines_1','Statements_1','StructStmts','ElseIfPart','LogicalOR_1','LogicalAND_1','RelOperation_1','RelEquals_1','BitwiseOR_1','BitwiseAND_1','SimpleRelExpr_1','AddExpr_1','ShiftExpr_1','MultExpr_1','IdentList_1','OptModifier','ParamList_1','SysDecls_1','SysDecl','VarList_1','OptInit','DefList_1','RecFieldList_1','Modifier','ArrayStuff','OptArrayInit','CompConstList_1','CompConst_1','MemContentsType' }

NONTERMINALS['Non Terminals'] { 'Action65','Modules','Modules_1','Module','Routines','Routines_1','Routine','ProcBody','ProcBody_1','ProcDecl','FuncDecl','FuncIdent','ProcIdent','Statements','Statements_1','Statement','StructStmts','WhileLoop','DoLoop','UNTILLstmt','IfStmt','ThenPart','ThenPart_1','ElseIfPart','ArithExpr','LogicalOR_1','LogicalAND','LogicalAND_1','RelOperation','RelOperation_1','RelEquals','RelEquals_1','BitwiseOR','BitwiseOR_1','BitwiseAND','BitwiseAND_1','BitwiseXOR','SimpleRelExpr_1','AddExpr','AddExpr_1','ShifExpr','ShiftExpr_1','MultExpr','MultExpr_1','Unary','Factor','FUNCcall','IdentList','IdentList_1','FundType','OptModifier','ParamList','ParamList_1','Param','VarDecls','SysDecls','SysDecls_1','SysDecl','VarList','VarList_1','VarName','OptInit','DefList','DefList_1','Def','RecIdent','RecField','RecFieldList','RecFieldList_1','Modifier','ArrayStuff','OptArrayInit','CompConstList','CompConstList_1','CompConst','CompConst_1','BaseCompConst','Ident','MemContents','MemContentsType' }

****************Create NOT nullable set ************************
----- Calc First Sets------
******* Create First Set Ver 2 ********
###### First Set Iteration #1
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
TRUE
FIRST['Action65'] { } U FIRST['Modules'] { } => FIRST['Action65'] { }
FIRST['Action65'] { }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE' }
FIRST['Modules_1'] { 'MODULE' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
TRUE
FIRST['Module'] { } U FIRST['SysDecls'] { } => FIRST['Module'] { }
FIRST['Module'] { }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
TRUE
FIRST['Module'] { } U FIRST['Routines'] { } => FIRST['Module'] { }
FIRST['Module'] { }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
TRUE
FIRST['Routines'] { } U FIRST['Routine'] { } => FIRST['Routines'] { }
FIRST['Routines'] { }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END' }
FIRST['Routines_1'] { 'END' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC' }
FIRST['Routine'] { 'FUNC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
TRUE
FIRST['ProcBody'] { } U FIRST['SysDecls'] { } => FIRST['ProcBody'] { }
FIRST['ProcBody'] { }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
TRUE
FIRST['ProcDecl'] { } U FIRST['ProcIdent'] { } => FIRST['ProcDecl'] { }
FIRST['ProcDecl'] { }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
TRUE
FIRST['FuncDecl'] { } U FIRST['FuncIdent'] { } => FIRST['FuncDecl'] { }
FIRST['FuncDecl'] { }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
TRUE
FIRST['Statements'] { } U FIRST['Statement'] { } => FIRST['Statements'] { }
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';' }
FIRST['Statements_1'] { ';' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI' }
FIRST['Statements_1'] { ';','FI' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD' }
FIRST['Statements_1'] { ';','FI','OD' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')' }
FIRST['Statements_1'] { ';','FI','OD',')' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']' }
FIRST['Statements_1'] { ';','FI','OD',')',']' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
TRUE
FIRST['Statement'] { } U FIRST['StructStmts'] { } => FIRST['Statement'] { }
FIRST['Statement'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT' }
FIRST['StructStmts'] { 'PROC_IDENT' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF' }
FIRST['StructStmts'] { 'PROC_IDENT','IF' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF' }
FIRST['ElseIfPart'] { 'ELSEIF' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR' }
FIRST['LogicalOR_1'] { 'OR' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND' }
FIRST['LogicalAND_1'] { 'AND' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { } => FIRST['RelOperation'] { }
FIRST['RelOperation'] { }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>' }
FIRST['RelOperation_1'] { '>' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<' }
FIRST['RelOperation_1'] { '>','<' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ' }
FIRST['RelOperation_1'] { '>','<','GTEQ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
TRUE
FIRST['RelEquals'] { } U FIRST['BitwiseOR'] { } => FIRST['RelEquals'] { }
FIRST['RelEquals'] { }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=' }
FIRST['RelEquals_1'] { '=' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#' }
FIRST['RelEquals_1'] { '=','#' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
TRUE
FIRST['BitwiseOR'] { } U FIRST['BitwiseAND'] { } => FIRST['BitwiseOR'] { }
FIRST['BitwiseOR'] { }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%' }
FIRST['BitwiseOR_1'] { '%' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
TRUE
FIRST['BitwiseAND'] { } U FIRST['BitwiseXOR'] { } => FIRST['BitwiseAND'] { }
FIRST['BitwiseAND'] { }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&' }
FIRST['BitwiseAND_1'] { '&' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
TRUE
FIRST['BitwiseXOR'] { } U FIRST['AddExpr'] { } => FIRST['BitwiseXOR'] { }
FIRST['BitwiseXOR'] { }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!' }
FIRST['SimpleRelExpr_1'] { '!' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
TRUE
FIRST['AddExpr'] { } U FIRST['ShifExpr'] { } => FIRST['AddExpr'] { }
FIRST['AddExpr'] { }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+' }
FIRST['AddExpr_1'] { '+' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-' }
FIRST['AddExpr_1'] { '+','-' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
TRUE
FIRST['ShifExpr'] { } U FIRST['MultExpr'] { } => FIRST['ShifExpr'] { }
FIRST['ShifExpr'] { }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH' }
FIRST['ShiftExpr_1'] { 'LSH' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH' }
FIRST['ShiftExpr_1'] { 'LSH','RSH' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
TRUE
FIRST['MultExpr'] { } U FIRST['Unary'] { } => FIRST['MultExpr'] { }
FIRST['MultExpr'] { }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*' }
FIRST['MultExpr_1'] { '*' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/' }
FIRST['MultExpr_1'] { '*','/' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD' }
FIRST['MultExpr_1'] { '*','/','MOD' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { } U FIRST['-'] { '-' } => FIRST['Unary'] { '-' }
FIRST['Unary'] { '-' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
TRUE
FIRST['Unary'] { '-' } U FIRST['Factor'] { } => FIRST['Unary'] { '-' }
FIRST['Unary'] { '-' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
TRUE
FIRST['Factor'] { } U FIRST['BaseCompConst'] { } => FIRST['Factor'] { }
FIRST['Factor'] { }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
TRUE
FIRST['Factor'] { } U FIRST['FUNCcall'] { } => FIRST['Factor'] { }
FIRST['Factor'] { }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { } U FIRST['('] { '(' } => FIRST['Factor'] { '(' }
FIRST['Factor'] { '(' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
TRUE
FIRST['Factor'] { '(' } U FIRST['MemContents'] { } => FIRST['Factor'] { '(' }
FIRST['Factor'] { '(' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
TRUE
FIRST['IdentList'] { } U FIRST['MemContents'] { } => FIRST['IdentList'] { }
FIRST['IdentList'] { }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',' }
FIRST['IdentList_1'] { ',' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL' }
FIRST['FundType'] { 'BOOL' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR' }
FIRST['FundType'] { 'BOOL','CHAR' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER' }
FIRST['OptModifier'] { 'POINTER' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
TRUE
FIRST['ParamList'] { } U FIRST['Param'] { } => FIRST['ParamList'] { }
FIRST['ParamList'] { }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',' }
FIRST['ParamList_1'] { ',' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE' }
FIRST['Param'] { 'RECORDTYPE' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR' }
FIRST['Param'] { 'RECORDTYPE','CHAR' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE' }
FIRST['VarDecls'] { 'RECORDTYPE' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
TRUE
FIRST['SysDecls'] { } U FIRST['SysDecl'] { } => FIRST['SysDecls'] { }
FIRST['SysDecls'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ' }
FIRST['SysDecls'] { 'ϵ' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';' }
FIRST['SysDecls_1'] { ';' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE' }
FIRST['SysDecl'] { 'DEFINE' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE' }
FIRST['SysDecl'] { 'DEFINE','TYPE' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
TRUE
FIRST['VarList'] { } U FIRST['VarName'] { } => FIRST['VarList'] { }
FIRST['VarList'] { }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',' }
FIRST['VarList_1'] { ',' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
TRUE
FIRST['VarName'] { } U FIRST['Ident'] { } => FIRST['VarName'] { }
FIRST['VarName'] { }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { } U FIRST['='] { '=' } => FIRST['OptInit'] { '=' }
FIRST['OptInit'] { '=' }

OptInit	-> ϵ
FIRST['OptInit'] { '=' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
TRUE
FIRST['DefList'] { } U FIRST['Def'] { } => FIRST['DefList'] { }
FIRST['DefList'] { }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',' }
FIRST['DefList_1'] { ',' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
TRUE
FIRST['Def'] { } U FIRST['Ident'] { } => FIRST['Def'] { }
FIRST['Def'] { }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
TRUE
FIRST['RecIdent'] { } U FIRST['RecField'] { } => FIRST['RecIdent'] { }
FIRST['RecIdent'] { }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';' }
FIRST['RecFieldList_1'] { ';' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER' }
FIRST['Modifier'] { 'POINTER' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY' }
FIRST['Modifier'] { 'POINTER','ARRAY' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(' }
FIRST['ArrayStuff'] { '(' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=' }
FIRST['OptArrayInit'] { '=' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
TRUE
FIRST['CompConstList'] { } U FIRST['CompConst'] { } => FIRST['CompConstList'] { }
FIRST['CompConstList'] { }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',' }
FIRST['CompConstList_1'] { ',' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
TRUE
FIRST['CompConst'] { } U FIRST['BaseCompConst'] { } => FIRST['CompConst'] { }
FIRST['CompConst'] { }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+' }
FIRST['CompConst_1'] { '+' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER' }
FIRST['BaseCompConst'] { 'NUMBER' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*' }
FIRST['BaseCompConst'] { 'NUMBER','*' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(' }
FIRST['MemContentsType'] { '(' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^' }
FIRST['MemContentsType'] { '(','^' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.' }
FIRST['MemContentsType'] { '(','^','.' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #2  DONE!
###### First Set Iteration #2
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
TRUE
FIRST['Module'] { } U FIRST['Routines'] { } => FIRST['Module'] { }
FIRST['Module'] { }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { } => FIRST['RelOperation'] { }
FIRST['RelOperation'] { }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
TRUE
FIRST['RelEquals'] { } U FIRST['BitwiseOR'] { } => FIRST['RelEquals'] { }
FIRST['RelEquals'] { }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
TRUE
FIRST['BitwiseOR'] { } U FIRST['BitwiseAND'] { } => FIRST['BitwiseOR'] { }
FIRST['BitwiseOR'] { }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
TRUE
FIRST['BitwiseAND'] { } U FIRST['BitwiseXOR'] { } => FIRST['BitwiseAND'] { }
FIRST['BitwiseAND'] { }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
TRUE
FIRST['BitwiseXOR'] { } U FIRST['AddExpr'] { } => FIRST['BitwiseXOR'] { }
FIRST['BitwiseXOR'] { }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
TRUE
FIRST['AddExpr'] { } U FIRST['ShifExpr'] { } => FIRST['AddExpr'] { }
FIRST['AddExpr'] { }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
TRUE
FIRST['ShifExpr'] { } U FIRST['MultExpr'] { } => FIRST['ShifExpr'] { }
FIRST['ShifExpr'] { }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
TRUE
FIRST['MultExpr'] { } U FIRST['Unary'] { '-' } => FIRST['MultExpr'] { '-' }
FIRST['MultExpr'] { '-' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-' }
FIRST['Unary'] { '-' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
TRUE
FIRST['Unary'] { '-' } U FIRST['Factor'] { '(' } => FIRST['Unary'] { '-','(' }
FIRST['Unary'] { '-','(' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@' }
FIRST['Factor'] { '(','NUMBER','*','@' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
TRUE
FIRST['VarList'] { } U FIRST['VarName'] { } => FIRST['VarList'] { }
FIRST['VarList'] { }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
TRUE
FIRST['DefList'] { } U FIRST['Def'] { } => FIRST['DefList'] { }
FIRST['DefList'] { }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
TRUE
FIRST['CompConstList'] { } U FIRST['CompConst'] { } => FIRST['CompConstList'] { }
FIRST['CompConstList'] { }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #3  DONE!
###### First Set Iteration #3
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { } => FIRST['RelOperation'] { }
FIRST['RelOperation'] { }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
TRUE
FIRST['RelEquals'] { } U FIRST['BitwiseOR'] { } => FIRST['RelEquals'] { }
FIRST['RelEquals'] { }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
TRUE
FIRST['BitwiseOR'] { } U FIRST['BitwiseAND'] { } => FIRST['BitwiseOR'] { }
FIRST['BitwiseOR'] { }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
TRUE
FIRST['BitwiseAND'] { } U FIRST['BitwiseXOR'] { } => FIRST['BitwiseAND'] { }
FIRST['BitwiseAND'] { }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
TRUE
FIRST['BitwiseXOR'] { } U FIRST['AddExpr'] { } => FIRST['BitwiseXOR'] { }
FIRST['BitwiseXOR'] { }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
TRUE
FIRST['AddExpr'] { } U FIRST['ShifExpr'] { } => FIRST['AddExpr'] { }
FIRST['AddExpr'] { }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
TRUE
FIRST['ShifExpr'] { } U FIRST['MultExpr'] { '-' } => FIRST['ShifExpr'] { '-' }
FIRST['ShifExpr'] { '-' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['MultExpr'] { '-' } U FIRST['Unary'] { '-','(' } => FIRST['MultExpr'] { '-','(' }
FIRST['MultExpr'] { '-','(' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(' }
FIRST['Unary'] { '-','(' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #4  DONE!
###### First Set Iteration #4
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { } => FIRST['RelOperation'] { }
FIRST['RelOperation'] { }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
TRUE
FIRST['RelEquals'] { } U FIRST['BitwiseOR'] { } => FIRST['RelEquals'] { }
FIRST['RelEquals'] { }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
TRUE
FIRST['BitwiseOR'] { } U FIRST['BitwiseAND'] { } => FIRST['BitwiseOR'] { }
FIRST['BitwiseOR'] { }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
TRUE
FIRST['BitwiseAND'] { } U FIRST['BitwiseXOR'] { } => FIRST['BitwiseAND'] { }
FIRST['BitwiseAND'] { }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
TRUE
FIRST['BitwiseXOR'] { } U FIRST['AddExpr'] { } => FIRST['BitwiseXOR'] { }
FIRST['BitwiseXOR'] { }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr'] { } U FIRST['ShifExpr'] { '-' } => FIRST['AddExpr'] { '-' }
FIRST['AddExpr'] { '-' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['ShifExpr'] { '-' } U FIRST['MultExpr'] { '-','(' } => FIRST['ShifExpr'] { '-','(' }
FIRST['ShifExpr'] { '-','(' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #5  DONE!
###### First Set Iteration #5
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { } => FIRST['RelOperation'] { }
FIRST['RelOperation'] { }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
TRUE
FIRST['RelEquals'] { } U FIRST['BitwiseOR'] { } => FIRST['RelEquals'] { }
FIRST['RelEquals'] { }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
TRUE
FIRST['BitwiseOR'] { } U FIRST['BitwiseAND'] { } => FIRST['BitwiseOR'] { }
FIRST['BitwiseOR'] { }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
TRUE
FIRST['BitwiseAND'] { } U FIRST['BitwiseXOR'] { } => FIRST['BitwiseAND'] { }
FIRST['BitwiseAND'] { }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
TRUE
FIRST['BitwiseXOR'] { } U FIRST['AddExpr'] { '-' } => FIRST['BitwiseXOR'] { '-' }
FIRST['BitwiseXOR'] { '-' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['AddExpr'] { '-' } U FIRST['ShifExpr'] { '-','(' } => FIRST['AddExpr'] { '-','(' }
FIRST['AddExpr'] { '-','(' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #6  DONE!
###### First Set Iteration #6
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { } => FIRST['RelOperation'] { }
FIRST['RelOperation'] { }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
TRUE
FIRST['RelEquals'] { } U FIRST['BitwiseOR'] { } => FIRST['RelEquals'] { }
FIRST['RelEquals'] { }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
TRUE
FIRST['BitwiseOR'] { } U FIRST['BitwiseAND'] { } => FIRST['BitwiseOR'] { }
FIRST['BitwiseOR'] { }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
TRUE
FIRST['BitwiseAND'] { } U FIRST['BitwiseXOR'] { '-' } => FIRST['BitwiseAND'] { '-' }
FIRST['BitwiseAND'] { '-' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['BitwiseXOR'] { '-' } U FIRST['AddExpr'] { '-','(' } => FIRST['BitwiseXOR'] { '-','(' }
FIRST['BitwiseXOR'] { '-','(' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #7  DONE!
###### First Set Iteration #7
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { } => FIRST['RelOperation'] { }
FIRST['RelOperation'] { }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
TRUE
FIRST['RelEquals'] { } U FIRST['BitwiseOR'] { } => FIRST['RelEquals'] { }
FIRST['RelEquals'] { }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
TRUE
FIRST['BitwiseOR'] { } U FIRST['BitwiseAND'] { '-' } => FIRST['BitwiseOR'] { '-' }
FIRST['BitwiseOR'] { '-' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['BitwiseAND'] { '-' } U FIRST['BitwiseXOR'] { '-','(' } => FIRST['BitwiseAND'] { '-','(' }
FIRST['BitwiseAND'] { '-','(' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #8  DONE!
###### First Set Iteration #8
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { } => FIRST['RelOperation'] { }
FIRST['RelOperation'] { }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
TRUE
FIRST['RelEquals'] { } U FIRST['BitwiseOR'] { '-' } => FIRST['RelEquals'] { '-' }
FIRST['RelEquals'] { '-' }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['BitwiseOR'] { '-' } U FIRST['BitwiseAND'] { '-','(' } => FIRST['BitwiseOR'] { '-','(' }
FIRST['BitwiseOR'] { '-','(' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseAND'] { '-','(' } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #9  DONE!
###### First Set Iteration #9
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { } => FIRST['LogicalAND'] { }
FIRST['LogicalAND'] { }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
TRUE
FIRST['RelOperation'] { } U FIRST['RelEquals'] { '-' } => FIRST['RelOperation'] { '-' }
FIRST['RelOperation'] { '-' }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['RelEquals'] { '-' } U FIRST['BitwiseOR'] { '-','(' } => FIRST['RelEquals'] { '-','(' }
FIRST['RelEquals'] { '-','(' }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseOR'] { '-','(' } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #10  DONE!
###### First Set Iteration #10
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { } => FIRST['ArithExpr'] { }
FIRST['ArithExpr'] { }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
			Compare 'ϵ' To '-'
TRUE
FIRST['LogicalAND'] { } U FIRST['RelOperation'] { '-' } => FIRST['LogicalAND'] { '-' }
FIRST['LogicalAND'] { '-' }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['RelOperation'] { '-' } U FIRST['RelEquals'] { '-','(' } => FIRST['RelOperation'] { '-','(' }
FIRST['RelOperation'] { '-','(' }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelEquals'] { '-','(' } U FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #11  DONE!
###### First Set Iteration #11
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { } => FIRST['WhileLoop'] { }
FIRST['WhileLoop'] { }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { } => FIRST['IfStmt'] { }
FIRST['IfStmt'] { }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
			Compare 'ϵ' To '-'
TRUE
FIRST['ArithExpr'] { } U FIRST['LogicalAND'] { '-' } => FIRST['ArithExpr'] { '-' }
FIRST['ArithExpr'] { '-' }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['LogicalAND'] { '-' } U FIRST['RelOperation'] { '-','(' } => FIRST['LogicalAND'] { '-','(' }
FIRST['LogicalAND'] { '-','(' }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelOperation'] { '-','(' } U FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #12  DONE!
###### First Set Iteration #12
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
TRUE
FIRST['WhileLoop'] { } U FIRST['ArithExpr'] { '-' } => FIRST['WhileLoop'] { '-' }
FIRST['WhileLoop'] { '-' }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
TRUE
FIRST['IfStmt'] { } U FIRST['ArithExpr'] { '-' } => FIRST['IfStmt'] { '-' }
FIRST['IfStmt'] { '-' }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['ArithExpr'] { '-' } U FIRST['LogicalAND'] { '-','(' } => FIRST['ArithExpr'] { '-','(' }
FIRST['ArithExpr'] { '-','(' }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['LogicalAND'] { '-','(' } U FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #13  DONE!
###### First Set Iteration #13
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['WhileLoop'] { '-' } U FIRST['ArithExpr'] { '-','(' } => FIRST['WhileLoop'] { '-','(' }
FIRST['WhileLoop'] { '-','(' }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
TRUE
FIRST['IfStmt'] { '-' } U FIRST['ArithExpr'] { '-','(' } => FIRST['IfStmt'] { '-','(' }
FIRST['IfStmt'] { '-','(' }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ArithExpr'] { '-','(' } U FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #14  DONE!
###### First Set Iteration #14
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['WhileLoop'] { '-','(' } U FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['WhileLoop'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['WhileLoop'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IfStmt'] { '-','(' } U FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['IfStmt'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['IfStmt'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #15  DONE!
###### First Set Iteration #15
----------------------
FIRST(Action65)
Action65	-> Modules
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Action65'] { 'MODULE' } U FIRST['Modules'] { 'MODULE' } => FIRST['Action65'] { 'MODULE' }
FIRST['Action65'] { 'MODULE' }

----------------------
FIRST(Modules)
Modules	-> MODULE Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules'] { 'MODULE' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules'] { 'MODULE' }
FIRST['Modules'] { 'MODULE' }

----------------------
FIRST(Modules_1)
Modules_1	-> MODULE Module Modules_1
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['MODULE'] { 'MODULE' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

Modules_1	-> ϵ
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }

----------------------
FIRST(Module)
Module	-> SysDecls Routines
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

Module	-> Routines
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }

----------------------
FIRST(Routines)
Routines	-> Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routines'] { 'FUNC','PROC' } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['Routines'] { 'FUNC','PROC' }
FIRST['Routines'] { 'FUNC','PROC' }

----------------------
FIRST(Routines_1)
Routines_1	-> END Routine Routines_1
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['END'] { 'END' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

Routines_1	-> ϵ
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Routines_1'] { 'END','ϵ' }
FIRST['Routines_1'] { 'END','ϵ' }

----------------------
FIRST(Routine)
Routine	-> FUNC FundType FuncDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['FUNC'] { 'FUNC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

Routine	-> PROC ProcDecl BEGIN ProcBody
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['Routine'] { 'FUNC','PROC' } U FIRST['PROC'] { 'PROC' } => FIRST['Routine'] { 'FUNC','PROC' }
FIRST['Routine'] { 'FUNC','PROC' }

----------------------
FIRST(ProcBody)
ProcBody	-> SysDecls ProcBody_1
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ProcBody_1)
ProcBody_1	-> Statements
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ProcBody_1'] { } U FIRST['Statements'] { } => FIRST['ProcBody_1'] { }
FIRST['ProcBody_1'] { }

----------------------
FIRST(ProcDecl)
ProcDecl	-> ProcIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcDecl'] { 'PROC_IDENT' } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }

----------------------
FIRST(FuncDecl)
FuncDecl	-> FuncIdent OptInit ( ParamList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncDecl'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }

----------------------
FIRST(FuncIdent)
FuncIdent	-> FUNC_IDENT
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FuncIdent'] { 'FUNC_IDENT' } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }

----------------------
FIRST(ProcIdent)
ProcIdent	-> PROC_IDENT
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['ProcIdent'] { 'PROC_IDENT' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['ProcIdent'] { 'PROC_IDENT' }

----------------------
FIRST(Statements)
Statements	-> Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statements'] { }

----------------------
FIRST(Statements_1)
Statements_1	-> ; Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[';'] { ';' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> FI Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['FI'] { 'FI' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> OD Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['OD'] { 'OD' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ) Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[')'] { ')' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ] Statement Statements_1
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST[']'] { ']' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

Statements_1	-> ϵ
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }

----------------------
FIRST(Statement)
Statement	-> StructStmts
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['Statement'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Statement'] { 'ϵ' }
FIRST['Statement'] { 'ϵ' }

----------------------
FIRST(StructStmts)
StructStmts	-> PROC_IDENT ( IdentList
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> IF IfStmt
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['IF'] { 'IF' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> WHILE WhileLoop
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['WHILE'] { 'WHILE' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> DO DoLoop
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['DO'] { 'DO' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

StructStmts	-> ϵ
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }

----------------------
FIRST(WhileLoop)
WhileLoop	-> ArithExpr DO Statements
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['WhileLoop'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['WhileLoop'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['WhileLoop'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(DoLoop)
DoLoop	-> Statements UNTILLstmt ;
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['DoLoop'] { } U FIRST['Statements'] { } => FIRST['DoLoop'] { }
FIRST['DoLoop'] { }

----------------------
FIRST(UNTILLstmt)
UNTILLstmt	-> UNTILL ArithExpr
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['UNTILLstmt'] { 'UNTILL' } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['UNTILLstmt'] { 'UNTILL' }

----------------------
FIRST(IfStmt)
IfStmt	-> ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IfStmt'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['IfStmt'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['IfStmt'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ThenPart)
ThenPart	-> THEN ThenPart_1
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['ThenPart'] { 'THEN' } U FIRST['THEN'] { 'THEN' } => FIRST['ThenPart'] { 'THEN' }
FIRST['ThenPart'] { 'THEN' }

----------------------
FIRST(ThenPart_1)
ThenPart_1	-> Statements ElseIfPart
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['ThenPart_1'] { } U FIRST['Statements'] { } => FIRST['ThenPart_1'] { }
FIRST['ThenPart_1'] { }

----------------------
FIRST(ElseIfPart)
ElseIfPart	-> ELSEIF ArithExpr ThenPart
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ELSE Statements
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ELSE'] { 'ELSE' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

ElseIfPart	-> ϵ
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }

----------------------
FIRST(ArithExpr)
ArithExpr	-> LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(LogicalOR_1)
LogicalOR_1	-> OR LogicalAND LogicalOR_1
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['OR'] { 'OR' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

LogicalOR_1	-> ϵ
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }

----------------------
FIRST(LogicalAND)
LogicalAND	-> RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(LogicalAND_1)
LogicalAND_1	-> AND RelOperation LogicalAND_1
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['AND'] { 'AND' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

LogicalAND_1	-> ϵ
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }

----------------------
FIRST(RelOperation)
RelOperation	-> RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelOperation_1)
RelOperation_1	-> > RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['>'] { '>' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> < RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['<'] { '<' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> GTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> LTEQ RelEquals RelOperation_1
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

RelOperation_1	-> ϵ
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }

----------------------
FIRST(RelEquals)
RelEquals	-> BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(RelEquals_1)
RelEquals_1	-> = BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['='] { '=' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> # BitwiseOR RelEquals_1
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['#'] { '#' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

RelEquals_1	-> ϵ
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['RelEquals_1'] { '=','#','ϵ' }

----------------------
FIRST(BitwiseOR)
BitwiseOR	-> BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseOR_1)
BitwiseOR_1	-> % BitwiseAND BitwiseOR_1
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['%'] { '%' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

BitwiseOR_1	-> ϵ
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['BitwiseOR_1'] { '%','ϵ' }

----------------------
FIRST(BitwiseAND)
BitwiseAND	-> BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(BitwiseAND_1)
BitwiseAND_1	-> & BitwiseXOR BitwiseAND_1
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['&'] { '&' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

BitwiseAND_1	-> ϵ
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['BitwiseAND_1'] { '&','ϵ' }

----------------------
FIRST(BitwiseXOR)
BitwiseXOR	-> AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(SimpleRelExpr_1)
SimpleRelExpr_1	-> ! AddExpr SimpleRelExpr_1
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['!'] { '!' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

SimpleRelExpr_1	-> ϵ
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }

----------------------
FIRST(AddExpr)
AddExpr	-> ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(AddExpr_1)
AddExpr_1	-> + ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['+'] { '+' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> - ShifExpr AddExpr_1
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['-'] { '-' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

AddExpr_1	-> ϵ
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['AddExpr_1'] { '+','-','ϵ' }

----------------------
FIRST(ShifExpr)
ShifExpr	-> MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(ShiftExpr_1)
ShiftExpr_1	-> LSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['LSH'] { 'LSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> RSH MultExpr ShiftExpr_1
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['RSH'] { 'RSH' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

ShiftExpr_1	-> ϵ
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }

----------------------
FIRST(MultExpr)
MultExpr	-> Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(MultExpr_1)
MultExpr_1	-> * Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['*'] { '*' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> / Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['/'] { '/' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> MOD Unary MultExpr_1
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['MOD'] { 'MOD' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

MultExpr_1	-> ϵ
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }

----------------------
FIRST(Unary)
Unary	-> - Unary
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['-'] { '-' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Unary	-> Factor
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(Factor)
Factor	-> BaseCompConst
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> FUNCcall
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['('] { '(' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

Factor	-> MemContents
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----------------------
FIRST(FUNCcall)
FUNCcall	-> FuncIdent ( IdentList )
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['FUNCcall'] { 'FUNC_IDENT' } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }

----------------------
FIRST(IdentList)
IdentList	-> MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['IdentList'] { 'IDENT' } U FIRST['MemContents'] { 'IDENT' } => FIRST['IdentList'] { 'IDENT' }
FIRST['IdentList'] { 'IDENT' }

----------------------
FIRST(IdentList_1)
IdentList_1	-> , MemContents IdentList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['IdentList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

IdentList_1	-> ϵ
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['IdentList_1'] { ',','ϵ' }
FIRST['IdentList_1'] { ',','ϵ' }

----------------------
FIRST(FundType)
FundType	-> BOOL
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CHAR OptModifier
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CHAR'] { 'CHAR' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> BYTE OptModifier
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['BYTE'] { 'BYTE' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> INT OptModifier
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['INT'] { 'INT' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

FundType	-> CARD OptModifier
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' } U FIRST['CARD'] { 'CARD' } => FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }

----------------------
FIRST(OptModifier)
OptModifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

OptModifier	-> ϵ
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['OptModifier'] { 'POINTER','ϵ' }

----------------------
FIRST(ParamList)
ParamList	-> Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(ParamList_1)
ParamList_1	-> , Param ParamList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['ParamList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

ParamList_1	-> ϵ
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ParamList_1'] { ',','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }

----------------------
FIRST(Param)
Param	-> RECORDTYPE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CHAR OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BYTE OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> INT OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> CARD OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

Param	-> BOOL OptModifier Ident
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(VarDecls)
VarDecls	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BYTE'] { 'BYTE' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['INT'] { 'INT' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['CARD'] { 'CARD' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

VarDecls	-> BOOL Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['BOOL'] { 'BOOL' } => FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls)
SysDecls	-> SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(SysDecls_1)
SysDecls_1	-> ; SysDecl SysDecls_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

SysDecls_1	-> ϵ
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['SysDecls_1'] { ';','ϵ' }

----------------------
FIRST(SysDecl)
SysDecl	-> DEFINE DefList
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> TYPE RecIdent
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['TYPE'] { 'TYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> RECORDTYPE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CHAR Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CHAR'] { 'CHAR' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BYTE Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BYTE'] { 'BYTE' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> INT Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['INT'] { 'INT' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> CARD Modifier VarList
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['CARD'] { 'CARD' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> BOOL VarList
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['BOOL'] { 'BOOL' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

SysDecl	-> ϵ
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }

----------------------
FIRST(VarList)
VarList	-> VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarList'] { 'IDENT' } U FIRST['VarName'] { 'IDENT' } => FIRST['VarList'] { 'IDENT' }
FIRST['VarList'] { 'IDENT' }

----------------------
FIRST(VarList_1)
VarList_1	-> , VarName VarList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['VarList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

VarList_1	-> ϵ
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['VarList_1'] { ',','ϵ' }
FIRST['VarList_1'] { ',','ϵ' }

----------------------
FIRST(VarName)
VarName	-> Ident OptInit
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['VarName'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['VarName'] { 'IDENT' }
FIRST['VarName'] { 'IDENT' }

----------------------
FIRST(OptInit)
OptInit	-> = CompConst
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

OptInit	-> ϵ
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptInit'] { '=','ϵ' }
FIRST['OptInit'] { '=','ϵ' }

----------------------
FIRST(DefList)
DefList	-> Def DefList_1
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['DefList'] { 'IDENT' } U FIRST['Def'] { 'IDENT' } => FIRST['DefList'] { 'IDENT' }
FIRST['DefList'] { 'IDENT' }

----------------------
FIRST(DefList_1)
DefList_1	-> , Def DefList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['DefList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

DefList_1	-> ϵ
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['DefList_1'] { ',','ϵ' }
FIRST['DefList_1'] { ',','ϵ' }

----------------------
FIRST(Def)
Def	-> Ident = CompConst
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Def'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['Def'] { 'IDENT' }
FIRST['Def'] { 'IDENT' }

----------------------
FIRST(RecIdent)
RecIdent	-> RecField
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecIdent'] { '=' } U FIRST['RecField'] { '=' } => FIRST['RecIdent'] { '=' }
FIRST['RecIdent'] { '=' }

----------------------
FIRST(RecField)
RecField	-> = [ RecFieldList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['RecField'] { '=' } U FIRST['='] { '=' } => FIRST['RecField'] { '=' }
FIRST['RecField'] { '=' }

----------------------
FIRST(RecFieldList)
RecFieldList	-> VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }

----------------------
FIRST(RecFieldList_1)
RecFieldList_1	-> ; VarDecls RecFieldList_1
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST[';'] { ';' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

RecFieldList_1	-> ϵ
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }

----------------------
FIRST(Modifier)
Modifier	-> POINTER
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['POINTER'] { 'POINTER' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ARRAY ArrayStuff
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

Modifier	-> ϵ
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }

----------------------
FIRST(ArrayStuff)
ArrayStuff	-> ( CompConst ) OptArrayInit
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['('] { '(' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

ArrayStuff	-> ϵ
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }

----------------------
FIRST(OptArrayInit)
OptArrayInit	-> = [ CompConstList ]
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['='] { '=' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

OptArrayInit	-> ϵ
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['OptArrayInit'] { '=','ϵ' }

----------------------
FIRST(CompConstList)
CompConstList	-> CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConstList'] { 'NUMBER','*','@' } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['CompConstList'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConstList_1)
CompConstList_1	-> , CompConst CompConstList_1
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST[','] { ',' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

CompConstList_1	-> ϵ
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['CompConstList_1'] { ',','ϵ' }

----------------------
FIRST(CompConst)
CompConst	-> BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['CompConst'] { 'NUMBER','*','@' } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['CompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(CompConst_1)
CompConst_1	-> + BaseCompConst CompConst_1
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['+'] { '+' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

CompConst_1	-> ϵ
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['CompConst_1'] { '+','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }

----------------------
FIRST(BaseCompConst)
BaseCompConst	-> NUMBER
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> *
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['*'] { '*' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

BaseCompConst	-> @ MemContents
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['BaseCompConst'] { 'NUMBER','*','@' } U FIRST['@'] { '@' } => FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }

----------------------
FIRST(Ident)
Ident	-> IDENT
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['Ident'] { 'IDENT' } U FIRST['IDENT'] { 'IDENT' } => FIRST['Ident'] { 'IDENT' }
FIRST['Ident'] { 'IDENT' }

----------------------
FIRST(MemContents)
MemContents	-> Ident MemContentsType
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['MemContents'] { 'IDENT' } U FIRST['Ident'] { 'IDENT' } => FIRST['MemContents'] { 'IDENT' }
FIRST['MemContents'] { 'IDENT' }

----------------------
FIRST(MemContentsType)
MemContentsType	-> ( ArithExpr )
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['('] { '(' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ^
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['^'] { '^' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> . Ident
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['.'] { '.' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

MemContentsType	-> ϵ
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }

###### Iteration #16  DONE!
FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['StructStmts'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr_1'] { '+','-','ϵ' }
FIRST['IdentList'] { 'IDENT' }
FIRST['FUNCcall'] { 'FUNC_IDENT' }
FIRST['MultExpr_1'] { '*','/','MOD','ϵ' }
FIRST['RecField'] { '=' }
FIRST['SysDecls'] { 'ϵ','DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['BitwiseOR_1'] { '%','ϵ' }
FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['LogicalAND_1'] { 'AND','ϵ' }
FIRST['ParamList_1'] { ',','ϵ' }
FIRST['DoLoop'] { }
FIRST['OptModifier'] { 'POINTER','ϵ' }
FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Routine'] { 'FUNC','PROC' }
FIRST['WhileLoop'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['RecIdent'] { '=' }
FIRST['CompConstList'] { 'NUMBER','*','@' }
FIRST['Def'] { 'IDENT' }
FIRST['ProcBody_1'] { }
FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Statement'] { 'ϵ' }
FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Ident'] { 'IDENT' }
FIRST['ThenPart_1'] { }
FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Statements_1'] { ';','FI','OD',')',']','ϵ' }
FIRST['Module'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['SysDecl'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['DefList'] { 'IDENT' }
FIRST['ProcDecl'] { 'PROC_IDENT' }
FIRST['BaseCompConst'] { 'NUMBER','*','@' }
FIRST['Modifier'] { 'POINTER','ARRAY','ϵ' }
FIRST['ShiftExpr_1'] { 'LSH','RSH','ϵ' }
FIRST['ArrayStuff'] { '(','ϵ' }
FIRST['FuncDecl'] { 'FUNC_IDENT' }
FIRST['RelEquals_1'] { '=','#','ϵ' }
FIRST['SimpleRelExpr_1'] { '!','ϵ' }
FIRST['FuncIdent'] { 'FUNC_IDENT' }
FIRST['VarList_1'] { ',','ϵ' }
FIRST['Action65'] { 'MODULE' }
FIRST['OptInit'] { '=','ϵ' }
FIRST['LogicalOR_1'] { 'OR','ϵ' }
FIRST['VarList'] { 'IDENT' }
FIRST['SysDecls_1'] { ';','ϵ' }
FIRST['CompConst_1'] { '+','ϵ' }
FIRST['RecFieldList_1'] { ';','ϵ' }
FIRST['ThenPart'] { 'THEN' }
FIRST['BitwiseAND_1'] { '&','ϵ' }
FIRST['MemContents'] { 'IDENT' }
FIRST['RecFieldList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['ParamList'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['OptArrayInit'] { '=','ϵ' }
FIRST['UNTILLstmt'] { 'UNTILL' }
FIRST['ElseIfPart'] { 'ELSEIF','ELSE','ϵ' }
FIRST['RelOperation_1'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['FundType'] { 'BOOL','CHAR','BYTE','INT','CARD' }
FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['CompConstList_1'] { ',','ϵ' }
FIRST['Modules_1'] { 'MODULE','ϵ' }
FIRST['CompConst'] { 'NUMBER','*','@' }
FIRST['Routines_1'] { 'END','ϵ' }
FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['MemContentsType'] { '(','^','.','ϵ' }
FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
FIRST['Routines'] { 'FUNC','PROC' }
FIRST['VarName'] { 'IDENT' }
FIRST['DefList_1'] { ',','ϵ' }
FIRST['Statements'] { }
FIRST['IdentList_1'] { ',','ϵ' }
FIRST['ProcBody'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
FIRST['Modules'] { 'MODULE' }
FIRST['ProcIdent'] { 'PROC_IDENT' }
FIRST['IfStmt'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }

----- Calc Follow Sets------
######### Follow Set Itteration #1
------------Looking For Action65 ---------------
------------Looking For Modules ---------------
Rule 3:Action65-> Modules
FOLLOW['Modules'] { } U FOLLOW['Action65'] { '$' } => FOLLOW['Modules'] { '$' }
------------Looking For Modules_1 ---------------
------------Looking For Module ---------------
	Modules_1-> MODULE Module Modules_1
Is ϵ in Set FIRST['Modules_1']
TRUE
Rule 2 3 4:Modules_1-> MODULE Module Modules_1
FOLLOW['Modules_1'] { } U FOLLOW['Modules_1'] { } => FOLLOW['Modules_1'] { }
FOLLOW['Module'] { 'MODULE' } U FOLLOW['Modules_1'] { } => FOLLOW['Module'] { 'MODULE' }
------------Looking For Routines ---------------
Rule 3:Module-> Routines
FOLLOW['Routines'] { } U FOLLOW['Module'] { 'MODULE' } => FOLLOW['Routines'] { 'MODULE' }
------------Looking For Routines_1 ---------------
------------Looking For Routine ---------------
	Routines-> Routine Routines_1
Is ϵ in Set FIRST['Routines_1']
TRUE
Rule 2 3 4:Routines-> Routine Routines_1
FOLLOW['Routines_1'] { } U FOLLOW['Routines'] { 'MODULE' } => FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['Routine'] { 'END' } U FOLLOW['Routines'] { 'MODULE' } => FOLLOW['Routine'] { 'END','MODULE' }
	Routines_1-> END Routine Routines_1
Is ϵ in Set FIRST['Routines_1']
TRUE
Rule 2 3 4:Routines_1-> END Routine Routines_1
FOLLOW['Routines_1'] { 'MODULE' } U FOLLOW['Routines_1'] { 'MODULE' } => FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['Routine'] { 'END','MODULE' } U FOLLOW['Routines_1'] { 'MODULE' } => FOLLOW['Routine'] { 'END','MODULE' }
------------Looking For ProcBody ---------------
------------Looking For ProcBody_1 ---------------
------------Looking For ProcDecl ---------------
------------Looking For FuncDecl ---------------
------------Looking For FuncIdent ---------------
------------Looking For ProcIdent ---------------
------------Looking For Statements ---------------
Rule 3:ProcBody_1-> Statements
FOLLOW['Statements'] { } U FOLLOW['ProcBody_1'] { } => FOLLOW['Statements'] { }
	ThenPart_1-> Statements ElseIfPart
Is ϵ in Set FIRST['ElseIfPart']
TRUE
Rule 2 3 4:ThenPart_1-> Statements ElseIfPart
FOLLOW['ElseIfPart'] { } U FOLLOW['ThenPart_1'] { } => FOLLOW['ElseIfPart'] { }
FOLLOW['Statements'] { 'ELSEIF','ELSE' } U FOLLOW['ThenPart_1'] { } => FOLLOW['Statements'] { 'ELSEIF','ELSE' }
------------Looking For Statements_1 ---------------
------------Looking For Statement ---------------
	Statements-> Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements-> Statement Statements_1
FOLLOW['Statements_1'] { } U FOLLOW['Statements'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']' } U FOLLOW['Statements'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ; Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ; Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> FI Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> FI Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> OD Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> OD Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ) Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ) Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ] Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ] Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
------------Looking For StructStmts ---------------
Rule 3:Statement-> StructStmts
FOLLOW['StructStmts'] { } U FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } => FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
------------Looking For WhileLoop ---------------
------------Looking For DoLoop ---------------
------------Looking For UNTILLstmt ---------------
	DoLoop-> Statements UNTILLstmt ;
Is ϵ in Set FIRST[';']
FALSE
Rule 2 3:DoLoop-> Statements UNTILLstmt ;
FOLLOW[';'] { } U FOLLOW['DoLoop'] { } => FOLLOW[';'] { }
------------Looking For IfStmt ---------------
------------Looking For ThenPart ---------------
------------Looking For ThenPart_1 ---------------
------------Looking For ElseIfPart ---------------
------------Looking For ArithExpr ---------------
	IfStmt-> ArithExpr ThenPart
Is ϵ in Set FIRST['ThenPart']
FALSE
Rule 2 3:IfStmt-> ArithExpr ThenPart
FOLLOW['ThenPart'] { } U FOLLOW['IfStmt'] { } => FOLLOW['ThenPart'] { }
	ElseIfPart-> ELSEIF ArithExpr ThenPart
Is ϵ in Set FIRST['ThenPart']
FALSE
Rule 2 3:ElseIfPart-> ELSEIF ArithExpr ThenPart
FOLLOW['ThenPart'] { } U FOLLOW['ElseIfPart'] { } => FOLLOW['ThenPart'] { }
	Factor-> ( ArithExpr )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:Factor-> ( ArithExpr )
FOLLOW[')'] { } U FOLLOW['Factor'] { } => FOLLOW[')'] { }
	MemContentsType-> ( ArithExpr )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:MemContentsType-> ( ArithExpr )
FOLLOW[')'] { } U FOLLOW['MemContentsType'] { } => FOLLOW[')'] { }
------------Looking For LogicalOR_1 ---------------
------------Looking For LogicalAND ---------------
	ArithExpr-> LogicalAND LogicalOR_1
Is ϵ in Set FIRST['LogicalOR_1']
TRUE
Rule 2 3 4:ArithExpr-> LogicalAND LogicalOR_1
FOLLOW['LogicalOR_1'] { } U FOLLOW['ArithExpr'] { 'THEN',')' } => FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['LogicalAND'] { 'OR' } U FOLLOW['ArithExpr'] { 'THEN',')' } => FOLLOW['LogicalAND'] { 'OR','THEN',')' }
	LogicalOR_1-> OR LogicalAND LogicalOR_1
Is ϵ in Set FIRST['LogicalOR_1']
TRUE
Rule 2 3 4:LogicalOR_1-> OR LogicalAND LogicalOR_1
FOLLOW['LogicalOR_1'] { 'THEN',')' } U FOLLOW['LogicalOR_1'] { 'THEN',')' } => FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['LogicalAND'] { 'OR','THEN',')' } U FOLLOW['LogicalOR_1'] { 'THEN',')' } => FOLLOW['LogicalAND'] { 'OR','THEN',')' }
------------Looking For LogicalAND_1 ---------------
------------Looking For RelOperation ---------------
	LogicalAND-> RelOperation LogicalAND_1
Is ϵ in Set FIRST['LogicalAND_1']
TRUE
Rule 2 3 4:LogicalAND-> RelOperation LogicalAND_1
FOLLOW['LogicalAND_1'] { } U FOLLOW['LogicalAND'] { 'OR','THEN',')' } => FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['RelOperation'] { 'AND' } U FOLLOW['LogicalAND'] { 'OR','THEN',')' } => FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
	LogicalAND_1-> AND RelOperation LogicalAND_1
Is ϵ in Set FIRST['LogicalAND_1']
TRUE
Rule 2 3 4:LogicalAND_1-> AND RelOperation LogicalAND_1
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } U FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } => FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } U FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } => FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
------------Looking For RelOperation_1 ---------------
------------Looking For RelEquals ---------------
	RelOperation-> RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation-> RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { } U FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ' } U FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> > RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> > RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> < RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> < RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> GTEQ RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> GTEQ RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> LTEQ RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> LTEQ RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For RelEquals_1 ---------------
------------Looking For BitwiseOR ---------------
	RelEquals-> BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals-> BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { } U FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#' } U FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelEquals_1-> = BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals_1-> = BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelEquals_1-> # BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals_1-> # BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For BitwiseOR_1 ---------------
------------Looking For BitwiseAND ---------------
	BitwiseOR-> BitwiseAND BitwiseOR_1
Is ϵ in Set FIRST['BitwiseOR_1']
TRUE
Rule 2 3 4:BitwiseOR-> BitwiseAND BitwiseOR_1
FOLLOW['BitwiseOR_1'] { } U FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseAND'] { '%' } U FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	BitwiseOR_1-> % BitwiseAND BitwiseOR_1
Is ϵ in Set FIRST['BitwiseOR_1']
TRUE
Rule 2 3 4:BitwiseOR_1-> % BitwiseAND BitwiseOR_1
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For BitwiseAND_1 ---------------
------------Looking For BitwiseXOR ---------------
	BitwiseAND-> BitwiseXOR BitwiseAND_1
Is ϵ in Set FIRST['BitwiseAND_1']
TRUE
Rule 2 3 4:BitwiseAND-> BitwiseXOR BitwiseAND_1
FOLLOW['BitwiseAND_1'] { } U FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseXOR'] { '&' } U FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
Is ϵ in Set FIRST['BitwiseAND_1']
TRUE
Rule 2 3 4:BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For SimpleRelExpr_1 ---------------
------------Looking For AddExpr ---------------
	BitwiseXOR-> AddExpr SimpleRelExpr_1
Is ϵ in Set FIRST['SimpleRelExpr_1']
TRUE
Rule 2 3 4:BitwiseXOR-> AddExpr SimpleRelExpr_1
FOLLOW['SimpleRelExpr_1'] { } U FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!' } U FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
Is ϵ in Set FIRST['SimpleRelExpr_1']
TRUE
Rule 2 3 4:SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For AddExpr_1 ---------------
------------Looking For ShifExpr ---------------
	AddExpr-> ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr-> ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { } U FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-' } U FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	AddExpr_1-> + ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr_1-> + ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	AddExpr_1-> - ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr_1-> - ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For ShiftExpr_1 ---------------
------------Looking For MultExpr ---------------
	ShifExpr-> MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShifExpr-> MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { } U FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH' } U FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	ShiftExpr_1-> LSH MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShiftExpr_1-> LSH MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	ShiftExpr_1-> RSH MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShiftExpr_1-> RSH MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For MultExpr_1 ---------------
------------Looking For Unary ---------------
	MultExpr-> Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr-> Unary MultExpr_1
FOLLOW['MultExpr_1'] { } U FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD' } U FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> * Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> * Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> / Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> / Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> MOD Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> MOD Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For Factor ---------------
Rule 3:Unary-> Factor
FOLLOW['Factor'] { } U FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For FUNCcall ---------------
Rule 3:Factor-> FUNCcall
FOLLOW['FUNCcall'] { } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For IdentList ---------------
	FUNCcall-> FuncIdent ( IdentList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:FUNCcall-> FuncIdent ( IdentList )
FOLLOW[')'] { } U FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For IdentList_1 ---------------
------------Looking For FundType ---------------
------------Looking For OptModifier ---------------
	Param-> RECORDTYPE OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> RECORDTYPE OptModifier Ident
FOLLOW['Ident'] { } U FOLLOW['Param'] { } => FOLLOW['Ident'] { }
	Param-> CHAR OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> CHAR OptModifier Ident
FOLLOW['Ident'] { } U FOLLOW['Param'] { } => FOLLOW['Ident'] { }
	Param-> BYTE OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> BYTE OptModifier Ident
FOLLOW['Ident'] { } U FOLLOW['Param'] { } => FOLLOW['Ident'] { }
	Param-> INT OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> INT OptModifier Ident
FOLLOW['Ident'] { } U FOLLOW['Param'] { } => FOLLOW['Ident'] { }
	Param-> CARD OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> CARD OptModifier Ident
FOLLOW['Ident'] { } U FOLLOW['Param'] { } => FOLLOW['Ident'] { }
	Param-> BOOL OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> BOOL OptModifier Ident
FOLLOW['Ident'] { } U FOLLOW['Param'] { } => FOLLOW['Ident'] { }
------------Looking For ParamList ---------------
	ProcDecl-> ProcIdent OptInit ( ParamList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:ProcDecl-> ProcIdent OptInit ( ParamList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ProcDecl'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	FuncDecl-> FuncIdent OptInit ( ParamList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:FuncDecl-> FuncIdent OptInit ( ParamList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['FuncDecl'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For ParamList_1 ---------------
------------Looking For Param ---------------
	ParamList-> Param ParamList_1
Is ϵ in Set FIRST['ParamList_1']
TRUE
Rule 2 3 4:ParamList-> Param ParamList_1
FOLLOW['ParamList_1'] { } U FOLLOW['ParamList'] { ')' } => FOLLOW['ParamList_1'] { ')' }
FOLLOW['Param'] { ',' } U FOLLOW['ParamList'] { ')' } => FOLLOW['Param'] { ',',')' }
	ParamList_1-> , Param ParamList_1
Is ϵ in Set FIRST['ParamList_1']
TRUE
Rule 2 3 4:ParamList_1-> , Param ParamList_1
FOLLOW['ParamList_1'] { ')' } U FOLLOW['ParamList_1'] { ')' } => FOLLOW['ParamList_1'] { ')' }
FOLLOW['Param'] { ',',')' } U FOLLOW['ParamList_1'] { ')' } => FOLLOW['Param'] { ',',')' }
------------Looking For VarDecls ---------------
	RecFieldList-> VarDecls RecFieldList_1
Is ϵ in Set FIRST['RecFieldList_1']
TRUE
Rule 2 3 4:RecFieldList-> VarDecls RecFieldList_1
FOLLOW['RecFieldList_1'] { } U FOLLOW['RecFieldList'] { } => FOLLOW['RecFieldList_1'] { }
FOLLOW['VarDecls'] { ';' } U FOLLOW['RecFieldList'] { } => FOLLOW['VarDecls'] { ';' }
	RecFieldList_1-> ; VarDecls RecFieldList_1
Is ϵ in Set FIRST['RecFieldList_1']
TRUE
Rule 2 3 4:RecFieldList_1-> ; VarDecls RecFieldList_1
FOLLOW['RecFieldList_1'] { } U FOLLOW['RecFieldList_1'] { } => FOLLOW['RecFieldList_1'] { }
FOLLOW['VarDecls'] { ';' } U FOLLOW['RecFieldList_1'] { } => FOLLOW['VarDecls'] { ';' }
------------Looking For SysDecls ---------------
	Module-> SysDecls Routines
Is ϵ in Set FIRST['Routines']
FALSE
Rule 2 3:Module-> SysDecls Routines
FOLLOW['Routines'] { 'MODULE' } U FOLLOW['Module'] { 'MODULE' } => FOLLOW['Routines'] { 'MODULE' }
	ProcBody-> SysDecls ProcBody_1
Is ϵ in Set FIRST['ProcBody_1']
FALSE
Rule 2 3:ProcBody-> SysDecls ProcBody_1
FOLLOW['ProcBody_1'] { } U FOLLOW['ProcBody'] { } => FOLLOW['ProcBody_1'] { }
------------Looking For SysDecls_1 ---------------
------------Looking For SysDecl ---------------
	SysDecls-> SysDecl SysDecls_1
Is ϵ in Set FIRST['SysDecls_1']
TRUE
Rule 2 3 4:SysDecls-> SysDecl SysDecls_1
FOLLOW['SysDecls_1'] { } U FOLLOW['SysDecls'] { 'FUNC','PROC' } => FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['SysDecl'] { ';' } U FOLLOW['SysDecls'] { 'FUNC','PROC' } => FOLLOW['SysDecl'] { ';','FUNC','PROC' }
	SysDecls_1-> ; SysDecl SysDecls_1
Is ϵ in Set FIRST['SysDecls_1']
TRUE
Rule 2 3 4:SysDecls_1-> ; SysDecl SysDecls_1
FOLLOW['SysDecls_1'] { 'FUNC','PROC' } U FOLLOW['SysDecls_1'] { 'FUNC','PROC' } => FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['SysDecl'] { ';','FUNC','PROC' } U FOLLOW['SysDecls_1'] { 'FUNC','PROC' } => FOLLOW['SysDecl'] { ';','FUNC','PROC' }
------------Looking For VarList ---------------
------------Looking For VarList_1 ---------------
------------Looking For VarName ---------------
	VarList-> VarName VarList_1
Is ϵ in Set FIRST['VarList_1']
TRUE
Rule 2 3 4:VarList-> VarName VarList_1
FOLLOW['VarList_1'] { } U FOLLOW['VarList'] { } => FOLLOW['VarList_1'] { }
FOLLOW['VarName'] { ',' } U FOLLOW['VarList'] { } => FOLLOW['VarName'] { ',' }
	VarList_1-> , VarName VarList_1
Is ϵ in Set FIRST['VarList_1']
TRUE
Rule 2 3 4:VarList_1-> , VarName VarList_1
FOLLOW['VarList_1'] { } U FOLLOW['VarList_1'] { } => FOLLOW['VarList_1'] { }
FOLLOW['VarName'] { ',' } U FOLLOW['VarList_1'] { } => FOLLOW['VarName'] { ',' }
------------Looking For OptInit ---------------
------------Looking For DefList ---------------
------------Looking For DefList_1 ---------------
------------Looking For Def ---------------
	DefList-> Def DefList_1
Is ϵ in Set FIRST['DefList_1']
TRUE
Rule 2 3 4:DefList-> Def DefList_1
FOLLOW['DefList_1'] { } U FOLLOW['DefList'] { } => FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' } U FOLLOW['DefList'] { } => FOLLOW['Def'] { ',' }
	DefList_1-> , Def DefList_1
Is ϵ in Set FIRST['DefList_1']
TRUE
Rule 2 3 4:DefList_1-> , Def DefList_1
FOLLOW['DefList_1'] { } U FOLLOW['DefList_1'] { } => FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' } U FOLLOW['DefList_1'] { } => FOLLOW['Def'] { ',' }
------------Looking For RecIdent ---------------
------------Looking For RecField ---------------
Rule 3:RecIdent-> RecField
FOLLOW['RecField'] { } U FOLLOW['RecIdent'] { } => FOLLOW['RecField'] { }
------------Looking For RecFieldList ---------------
	RecField-> = [ RecFieldList ]
Is ϵ in Set FIRST[']']
FALSE
Rule 2 3:RecField-> = [ RecFieldList ]
FOLLOW[']'] { } U FOLLOW['RecField'] { } => FOLLOW[']'] { }
------------Looking For RecFieldList_1 ---------------
------------Looking For Modifier ---------------
	VarDecls-> RECORDTYPE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> RECORDTYPE Modifier VarList
FOLLOW['VarList'] { } U FOLLOW['VarDecls'] { ';' } => FOLLOW['VarList'] { ';' }
	VarDecls-> CHAR Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> CHAR Modifier VarList
FOLLOW['VarList'] { ';' } U FOLLOW['VarDecls'] { ';' } => FOLLOW['VarList'] { ';' }
	VarDecls-> BYTE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> BYTE Modifier VarList
FOLLOW['VarList'] { ';' } U FOLLOW['VarDecls'] { ';' } => FOLLOW['VarList'] { ';' }
	VarDecls-> INT Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> INT Modifier VarList
FOLLOW['VarList'] { ';' } U FOLLOW['VarDecls'] { ';' } => FOLLOW['VarList'] { ';' }
	VarDecls-> CARD Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> CARD Modifier VarList
FOLLOW['VarList'] { ';' } U FOLLOW['VarDecls'] { ';' } => FOLLOW['VarList'] { ';' }
	VarDecls-> BOOL Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> BOOL Modifier VarList
FOLLOW['VarList'] { ';' } U FOLLOW['VarDecls'] { ';' } => FOLLOW['VarList'] { ';' }
	SysDecl-> RECORDTYPE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> RECORDTYPE Modifier VarList
FOLLOW['VarList'] { ';' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC' }
	SysDecl-> CHAR Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> CHAR Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC' }
	SysDecl-> BYTE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> BYTE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC' }
	SysDecl-> INT Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> INT Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC' }
	SysDecl-> CARD Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> CARD Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC' }
------------Looking For ArrayStuff ---------------
------------Looking For OptArrayInit ---------------
------------Looking For CompConstList ---------------
	OptArrayInit-> = [ CompConstList ]
Is ϵ in Set FIRST[']']
FALSE
Rule 2 3:OptArrayInit-> = [ CompConstList ]
FOLLOW[']'] { } U FOLLOW['OptArrayInit'] { } => FOLLOW[']'] { }
------------Looking For CompConstList_1 ---------------
------------Looking For CompConst ---------------
	CompConstList-> CompConst CompConstList_1
Is ϵ in Set FIRST['CompConstList_1']
TRUE
Rule 2 3 4:CompConstList-> CompConst CompConstList_1
FOLLOW['CompConstList_1'] { } U FOLLOW['CompConstList'] { ']' } => FOLLOW['CompConstList_1'] { ']' }
FOLLOW['CompConst'] { ',' } U FOLLOW['CompConstList'] { ']' } => FOLLOW['CompConst'] { ',',']' }
	CompConstList_1-> , CompConst CompConstList_1
Is ϵ in Set FIRST['CompConstList_1']
TRUE
Rule 2 3 4:CompConstList_1-> , CompConst CompConstList_1
FOLLOW['CompConstList_1'] { ']' } U FOLLOW['CompConstList_1'] { ']' } => FOLLOW['CompConstList_1'] { ']' }
FOLLOW['CompConst'] { ',',']' } U FOLLOW['CompConstList_1'] { ']' } => FOLLOW['CompConst'] { ',',']' }
------------Looking For CompConst_1 ---------------
------------Looking For BaseCompConst ---------------
Rule 3:Factor-> BaseCompConst
FOLLOW['BaseCompConst'] { } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	CompConst-> BaseCompConst CompConst_1
Is ϵ in Set FIRST['CompConst_1']
TRUE
Rule 2 3 4:CompConst-> BaseCompConst CompConst_1
FOLLOW['CompConst_1'] { } U FOLLOW['CompConst'] { ',',']' } => FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['CompConst'] { ',',']' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
	CompConst_1-> + BaseCompConst CompConst_1
Is ϵ in Set FIRST['CompConst_1']
TRUE
Rule 2 3 4:CompConst_1-> + BaseCompConst CompConst_1
FOLLOW['CompConst_1'] { ',',']' } U FOLLOW['CompConst_1'] { ',',']' } => FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['CompConst_1'] { ',',']' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
------------Looking For Ident ---------------
	VarName-> Ident OptInit
Is ϵ in Set FIRST['OptInit']
TRUE
Rule 2 3 4:VarName-> Ident OptInit
FOLLOW['OptInit'] { } U FOLLOW['VarName'] { ',' } => FOLLOW['OptInit'] { ',' }
FOLLOW['Ident'] { '=' } U FOLLOW['VarName'] { ',' } => FOLLOW['Ident'] { '=',',' }
	MemContents-> Ident MemContentsType
Is ϵ in Set FIRST['MemContentsType']
TRUE
Rule 2 3 4:MemContents-> Ident MemContentsType
FOLLOW['MemContentsType'] { } U FOLLOW['MemContents'] { } => FOLLOW['MemContentsType'] { }
FOLLOW['Ident'] { '=',',','(','^','.' } U FOLLOW['MemContents'] { } => FOLLOW['Ident'] { '=',',','(','^','.' }
------------Looking For MemContents ---------------
Rule 3:Factor-> MemContents
FOLLOW['MemContents'] { } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	IdentList-> MemContents IdentList_1
Is ϵ in Set FIRST['IdentList_1']
TRUE
Rule 2 3 4:IdentList-> MemContents IdentList_1
FOLLOW['IdentList_1'] { } U FOLLOW['IdentList'] { ')' } => FOLLOW['IdentList_1'] { ')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['IdentList'] { ')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	IdentList_1-> , MemContents IdentList_1
Is ϵ in Set FIRST['IdentList_1']
TRUE
Rule 2 3 4:IdentList_1-> , MemContents IdentList_1
FOLLOW['IdentList_1'] { ')' } U FOLLOW['IdentList_1'] { ')' } => FOLLOW['IdentList_1'] { ')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['IdentList_1'] { ')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For MemContentsType ---------------
######### Follow Set Itteration #2
------------Looking For Action65 ---------------
------------Looking For Modules ---------------
Rule 3:Action65-> Modules
FOLLOW['Modules'] { '$' } U FOLLOW['Action65'] { '$' } => FOLLOW['Modules'] { '$' }
------------Looking For Modules_1 ---------------
------------Looking For Module ---------------
	Modules_1-> MODULE Module Modules_1
Is ϵ in Set FIRST['Modules_1']
TRUE
Rule 2 3 4:Modules_1-> MODULE Module Modules_1
FOLLOW['Modules_1'] { } U FOLLOW['Modules_1'] { } => FOLLOW['Modules_1'] { }
FOLLOW['Module'] { 'MODULE' } U FOLLOW['Modules_1'] { } => FOLLOW['Module'] { 'MODULE' }
------------Looking For Routines ---------------
Rule 3:Module-> Routines
FOLLOW['Routines'] { 'MODULE' } U FOLLOW['Module'] { 'MODULE' } => FOLLOW['Routines'] { 'MODULE' }
------------Looking For Routines_1 ---------------
------------Looking For Routine ---------------
	Routines-> Routine Routines_1
Is ϵ in Set FIRST['Routines_1']
TRUE
Rule 2 3 4:Routines-> Routine Routines_1
FOLLOW['Routines_1'] { 'MODULE' } U FOLLOW['Routines'] { 'MODULE' } => FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['Routine'] { 'END','MODULE' } U FOLLOW['Routines'] { 'MODULE' } => FOLLOW['Routine'] { 'END','MODULE' }
	Routines_1-> END Routine Routines_1
Is ϵ in Set FIRST['Routines_1']
TRUE
Rule 2 3 4:Routines_1-> END Routine Routines_1
FOLLOW['Routines_1'] { 'MODULE' } U FOLLOW['Routines_1'] { 'MODULE' } => FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['Routine'] { 'END','MODULE' } U FOLLOW['Routines_1'] { 'MODULE' } => FOLLOW['Routine'] { 'END','MODULE' }
------------Looking For ProcBody ---------------
------------Looking For ProcBody_1 ---------------
------------Looking For ProcDecl ---------------
------------Looking For FuncDecl ---------------
------------Looking For FuncIdent ---------------
------------Looking For ProcIdent ---------------
------------Looking For Statements ---------------
Rule 3:ProcBody_1-> Statements
FOLLOW['Statements'] { 'ELSEIF','ELSE' } U FOLLOW['ProcBody_1'] { } => FOLLOW['Statements'] { 'ELSEIF','ELSE' }
	ThenPart_1-> Statements ElseIfPart
Is ϵ in Set FIRST['ElseIfPart']
TRUE
Rule 2 3 4:ThenPart_1-> Statements ElseIfPart
FOLLOW['ElseIfPart'] { } U FOLLOW['ThenPart_1'] { } => FOLLOW['ElseIfPart'] { }
FOLLOW['Statements'] { 'ELSEIF','ELSE' } U FOLLOW['ThenPart_1'] { } => FOLLOW['Statements'] { 'ELSEIF','ELSE' }
------------Looking For Statements_1 ---------------
------------Looking For Statement ---------------
	Statements-> Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements-> Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ; Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ; Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> FI Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> FI Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> OD Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> OD Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ) Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ) Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ] Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ] Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
------------Looking For StructStmts ---------------
Rule 3:Statement-> StructStmts
FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } => FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
------------Looking For WhileLoop ---------------
------------Looking For DoLoop ---------------
------------Looking For UNTILLstmt ---------------
	DoLoop-> Statements UNTILLstmt ;
Is ϵ in Set FIRST[';']
FALSE
Rule 2 3:DoLoop-> Statements UNTILLstmt ;
FOLLOW[';'] { } U FOLLOW['DoLoop'] { } => FOLLOW[';'] { }
------------Looking For IfStmt ---------------
------------Looking For ThenPart ---------------
------------Looking For ThenPart_1 ---------------
------------Looking For ElseIfPart ---------------
------------Looking For ArithExpr ---------------
	IfStmt-> ArithExpr ThenPart
Is ϵ in Set FIRST['ThenPart']
FALSE
Rule 2 3:IfStmt-> ArithExpr ThenPart
FOLLOW['ThenPart'] { } U FOLLOW['IfStmt'] { } => FOLLOW['ThenPart'] { }
	ElseIfPart-> ELSEIF ArithExpr ThenPart
Is ϵ in Set FIRST['ThenPart']
FALSE
Rule 2 3:ElseIfPart-> ELSEIF ArithExpr ThenPart
FOLLOW['ThenPart'] { } U FOLLOW['ElseIfPart'] { } => FOLLOW['ThenPart'] { }
	Factor-> ( ArithExpr )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:Factor-> ( ArithExpr )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MemContentsType-> ( ArithExpr )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:MemContentsType-> ( ArithExpr )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MemContentsType'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For LogicalOR_1 ---------------
------------Looking For LogicalAND ---------------
	ArithExpr-> LogicalAND LogicalOR_1
Is ϵ in Set FIRST['LogicalOR_1']
TRUE
Rule 2 3 4:ArithExpr-> LogicalAND LogicalOR_1
FOLLOW['LogicalOR_1'] { 'THEN',')' } U FOLLOW['ArithExpr'] { 'THEN',')' } => FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['LogicalAND'] { 'OR','THEN',')' } U FOLLOW['ArithExpr'] { 'THEN',')' } => FOLLOW['LogicalAND'] { 'OR','THEN',')' }
	LogicalOR_1-> OR LogicalAND LogicalOR_1
Is ϵ in Set FIRST['LogicalOR_1']
TRUE
Rule 2 3 4:LogicalOR_1-> OR LogicalAND LogicalOR_1
FOLLOW['LogicalOR_1'] { 'THEN',')' } U FOLLOW['LogicalOR_1'] { 'THEN',')' } => FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['LogicalAND'] { 'OR','THEN',')' } U FOLLOW['LogicalOR_1'] { 'THEN',')' } => FOLLOW['LogicalAND'] { 'OR','THEN',')' }
------------Looking For LogicalAND_1 ---------------
------------Looking For RelOperation ---------------
	LogicalAND-> RelOperation LogicalAND_1
Is ϵ in Set FIRST['LogicalAND_1']
TRUE
Rule 2 3 4:LogicalAND-> RelOperation LogicalAND_1
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } U FOLLOW['LogicalAND'] { 'OR','THEN',')' } => FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } U FOLLOW['LogicalAND'] { 'OR','THEN',')' } => FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
	LogicalAND_1-> AND RelOperation LogicalAND_1
Is ϵ in Set FIRST['LogicalAND_1']
TRUE
Rule 2 3 4:LogicalAND_1-> AND RelOperation LogicalAND_1
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } U FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } => FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } U FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } => FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
------------Looking For RelOperation_1 ---------------
------------Looking For RelEquals ---------------
	RelOperation-> RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation-> RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> > RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> > RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> < RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> < RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> GTEQ RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> GTEQ RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> LTEQ RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> LTEQ RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For RelEquals_1 ---------------
------------Looking For BitwiseOR ---------------
	RelEquals-> BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals-> BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelEquals_1-> = BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals_1-> = BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelEquals_1-> # BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals_1-> # BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For BitwiseOR_1 ---------------
------------Looking For BitwiseAND ---------------
	BitwiseOR-> BitwiseAND BitwiseOR_1
Is ϵ in Set FIRST['BitwiseOR_1']
TRUE
Rule 2 3 4:BitwiseOR-> BitwiseAND BitwiseOR_1
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	BitwiseOR_1-> % BitwiseAND BitwiseOR_1
Is ϵ in Set FIRST['BitwiseOR_1']
TRUE
Rule 2 3 4:BitwiseOR_1-> % BitwiseAND BitwiseOR_1
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For BitwiseAND_1 ---------------
------------Looking For BitwiseXOR ---------------
	BitwiseAND-> BitwiseXOR BitwiseAND_1
Is ϵ in Set FIRST['BitwiseAND_1']
TRUE
Rule 2 3 4:BitwiseAND-> BitwiseXOR BitwiseAND_1
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
Is ϵ in Set FIRST['BitwiseAND_1']
TRUE
Rule 2 3 4:BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For SimpleRelExpr_1 ---------------
------------Looking For AddExpr ---------------
	BitwiseXOR-> AddExpr SimpleRelExpr_1
Is ϵ in Set FIRST['SimpleRelExpr_1']
TRUE
Rule 2 3 4:BitwiseXOR-> AddExpr SimpleRelExpr_1
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
Is ϵ in Set FIRST['SimpleRelExpr_1']
TRUE
Rule 2 3 4:SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For AddExpr_1 ---------------
------------Looking For ShifExpr ---------------
	AddExpr-> ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr-> ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	AddExpr_1-> + ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr_1-> + ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	AddExpr_1-> - ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr_1-> - ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For ShiftExpr_1 ---------------
------------Looking For MultExpr ---------------
	ShifExpr-> MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShifExpr-> MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	ShiftExpr_1-> LSH MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShiftExpr_1-> LSH MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	ShiftExpr_1-> RSH MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShiftExpr_1-> RSH MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For MultExpr_1 ---------------
------------Looking For Unary ---------------
	MultExpr-> Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr-> Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> * Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> * Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> / Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> / Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> MOD Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> MOD Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For Factor ---------------
Rule 3:Unary-> Factor
FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For FUNCcall ---------------
Rule 3:Factor-> FUNCcall
FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For IdentList ---------------
	FUNCcall-> FuncIdent ( IdentList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:FUNCcall-> FuncIdent ( IdentList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For IdentList_1 ---------------
------------Looking For FundType ---------------
------------Looking For OptModifier ---------------
	Param-> RECORDTYPE OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> RECORDTYPE OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')' }
	Param-> CHAR OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> CHAR OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')' }
	Param-> BYTE OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> BYTE OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')' }
	Param-> INT OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> INT OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')' }
	Param-> CARD OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> CARD OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')' }
	Param-> BOOL OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> BOOL OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')' }
------------Looking For ParamList ---------------
	ProcDecl-> ProcIdent OptInit ( ParamList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:ProcDecl-> ProcIdent OptInit ( ParamList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ProcDecl'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	FuncDecl-> FuncIdent OptInit ( ParamList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:FuncDecl-> FuncIdent OptInit ( ParamList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['FuncDecl'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For ParamList_1 ---------------
------------Looking For Param ---------------
	ParamList-> Param ParamList_1
Is ϵ in Set FIRST['ParamList_1']
TRUE
Rule 2 3 4:ParamList-> Param ParamList_1
FOLLOW['ParamList_1'] { ')' } U FOLLOW['ParamList'] { ')' } => FOLLOW['ParamList_1'] { ')' }
FOLLOW['Param'] { ',',')' } U FOLLOW['ParamList'] { ')' } => FOLLOW['Param'] { ',',')' }
	ParamList_1-> , Param ParamList_1
Is ϵ in Set FIRST['ParamList_1']
TRUE
Rule 2 3 4:ParamList_1-> , Param ParamList_1
FOLLOW['ParamList_1'] { ')' } U FOLLOW['ParamList_1'] { ')' } => FOLLOW['ParamList_1'] { ')' }
FOLLOW['Param'] { ',',')' } U FOLLOW['ParamList_1'] { ')' } => FOLLOW['Param'] { ',',')' }
------------Looking For VarDecls ---------------
	RecFieldList-> VarDecls RecFieldList_1
Is ϵ in Set FIRST['RecFieldList_1']
TRUE
Rule 2 3 4:RecFieldList-> VarDecls RecFieldList_1
FOLLOW['RecFieldList_1'] { } U FOLLOW['RecFieldList'] { ']' } => FOLLOW['RecFieldList_1'] { ']' }
FOLLOW['VarDecls'] { ';' } U FOLLOW['RecFieldList'] { ']' } => FOLLOW['VarDecls'] { ';',']' }
	RecFieldList_1-> ; VarDecls RecFieldList_1
Is ϵ in Set FIRST['RecFieldList_1']
TRUE
Rule 2 3 4:RecFieldList_1-> ; VarDecls RecFieldList_1
FOLLOW['RecFieldList_1'] { ']' } U FOLLOW['RecFieldList_1'] { ']' } => FOLLOW['RecFieldList_1'] { ']' }
FOLLOW['VarDecls'] { ';',']' } U FOLLOW['RecFieldList_1'] { ']' } => FOLLOW['VarDecls'] { ';',']' }
------------Looking For SysDecls ---------------
	Module-> SysDecls Routines
Is ϵ in Set FIRST['Routines']
FALSE
Rule 2 3:Module-> SysDecls Routines
FOLLOW['Routines'] { 'MODULE' } U FOLLOW['Module'] { 'MODULE' } => FOLLOW['Routines'] { 'MODULE' }
	ProcBody-> SysDecls ProcBody_1
Is ϵ in Set FIRST['ProcBody_1']
FALSE
Rule 2 3:ProcBody-> SysDecls ProcBody_1
FOLLOW['ProcBody_1'] { } U FOLLOW['ProcBody'] { } => FOLLOW['ProcBody_1'] { }
------------Looking For SysDecls_1 ---------------
------------Looking For SysDecl ---------------
	SysDecls-> SysDecl SysDecls_1
Is ϵ in Set FIRST['SysDecls_1']
TRUE
Rule 2 3 4:SysDecls-> SysDecl SysDecls_1
FOLLOW['SysDecls_1'] { 'FUNC','PROC' } U FOLLOW['SysDecls'] { 'FUNC','PROC' } => FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['SysDecl'] { ';','FUNC','PROC' } U FOLLOW['SysDecls'] { 'FUNC','PROC' } => FOLLOW['SysDecl'] { ';','FUNC','PROC' }
	SysDecls_1-> ; SysDecl SysDecls_1
Is ϵ in Set FIRST['SysDecls_1']
TRUE
Rule 2 3 4:SysDecls_1-> ; SysDecl SysDecls_1
FOLLOW['SysDecls_1'] { 'FUNC','PROC' } U FOLLOW['SysDecls_1'] { 'FUNC','PROC' } => FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['SysDecl'] { ';','FUNC','PROC' } U FOLLOW['SysDecls_1'] { 'FUNC','PROC' } => FOLLOW['SysDecl'] { ';','FUNC','PROC' }
------------Looking For VarList ---------------
------------Looking For VarList_1 ---------------
------------Looking For VarName ---------------
	VarList-> VarName VarList_1
Is ϵ in Set FIRST['VarList_1']
TRUE
Rule 2 3 4:VarList-> VarName VarList_1
FOLLOW['VarList_1'] { } U FOLLOW['VarList'] { ';','FUNC','PROC' } => FOLLOW['VarList_1'] { ';','FUNC','PROC' }
FOLLOW['VarName'] { ',' } U FOLLOW['VarList'] { ';','FUNC','PROC' } => FOLLOW['VarName'] { ',',';','FUNC','PROC' }
	VarList_1-> , VarName VarList_1
Is ϵ in Set FIRST['VarList_1']
TRUE
Rule 2 3 4:VarList_1-> , VarName VarList_1
FOLLOW['VarList_1'] { ';','FUNC','PROC' } U FOLLOW['VarList_1'] { ';','FUNC','PROC' } => FOLLOW['VarList_1'] { ';','FUNC','PROC' }
FOLLOW['VarName'] { ',',';','FUNC','PROC' } U FOLLOW['VarList_1'] { ';','FUNC','PROC' } => FOLLOW['VarName'] { ',',';','FUNC','PROC' }
------------Looking For OptInit ---------------
------------Looking For DefList ---------------
------------Looking For DefList_1 ---------------
------------Looking For Def ---------------
	DefList-> Def DefList_1
Is ϵ in Set FIRST['DefList_1']
TRUE
Rule 2 3 4:DefList-> Def DefList_1
FOLLOW['DefList_1'] { } U FOLLOW['DefList'] { } => FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' } U FOLLOW['DefList'] { } => FOLLOW['Def'] { ',' }
	DefList_1-> , Def DefList_1
Is ϵ in Set FIRST['DefList_1']
TRUE
Rule 2 3 4:DefList_1-> , Def DefList_1
FOLLOW['DefList_1'] { } U FOLLOW['DefList_1'] { } => FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' } U FOLLOW['DefList_1'] { } => FOLLOW['Def'] { ',' }
------------Looking For RecIdent ---------------
------------Looking For RecField ---------------
Rule 3:RecIdent-> RecField
FOLLOW['RecField'] { } U FOLLOW['RecIdent'] { } => FOLLOW['RecField'] { }
------------Looking For RecFieldList ---------------
	RecField-> = [ RecFieldList ]
Is ϵ in Set FIRST[']']
FALSE
Rule 2 3:RecField-> = [ RecFieldList ]
FOLLOW[']'] { } U FOLLOW['RecField'] { } => FOLLOW[']'] { }
------------Looking For RecFieldList_1 ---------------
------------Looking For Modifier ---------------
	VarDecls-> RECORDTYPE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> RECORDTYPE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> CHAR Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> CHAR Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> BYTE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> BYTE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> INT Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> INT Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> CARD Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> CARD Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> BOOL Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> BOOL Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> RECORDTYPE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> RECORDTYPE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> CHAR Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> CHAR Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> BYTE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> BYTE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> INT Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> INT Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> CARD Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> CARD Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
------------Looking For ArrayStuff ---------------
------------Looking For OptArrayInit ---------------
------------Looking For CompConstList ---------------
	OptArrayInit-> = [ CompConstList ]
Is ϵ in Set FIRST[']']
FALSE
Rule 2 3:OptArrayInit-> = [ CompConstList ]
FOLLOW[']'] { } U FOLLOW['OptArrayInit'] { } => FOLLOW[']'] { }
------------Looking For CompConstList_1 ---------------
------------Looking For CompConst ---------------
	CompConstList-> CompConst CompConstList_1
Is ϵ in Set FIRST['CompConstList_1']
TRUE
Rule 2 3 4:CompConstList-> CompConst CompConstList_1
FOLLOW['CompConstList_1'] { ']' } U FOLLOW['CompConstList'] { ']' } => FOLLOW['CompConstList_1'] { ']' }
FOLLOW['CompConst'] { ',',']' } U FOLLOW['CompConstList'] { ']' } => FOLLOW['CompConst'] { ',',']' }
	CompConstList_1-> , CompConst CompConstList_1
Is ϵ in Set FIRST['CompConstList_1']
TRUE
Rule 2 3 4:CompConstList_1-> , CompConst CompConstList_1
FOLLOW['CompConstList_1'] { ']' } U FOLLOW['CompConstList_1'] { ']' } => FOLLOW['CompConstList_1'] { ']' }
FOLLOW['CompConst'] { ',',']' } U FOLLOW['CompConstList_1'] { ']' } => FOLLOW['CompConst'] { ',',']' }
------------Looking For CompConst_1 ---------------
------------Looking For BaseCompConst ---------------
Rule 3:Factor-> BaseCompConst
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
	CompConst-> BaseCompConst CompConst_1
Is ϵ in Set FIRST['CompConst_1']
TRUE
Rule 2 3 4:CompConst-> BaseCompConst CompConst_1
FOLLOW['CompConst_1'] { ',',']' } U FOLLOW['CompConst'] { ',',']' } => FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['CompConst'] { ',',']' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
	CompConst_1-> + BaseCompConst CompConst_1
Is ϵ in Set FIRST['CompConst_1']
TRUE
Rule 2 3 4:CompConst_1-> + BaseCompConst CompConst_1
FOLLOW['CompConst_1'] { ',',']' } U FOLLOW['CompConst_1'] { ',',']' } => FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['CompConst_1'] { ',',']' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
------------Looking For Ident ---------------
	VarName-> Ident OptInit
Is ϵ in Set FIRST['OptInit']
TRUE
Rule 2 3 4:VarName-> Ident OptInit
FOLLOW['OptInit'] { ',' } U FOLLOW['VarName'] { ',',';','FUNC','PROC' } => FOLLOW['OptInit'] { ',',';','FUNC','PROC' }
FOLLOW['Ident'] { '=',',','(','^','.',')' } U FOLLOW['VarName'] { ',',';','FUNC','PROC' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC' }
	MemContents-> Ident MemContentsType
Is ϵ in Set FIRST['MemContentsType']
TRUE
Rule 2 3 4:MemContents-> Ident MemContentsType
FOLLOW['MemContentsType'] { } U FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } => FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC' } U FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' }
------------Looking For MemContents ---------------
Rule 3:Factor-> MemContents
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	IdentList-> MemContents IdentList_1
Is ϵ in Set FIRST['IdentList_1']
TRUE
Rule 2 3 4:IdentList-> MemContents IdentList_1
FOLLOW['IdentList_1'] { ')' } U FOLLOW['IdentList'] { ')' } => FOLLOW['IdentList_1'] { ')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['IdentList'] { ')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	IdentList_1-> , MemContents IdentList_1
Is ϵ in Set FIRST['IdentList_1']
TRUE
Rule 2 3 4:IdentList_1-> , MemContents IdentList_1
FOLLOW['IdentList_1'] { ')' } U FOLLOW['IdentList_1'] { ')' } => FOLLOW['IdentList_1'] { ')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['IdentList_1'] { ')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For MemContentsType ---------------
######### Follow Set Itteration #3
------------Looking For Action65 ---------------
------------Looking For Modules ---------------
Rule 3:Action65-> Modules
FOLLOW['Modules'] { '$' } U FOLLOW['Action65'] { '$' } => FOLLOW['Modules'] { '$' }
------------Looking For Modules_1 ---------------
------------Looking For Module ---------------
	Modules_1-> MODULE Module Modules_1
Is ϵ in Set FIRST['Modules_1']
TRUE
Rule 2 3 4:Modules_1-> MODULE Module Modules_1
FOLLOW['Modules_1'] { } U FOLLOW['Modules_1'] { } => FOLLOW['Modules_1'] { }
FOLLOW['Module'] { 'MODULE' } U FOLLOW['Modules_1'] { } => FOLLOW['Module'] { 'MODULE' }
------------Looking For Routines ---------------
Rule 3:Module-> Routines
FOLLOW['Routines'] { 'MODULE' } U FOLLOW['Module'] { 'MODULE' } => FOLLOW['Routines'] { 'MODULE' }
------------Looking For Routines_1 ---------------
------------Looking For Routine ---------------
	Routines-> Routine Routines_1
Is ϵ in Set FIRST['Routines_1']
TRUE
Rule 2 3 4:Routines-> Routine Routines_1
FOLLOW['Routines_1'] { 'MODULE' } U FOLLOW['Routines'] { 'MODULE' } => FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['Routine'] { 'END','MODULE' } U FOLLOW['Routines'] { 'MODULE' } => FOLLOW['Routine'] { 'END','MODULE' }
	Routines_1-> END Routine Routines_1
Is ϵ in Set FIRST['Routines_1']
TRUE
Rule 2 3 4:Routines_1-> END Routine Routines_1
FOLLOW['Routines_1'] { 'MODULE' } U FOLLOW['Routines_1'] { 'MODULE' } => FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['Routine'] { 'END','MODULE' } U FOLLOW['Routines_1'] { 'MODULE' } => FOLLOW['Routine'] { 'END','MODULE' }
------------Looking For ProcBody ---------------
------------Looking For ProcBody_1 ---------------
------------Looking For ProcDecl ---------------
------------Looking For FuncDecl ---------------
------------Looking For FuncIdent ---------------
------------Looking For ProcIdent ---------------
------------Looking For Statements ---------------
Rule 3:ProcBody_1-> Statements
FOLLOW['Statements'] { 'ELSEIF','ELSE' } U FOLLOW['ProcBody_1'] { } => FOLLOW['Statements'] { 'ELSEIF','ELSE' }
	ThenPart_1-> Statements ElseIfPart
Is ϵ in Set FIRST['ElseIfPart']
TRUE
Rule 2 3 4:ThenPart_1-> Statements ElseIfPart
FOLLOW['ElseIfPart'] { } U FOLLOW['ThenPart_1'] { } => FOLLOW['ElseIfPart'] { }
FOLLOW['Statements'] { 'ELSEIF','ELSE' } U FOLLOW['ThenPart_1'] { } => FOLLOW['Statements'] { 'ELSEIF','ELSE' }
------------Looking For Statements_1 ---------------
------------Looking For Statement ---------------
	Statements-> Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements-> Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ; Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ; Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> FI Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> FI Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> OD Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> OD Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ) Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ) Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ] Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ] Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
------------Looking For StructStmts ---------------
Rule 3:Statement-> StructStmts
FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } => FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
------------Looking For WhileLoop ---------------
------------Looking For DoLoop ---------------
------------Looking For UNTILLstmt ---------------
	DoLoop-> Statements UNTILLstmt ;
Is ϵ in Set FIRST[';']
FALSE
Rule 2 3:DoLoop-> Statements UNTILLstmt ;
FOLLOW[';'] { } U FOLLOW['DoLoop'] { } => FOLLOW[';'] { }
------------Looking For IfStmt ---------------
------------Looking For ThenPart ---------------
------------Looking For ThenPart_1 ---------------
------------Looking For ElseIfPart ---------------
------------Looking For ArithExpr ---------------
	IfStmt-> ArithExpr ThenPart
Is ϵ in Set FIRST['ThenPart']
FALSE
Rule 2 3:IfStmt-> ArithExpr ThenPart
FOLLOW['ThenPart'] { } U FOLLOW['IfStmt'] { } => FOLLOW['ThenPart'] { }
	ElseIfPart-> ELSEIF ArithExpr ThenPart
Is ϵ in Set FIRST['ThenPart']
FALSE
Rule 2 3:ElseIfPart-> ELSEIF ArithExpr ThenPart
FOLLOW['ThenPart'] { } U FOLLOW['ElseIfPart'] { } => FOLLOW['ThenPart'] { }
	Factor-> ( ArithExpr )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:Factor-> ( ArithExpr )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MemContentsType-> ( ArithExpr )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:MemContentsType-> ( ArithExpr )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For LogicalOR_1 ---------------
------------Looking For LogicalAND ---------------
	ArithExpr-> LogicalAND LogicalOR_1
Is ϵ in Set FIRST['LogicalOR_1']
TRUE
Rule 2 3 4:ArithExpr-> LogicalAND LogicalOR_1
FOLLOW['LogicalOR_1'] { 'THEN',')' } U FOLLOW['ArithExpr'] { 'THEN',')' } => FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['LogicalAND'] { 'OR','THEN',')' } U FOLLOW['ArithExpr'] { 'THEN',')' } => FOLLOW['LogicalAND'] { 'OR','THEN',')' }
	LogicalOR_1-> OR LogicalAND LogicalOR_1
Is ϵ in Set FIRST['LogicalOR_1']
TRUE
Rule 2 3 4:LogicalOR_1-> OR LogicalAND LogicalOR_1
FOLLOW['LogicalOR_1'] { 'THEN',')' } U FOLLOW['LogicalOR_1'] { 'THEN',')' } => FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['LogicalAND'] { 'OR','THEN',')' } U FOLLOW['LogicalOR_1'] { 'THEN',')' } => FOLLOW['LogicalAND'] { 'OR','THEN',')' }
------------Looking For LogicalAND_1 ---------------
------------Looking For RelOperation ---------------
	LogicalAND-> RelOperation LogicalAND_1
Is ϵ in Set FIRST['LogicalAND_1']
TRUE
Rule 2 3 4:LogicalAND-> RelOperation LogicalAND_1
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } U FOLLOW['LogicalAND'] { 'OR','THEN',')' } => FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } U FOLLOW['LogicalAND'] { 'OR','THEN',')' } => FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
	LogicalAND_1-> AND RelOperation LogicalAND_1
Is ϵ in Set FIRST['LogicalAND_1']
TRUE
Rule 2 3 4:LogicalAND_1-> AND RelOperation LogicalAND_1
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } U FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } => FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } U FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } => FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
------------Looking For RelOperation_1 ---------------
------------Looking For RelEquals ---------------
	RelOperation-> RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation-> RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> > RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> > RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> < RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> < RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> GTEQ RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> GTEQ RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> LTEQ RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> LTEQ RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For RelEquals_1 ---------------
------------Looking For BitwiseOR ---------------
	RelEquals-> BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals-> BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelEquals_1-> = BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals_1-> = BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelEquals_1-> # BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals_1-> # BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For BitwiseOR_1 ---------------
------------Looking For BitwiseAND ---------------
	BitwiseOR-> BitwiseAND BitwiseOR_1
Is ϵ in Set FIRST['BitwiseOR_1']
TRUE
Rule 2 3 4:BitwiseOR-> BitwiseAND BitwiseOR_1
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	BitwiseOR_1-> % BitwiseAND BitwiseOR_1
Is ϵ in Set FIRST['BitwiseOR_1']
TRUE
Rule 2 3 4:BitwiseOR_1-> % BitwiseAND BitwiseOR_1
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For BitwiseAND_1 ---------------
------------Looking For BitwiseXOR ---------------
	BitwiseAND-> BitwiseXOR BitwiseAND_1
Is ϵ in Set FIRST['BitwiseAND_1']
TRUE
Rule 2 3 4:BitwiseAND-> BitwiseXOR BitwiseAND_1
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
Is ϵ in Set FIRST['BitwiseAND_1']
TRUE
Rule 2 3 4:BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For SimpleRelExpr_1 ---------------
------------Looking For AddExpr ---------------
	BitwiseXOR-> AddExpr SimpleRelExpr_1
Is ϵ in Set FIRST['SimpleRelExpr_1']
TRUE
Rule 2 3 4:BitwiseXOR-> AddExpr SimpleRelExpr_1
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
Is ϵ in Set FIRST['SimpleRelExpr_1']
TRUE
Rule 2 3 4:SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For AddExpr_1 ---------------
------------Looking For ShifExpr ---------------
	AddExpr-> ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr-> ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	AddExpr_1-> + ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr_1-> + ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	AddExpr_1-> - ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr_1-> - ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For ShiftExpr_1 ---------------
------------Looking For MultExpr ---------------
	ShifExpr-> MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShifExpr-> MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	ShiftExpr_1-> LSH MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShiftExpr_1-> LSH MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	ShiftExpr_1-> RSH MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShiftExpr_1-> RSH MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For MultExpr_1 ---------------
------------Looking For Unary ---------------
	MultExpr-> Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr-> Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> * Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> * Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> / Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> / Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> MOD Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> MOD Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For Factor ---------------
Rule 3:Unary-> Factor
FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For FUNCcall ---------------
Rule 3:Factor-> FUNCcall
FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For IdentList ---------------
	FUNCcall-> FuncIdent ( IdentList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:FUNCcall-> FuncIdent ( IdentList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For IdentList_1 ---------------
------------Looking For FundType ---------------
------------Looking For OptModifier ---------------
	Param-> RECORDTYPE OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> RECORDTYPE OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' }
	Param-> CHAR OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> CHAR OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' }
	Param-> BYTE OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> BYTE OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' }
	Param-> INT OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> INT OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' }
	Param-> CARD OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> CARD OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' }
	Param-> BOOL OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> BOOL OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' }
------------Looking For ParamList ---------------
	ProcDecl-> ProcIdent OptInit ( ParamList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:ProcDecl-> ProcIdent OptInit ( ParamList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['ProcDecl'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	FuncDecl-> FuncIdent OptInit ( ParamList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:FuncDecl-> FuncIdent OptInit ( ParamList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['FuncDecl'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For ParamList_1 ---------------
------------Looking For Param ---------------
	ParamList-> Param ParamList_1
Is ϵ in Set FIRST['ParamList_1']
TRUE
Rule 2 3 4:ParamList-> Param ParamList_1
FOLLOW['ParamList_1'] { ')' } U FOLLOW['ParamList'] { ')' } => FOLLOW['ParamList_1'] { ')' }
FOLLOW['Param'] { ',',')' } U FOLLOW['ParamList'] { ')' } => FOLLOW['Param'] { ',',')' }
	ParamList_1-> , Param ParamList_1
Is ϵ in Set FIRST['ParamList_1']
TRUE
Rule 2 3 4:ParamList_1-> , Param ParamList_1
FOLLOW['ParamList_1'] { ')' } U FOLLOW['ParamList_1'] { ')' } => FOLLOW['ParamList_1'] { ')' }
FOLLOW['Param'] { ',',')' } U FOLLOW['ParamList_1'] { ')' } => FOLLOW['Param'] { ',',')' }
------------Looking For VarDecls ---------------
	RecFieldList-> VarDecls RecFieldList_1
Is ϵ in Set FIRST['RecFieldList_1']
TRUE
Rule 2 3 4:RecFieldList-> VarDecls RecFieldList_1
FOLLOW['RecFieldList_1'] { ']' } U FOLLOW['RecFieldList'] { ']' } => FOLLOW['RecFieldList_1'] { ']' }
FOLLOW['VarDecls'] { ';',']' } U FOLLOW['RecFieldList'] { ']' } => FOLLOW['VarDecls'] { ';',']' }
	RecFieldList_1-> ; VarDecls RecFieldList_1
Is ϵ in Set FIRST['RecFieldList_1']
TRUE
Rule 2 3 4:RecFieldList_1-> ; VarDecls RecFieldList_1
FOLLOW['RecFieldList_1'] { ']' } U FOLLOW['RecFieldList_1'] { ']' } => FOLLOW['RecFieldList_1'] { ']' }
FOLLOW['VarDecls'] { ';',']' } U FOLLOW['RecFieldList_1'] { ']' } => FOLLOW['VarDecls'] { ';',']' }
------------Looking For SysDecls ---------------
	Module-> SysDecls Routines
Is ϵ in Set FIRST['Routines']
FALSE
Rule 2 3:Module-> SysDecls Routines
FOLLOW['Routines'] { 'MODULE' } U FOLLOW['Module'] { 'MODULE' } => FOLLOW['Routines'] { 'MODULE' }
	ProcBody-> SysDecls ProcBody_1
Is ϵ in Set FIRST['ProcBody_1']
FALSE
Rule 2 3:ProcBody-> SysDecls ProcBody_1
FOLLOW['ProcBody_1'] { } U FOLLOW['ProcBody'] { } => FOLLOW['ProcBody_1'] { }
------------Looking For SysDecls_1 ---------------
------------Looking For SysDecl ---------------
	SysDecls-> SysDecl SysDecls_1
Is ϵ in Set FIRST['SysDecls_1']
TRUE
Rule 2 3 4:SysDecls-> SysDecl SysDecls_1
FOLLOW['SysDecls_1'] { 'FUNC','PROC' } U FOLLOW['SysDecls'] { 'FUNC','PROC' } => FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['SysDecl'] { ';','FUNC','PROC' } U FOLLOW['SysDecls'] { 'FUNC','PROC' } => FOLLOW['SysDecl'] { ';','FUNC','PROC' }
	SysDecls_1-> ; SysDecl SysDecls_1
Is ϵ in Set FIRST['SysDecls_1']
TRUE
Rule 2 3 4:SysDecls_1-> ; SysDecl SysDecls_1
FOLLOW['SysDecls_1'] { 'FUNC','PROC' } U FOLLOW['SysDecls_1'] { 'FUNC','PROC' } => FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['SysDecl'] { ';','FUNC','PROC' } U FOLLOW['SysDecls_1'] { 'FUNC','PROC' } => FOLLOW['SysDecl'] { ';','FUNC','PROC' }
------------Looking For VarList ---------------
------------Looking For VarList_1 ---------------
------------Looking For VarName ---------------
	VarList-> VarName VarList_1
Is ϵ in Set FIRST['VarList_1']
TRUE
Rule 2 3 4:VarList-> VarName VarList_1
FOLLOW['VarList_1'] { ';','FUNC','PROC' } U FOLLOW['VarList'] { ';','FUNC','PROC',']' } => FOLLOW['VarList_1'] { ';','FUNC','PROC',']' }
FOLLOW['VarName'] { ',',';','FUNC','PROC' } U FOLLOW['VarList'] { ';','FUNC','PROC',']' } => FOLLOW['VarName'] { ',',';','FUNC','PROC',']' }
	VarList_1-> , VarName VarList_1
Is ϵ in Set FIRST['VarList_1']
TRUE
Rule 2 3 4:VarList_1-> , VarName VarList_1
FOLLOW['VarList_1'] { ';','FUNC','PROC',']' } U FOLLOW['VarList_1'] { ';','FUNC','PROC',']' } => FOLLOW['VarList_1'] { ';','FUNC','PROC',']' }
FOLLOW['VarName'] { ',',';','FUNC','PROC',']' } U FOLLOW['VarList_1'] { ';','FUNC','PROC',']' } => FOLLOW['VarName'] { ',',';','FUNC','PROC',']' }
------------Looking For OptInit ---------------
------------Looking For DefList ---------------
------------Looking For DefList_1 ---------------
------------Looking For Def ---------------
	DefList-> Def DefList_1
Is ϵ in Set FIRST['DefList_1']
TRUE
Rule 2 3 4:DefList-> Def DefList_1
FOLLOW['DefList_1'] { } U FOLLOW['DefList'] { } => FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' } U FOLLOW['DefList'] { } => FOLLOW['Def'] { ',' }
	DefList_1-> , Def DefList_1
Is ϵ in Set FIRST['DefList_1']
TRUE
Rule 2 3 4:DefList_1-> , Def DefList_1
FOLLOW['DefList_1'] { } U FOLLOW['DefList_1'] { } => FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' } U FOLLOW['DefList_1'] { } => FOLLOW['Def'] { ',' }
------------Looking For RecIdent ---------------
------------Looking For RecField ---------------
Rule 3:RecIdent-> RecField
FOLLOW['RecField'] { } U FOLLOW['RecIdent'] { } => FOLLOW['RecField'] { }
------------Looking For RecFieldList ---------------
	RecField-> = [ RecFieldList ]
Is ϵ in Set FIRST[']']
FALSE
Rule 2 3:RecField-> = [ RecFieldList ]
FOLLOW[']'] { } U FOLLOW['RecField'] { } => FOLLOW[']'] { }
------------Looking For RecFieldList_1 ---------------
------------Looking For Modifier ---------------
	VarDecls-> RECORDTYPE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> RECORDTYPE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> CHAR Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> CHAR Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> BYTE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> BYTE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> INT Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> INT Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> CARD Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> CARD Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> BOOL Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> BOOL Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> RECORDTYPE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> RECORDTYPE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> CHAR Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> CHAR Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> BYTE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> BYTE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> INT Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> INT Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> CARD Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> CARD Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
------------Looking For ArrayStuff ---------------
------------Looking For OptArrayInit ---------------
------------Looking For CompConstList ---------------
	OptArrayInit-> = [ CompConstList ]
Is ϵ in Set FIRST[']']
FALSE
Rule 2 3:OptArrayInit-> = [ CompConstList ]
FOLLOW[']'] { } U FOLLOW['OptArrayInit'] { } => FOLLOW[']'] { }
------------Looking For CompConstList_1 ---------------
------------Looking For CompConst ---------------
	CompConstList-> CompConst CompConstList_1
Is ϵ in Set FIRST['CompConstList_1']
TRUE
Rule 2 3 4:CompConstList-> CompConst CompConstList_1
FOLLOW['CompConstList_1'] { ']' } U FOLLOW['CompConstList'] { ']' } => FOLLOW['CompConstList_1'] { ']' }
FOLLOW['CompConst'] { ',',']' } U FOLLOW['CompConstList'] { ']' } => FOLLOW['CompConst'] { ',',']' }
	CompConstList_1-> , CompConst CompConstList_1
Is ϵ in Set FIRST['CompConstList_1']
TRUE
Rule 2 3 4:CompConstList_1-> , CompConst CompConstList_1
FOLLOW['CompConstList_1'] { ']' } U FOLLOW['CompConstList_1'] { ']' } => FOLLOW['CompConstList_1'] { ']' }
FOLLOW['CompConst'] { ',',']' } U FOLLOW['CompConstList_1'] { ']' } => FOLLOW['CompConst'] { ',',']' }
------------Looking For CompConst_1 ---------------
------------Looking For BaseCompConst ---------------
Rule 3:Factor-> BaseCompConst
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
	CompConst-> BaseCompConst CompConst_1
Is ϵ in Set FIRST['CompConst_1']
TRUE
Rule 2 3 4:CompConst-> BaseCompConst CompConst_1
FOLLOW['CompConst_1'] { ',',']' } U FOLLOW['CompConst'] { ',',']' } => FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['CompConst'] { ',',']' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
	CompConst_1-> + BaseCompConst CompConst_1
Is ϵ in Set FIRST['CompConst_1']
TRUE
Rule 2 3 4:CompConst_1-> + BaseCompConst CompConst_1
FOLLOW['CompConst_1'] { ',',']' } U FOLLOW['CompConst_1'] { ',',']' } => FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['CompConst_1'] { ',',']' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
------------Looking For Ident ---------------
	VarName-> Ident OptInit
Is ϵ in Set FIRST['OptInit']
TRUE
Rule 2 3 4:VarName-> Ident OptInit
FOLLOW['OptInit'] { ',',';','FUNC','PROC' } U FOLLOW['VarName'] { ',',';','FUNC','PROC',']' } => FOLLOW['OptInit'] { ',',';','FUNC','PROC',']' }
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN' } U FOLLOW['VarName'] { ',',';','FUNC','PROC',']' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
	MemContents-> Ident MemContentsType
Is ϵ in Set FIRST['MemContentsType']
TRUE
Rule 2 3 4:MemContents-> Ident MemContentsType
FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } => FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
------------Looking For MemContents ---------------
Rule 3:Factor-> MemContents
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	IdentList-> MemContents IdentList_1
Is ϵ in Set FIRST['IdentList_1']
TRUE
Rule 2 3 4:IdentList-> MemContents IdentList_1
FOLLOW['IdentList_1'] { ')' } U FOLLOW['IdentList'] { ')' } => FOLLOW['IdentList_1'] { ')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['IdentList'] { ')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	IdentList_1-> , MemContents IdentList_1
Is ϵ in Set FIRST['IdentList_1']
TRUE
Rule 2 3 4:IdentList_1-> , MemContents IdentList_1
FOLLOW['IdentList_1'] { ')' } U FOLLOW['IdentList_1'] { ')' } => FOLLOW['IdentList_1'] { ')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['IdentList_1'] { ')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For MemContentsType ---------------
######### Follow Set Itteration #4
------------Looking For Action65 ---------------
------------Looking For Modules ---------------
Rule 3:Action65-> Modules
FOLLOW['Modules'] { '$' } U FOLLOW['Action65'] { '$' } => FOLLOW['Modules'] { '$' }
------------Looking For Modules_1 ---------------
------------Looking For Module ---------------
	Modules_1-> MODULE Module Modules_1
Is ϵ in Set FIRST['Modules_1']
TRUE
Rule 2 3 4:Modules_1-> MODULE Module Modules_1
FOLLOW['Modules_1'] { } U FOLLOW['Modules_1'] { } => FOLLOW['Modules_1'] { }
FOLLOW['Module'] { 'MODULE' } U FOLLOW['Modules_1'] { } => FOLLOW['Module'] { 'MODULE' }
------------Looking For Routines ---------------
Rule 3:Module-> Routines
FOLLOW['Routines'] { 'MODULE' } U FOLLOW['Module'] { 'MODULE' } => FOLLOW['Routines'] { 'MODULE' }
------------Looking For Routines_1 ---------------
------------Looking For Routine ---------------
	Routines-> Routine Routines_1
Is ϵ in Set FIRST['Routines_1']
TRUE
Rule 2 3 4:Routines-> Routine Routines_1
FOLLOW['Routines_1'] { 'MODULE' } U FOLLOW['Routines'] { 'MODULE' } => FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['Routine'] { 'END','MODULE' } U FOLLOW['Routines'] { 'MODULE' } => FOLLOW['Routine'] { 'END','MODULE' }
	Routines_1-> END Routine Routines_1
Is ϵ in Set FIRST['Routines_1']
TRUE
Rule 2 3 4:Routines_1-> END Routine Routines_1
FOLLOW['Routines_1'] { 'MODULE' } U FOLLOW['Routines_1'] { 'MODULE' } => FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['Routine'] { 'END','MODULE' } U FOLLOW['Routines_1'] { 'MODULE' } => FOLLOW['Routine'] { 'END','MODULE' }
------------Looking For ProcBody ---------------
------------Looking For ProcBody_1 ---------------
------------Looking For ProcDecl ---------------
------------Looking For FuncDecl ---------------
------------Looking For FuncIdent ---------------
------------Looking For ProcIdent ---------------
------------Looking For Statements ---------------
Rule 3:ProcBody_1-> Statements
FOLLOW['Statements'] { 'ELSEIF','ELSE' } U FOLLOW['ProcBody_1'] { } => FOLLOW['Statements'] { 'ELSEIF','ELSE' }
	ThenPart_1-> Statements ElseIfPart
Is ϵ in Set FIRST['ElseIfPart']
TRUE
Rule 2 3 4:ThenPart_1-> Statements ElseIfPart
FOLLOW['ElseIfPart'] { } U FOLLOW['ThenPart_1'] { } => FOLLOW['ElseIfPart'] { }
FOLLOW['Statements'] { 'ELSEIF','ELSE' } U FOLLOW['ThenPart_1'] { } => FOLLOW['Statements'] { 'ELSEIF','ELSE' }
------------Looking For Statements_1 ---------------
------------Looking For Statement ---------------
	Statements-> Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements-> Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ; Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ; Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> FI Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> FI Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> OD Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> OD Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ) Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ) Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
	Statements_1-> ] Statement Statements_1
Is ϵ in Set FIRST['Statements_1']
TRUE
Rule 2 3 4:Statements_1-> ] Statement Statements_1
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statements_1'] { 'ELSEIF','ELSE' } => FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
------------Looking For StructStmts ---------------
Rule 3:Statement-> StructStmts
FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' } U FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' } => FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
------------Looking For WhileLoop ---------------
------------Looking For DoLoop ---------------
------------Looking For UNTILLstmt ---------------
	DoLoop-> Statements UNTILLstmt ;
Is ϵ in Set FIRST[';']
FALSE
Rule 2 3:DoLoop-> Statements UNTILLstmt ;
FOLLOW[';'] { } U FOLLOW['DoLoop'] { } => FOLLOW[';'] { }
------------Looking For IfStmt ---------------
------------Looking For ThenPart ---------------
------------Looking For ThenPart_1 ---------------
------------Looking For ElseIfPart ---------------
------------Looking For ArithExpr ---------------
	IfStmt-> ArithExpr ThenPart
Is ϵ in Set FIRST['ThenPart']
FALSE
Rule 2 3:IfStmt-> ArithExpr ThenPart
FOLLOW['ThenPart'] { } U FOLLOW['IfStmt'] { } => FOLLOW['ThenPart'] { }
	ElseIfPart-> ELSEIF ArithExpr ThenPart
Is ϵ in Set FIRST['ThenPart']
FALSE
Rule 2 3:ElseIfPart-> ELSEIF ArithExpr ThenPart
FOLLOW['ThenPart'] { } U FOLLOW['ElseIfPart'] { } => FOLLOW['ThenPart'] { }
	Factor-> ( ArithExpr )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:Factor-> ( ArithExpr )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	MemContentsType-> ( ArithExpr )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:MemContentsType-> ( ArithExpr )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For LogicalOR_1 ---------------
------------Looking For LogicalAND ---------------
	ArithExpr-> LogicalAND LogicalOR_1
Is ϵ in Set FIRST['LogicalOR_1']
TRUE
Rule 2 3 4:ArithExpr-> LogicalAND LogicalOR_1
FOLLOW['LogicalOR_1'] { 'THEN',')' } U FOLLOW['ArithExpr'] { 'THEN',')' } => FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['LogicalAND'] { 'OR','THEN',')' } U FOLLOW['ArithExpr'] { 'THEN',')' } => FOLLOW['LogicalAND'] { 'OR','THEN',')' }
	LogicalOR_1-> OR LogicalAND LogicalOR_1
Is ϵ in Set FIRST['LogicalOR_1']
TRUE
Rule 2 3 4:LogicalOR_1-> OR LogicalAND LogicalOR_1
FOLLOW['LogicalOR_1'] { 'THEN',')' } U FOLLOW['LogicalOR_1'] { 'THEN',')' } => FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['LogicalAND'] { 'OR','THEN',')' } U FOLLOW['LogicalOR_1'] { 'THEN',')' } => FOLLOW['LogicalAND'] { 'OR','THEN',')' }
------------Looking For LogicalAND_1 ---------------
------------Looking For RelOperation ---------------
	LogicalAND-> RelOperation LogicalAND_1
Is ϵ in Set FIRST['LogicalAND_1']
TRUE
Rule 2 3 4:LogicalAND-> RelOperation LogicalAND_1
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } U FOLLOW['LogicalAND'] { 'OR','THEN',')' } => FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } U FOLLOW['LogicalAND'] { 'OR','THEN',')' } => FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
	LogicalAND_1-> AND RelOperation LogicalAND_1
Is ϵ in Set FIRST['LogicalAND_1']
TRUE
Rule 2 3 4:LogicalAND_1-> AND RelOperation LogicalAND_1
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } U FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } => FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } U FOLLOW['LogicalAND_1'] { 'OR','THEN',')' } => FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
------------Looking For RelOperation_1 ---------------
------------Looking For RelEquals ---------------
	RelOperation-> RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation-> RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> > RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> > RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> < RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> < RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> GTEQ RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> GTEQ RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelOperation_1-> LTEQ RelEquals RelOperation_1
Is ϵ in Set FIRST['RelOperation_1']
TRUE
Rule 2 3 4:RelOperation_1-> LTEQ RelEquals RelOperation_1
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' } => FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For RelEquals_1 ---------------
------------Looking For BitwiseOR ---------------
	RelEquals-> BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals-> BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelEquals_1-> = BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals_1-> = BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	RelEquals_1-> # BitwiseOR RelEquals_1
Is ϵ in Set FIRST['RelEquals_1']
TRUE
Rule 2 3 4:RelEquals_1-> # BitwiseOR RelEquals_1
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For BitwiseOR_1 ---------------
------------Looking For BitwiseAND ---------------
	BitwiseOR-> BitwiseAND BitwiseOR_1
Is ϵ in Set FIRST['BitwiseOR_1']
TRUE
Rule 2 3 4:BitwiseOR-> BitwiseAND BitwiseOR_1
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	BitwiseOR_1-> % BitwiseAND BitwiseOR_1
Is ϵ in Set FIRST['BitwiseOR_1']
TRUE
Rule 2 3 4:BitwiseOR_1-> % BitwiseAND BitwiseOR_1
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For BitwiseAND_1 ---------------
------------Looking For BitwiseXOR ---------------
	BitwiseAND-> BitwiseXOR BitwiseAND_1
Is ϵ in Set FIRST['BitwiseAND_1']
TRUE
Rule 2 3 4:BitwiseAND-> BitwiseXOR BitwiseAND_1
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
Is ϵ in Set FIRST['BitwiseAND_1']
TRUE
Rule 2 3 4:BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For SimpleRelExpr_1 ---------------
------------Looking For AddExpr ---------------
	BitwiseXOR-> AddExpr SimpleRelExpr_1
Is ϵ in Set FIRST['SimpleRelExpr_1']
TRUE
Rule 2 3 4:BitwiseXOR-> AddExpr SimpleRelExpr_1
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
Is ϵ in Set FIRST['SimpleRelExpr_1']
TRUE
Rule 2 3 4:SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For AddExpr_1 ---------------
------------Looking For ShifExpr ---------------
	AddExpr-> ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr-> ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	AddExpr_1-> + ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr_1-> + ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	AddExpr_1-> - ShifExpr AddExpr_1
Is ϵ in Set FIRST['AddExpr_1']
TRUE
Rule 2 3 4:AddExpr_1-> - ShifExpr AddExpr_1
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For ShiftExpr_1 ---------------
------------Looking For MultExpr ---------------
	ShifExpr-> MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShifExpr-> MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	ShiftExpr_1-> LSH MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShiftExpr_1-> LSH MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	ShiftExpr_1-> RSH MultExpr ShiftExpr_1
Is ϵ in Set FIRST['ShiftExpr_1']
TRUE
Rule 2 3 4:ShiftExpr_1-> RSH MultExpr ShiftExpr_1
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For MultExpr_1 ---------------
------------Looking For Unary ---------------
	MultExpr-> Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr-> Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> * Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> * Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> / Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> / Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
	MultExpr_1-> MOD Unary MultExpr_1
Is ϵ in Set FIRST['MultExpr_1']
TRUE
Rule 2 3 4:MultExpr_1-> MOD Unary MultExpr_1
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For Factor ---------------
Rule 3:Unary-> Factor
FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For FUNCcall ---------------
Rule 3:Factor-> FUNCcall
FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
------------Looking For IdentList ---------------
	FUNCcall-> FuncIdent ( IdentList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:FUNCcall-> FuncIdent ( IdentList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For IdentList_1 ---------------
------------Looking For FundType ---------------
------------Looking For OptModifier ---------------
	Param-> RECORDTYPE OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> RECORDTYPE OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
	Param-> CHAR OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> CHAR OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
	Param-> BYTE OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> BYTE OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
	Param-> INT OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> INT OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
	Param-> CARD OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> CARD OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
	Param-> BOOL OptModifier Ident
Is ϵ in Set FIRST['Ident']
FALSE
Rule 2 3:Param-> BOOL OptModifier Ident
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['Param'] { ',',')' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
------------Looking For ParamList ---------------
	ProcDecl-> ProcIdent OptInit ( ParamList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:ProcDecl-> ProcIdent OptInit ( ParamList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['ProcDecl'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	FuncDecl-> FuncIdent OptInit ( ParamList )
Is ϵ in Set FIRST[')']
FALSE
Rule 2 3:FuncDecl-> FuncIdent OptInit ( ParamList )
FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['FuncDecl'] { } => FOLLOW[')'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For ParamList_1 ---------------
------------Looking For Param ---------------
	ParamList-> Param ParamList_1
Is ϵ in Set FIRST['ParamList_1']
TRUE
Rule 2 3 4:ParamList-> Param ParamList_1
FOLLOW['ParamList_1'] { ')' } U FOLLOW['ParamList'] { ')' } => FOLLOW['ParamList_1'] { ')' }
FOLLOW['Param'] { ',',')' } U FOLLOW['ParamList'] { ')' } => FOLLOW['Param'] { ',',')' }
	ParamList_1-> , Param ParamList_1
Is ϵ in Set FIRST['ParamList_1']
TRUE
Rule 2 3 4:ParamList_1-> , Param ParamList_1
FOLLOW['ParamList_1'] { ')' } U FOLLOW['ParamList_1'] { ')' } => FOLLOW['ParamList_1'] { ')' }
FOLLOW['Param'] { ',',')' } U FOLLOW['ParamList_1'] { ')' } => FOLLOW['Param'] { ',',')' }
------------Looking For VarDecls ---------------
	RecFieldList-> VarDecls RecFieldList_1
Is ϵ in Set FIRST['RecFieldList_1']
TRUE
Rule 2 3 4:RecFieldList-> VarDecls RecFieldList_1
FOLLOW['RecFieldList_1'] { ']' } U FOLLOW['RecFieldList'] { ']' } => FOLLOW['RecFieldList_1'] { ']' }
FOLLOW['VarDecls'] { ';',']' } U FOLLOW['RecFieldList'] { ']' } => FOLLOW['VarDecls'] { ';',']' }
	RecFieldList_1-> ; VarDecls RecFieldList_1
Is ϵ in Set FIRST['RecFieldList_1']
TRUE
Rule 2 3 4:RecFieldList_1-> ; VarDecls RecFieldList_1
FOLLOW['RecFieldList_1'] { ']' } U FOLLOW['RecFieldList_1'] { ']' } => FOLLOW['RecFieldList_1'] { ']' }
FOLLOW['VarDecls'] { ';',']' } U FOLLOW['RecFieldList_1'] { ']' } => FOLLOW['VarDecls'] { ';',']' }
------------Looking For SysDecls ---------------
	Module-> SysDecls Routines
Is ϵ in Set FIRST['Routines']
FALSE
Rule 2 3:Module-> SysDecls Routines
FOLLOW['Routines'] { 'MODULE' } U FOLLOW['Module'] { 'MODULE' } => FOLLOW['Routines'] { 'MODULE' }
	ProcBody-> SysDecls ProcBody_1
Is ϵ in Set FIRST['ProcBody_1']
FALSE
Rule 2 3:ProcBody-> SysDecls ProcBody_1
FOLLOW['ProcBody_1'] { } U FOLLOW['ProcBody'] { } => FOLLOW['ProcBody_1'] { }
------------Looking For SysDecls_1 ---------------
------------Looking For SysDecl ---------------
	SysDecls-> SysDecl SysDecls_1
Is ϵ in Set FIRST['SysDecls_1']
TRUE
Rule 2 3 4:SysDecls-> SysDecl SysDecls_1
FOLLOW['SysDecls_1'] { 'FUNC','PROC' } U FOLLOW['SysDecls'] { 'FUNC','PROC' } => FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['SysDecl'] { ';','FUNC','PROC' } U FOLLOW['SysDecls'] { 'FUNC','PROC' } => FOLLOW['SysDecl'] { ';','FUNC','PROC' }
	SysDecls_1-> ; SysDecl SysDecls_1
Is ϵ in Set FIRST['SysDecls_1']
TRUE
Rule 2 3 4:SysDecls_1-> ; SysDecl SysDecls_1
FOLLOW['SysDecls_1'] { 'FUNC','PROC' } U FOLLOW['SysDecls_1'] { 'FUNC','PROC' } => FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['SysDecl'] { ';','FUNC','PROC' } U FOLLOW['SysDecls_1'] { 'FUNC','PROC' } => FOLLOW['SysDecl'] { ';','FUNC','PROC' }
------------Looking For VarList ---------------
------------Looking For VarList_1 ---------------
------------Looking For VarName ---------------
	VarList-> VarName VarList_1
Is ϵ in Set FIRST['VarList_1']
TRUE
Rule 2 3 4:VarList-> VarName VarList_1
FOLLOW['VarList_1'] { ';','FUNC','PROC',']' } U FOLLOW['VarList'] { ';','FUNC','PROC',']' } => FOLLOW['VarList_1'] { ';','FUNC','PROC',']' }
FOLLOW['VarName'] { ',',';','FUNC','PROC',']' } U FOLLOW['VarList'] { ';','FUNC','PROC',']' } => FOLLOW['VarName'] { ',',';','FUNC','PROC',']' }
	VarList_1-> , VarName VarList_1
Is ϵ in Set FIRST['VarList_1']
TRUE
Rule 2 3 4:VarList_1-> , VarName VarList_1
FOLLOW['VarList_1'] { ';','FUNC','PROC',']' } U FOLLOW['VarList_1'] { ';','FUNC','PROC',']' } => FOLLOW['VarList_1'] { ';','FUNC','PROC',']' }
FOLLOW['VarName'] { ',',';','FUNC','PROC',']' } U FOLLOW['VarList_1'] { ';','FUNC','PROC',']' } => FOLLOW['VarName'] { ',',';','FUNC','PROC',']' }
------------Looking For OptInit ---------------
------------Looking For DefList ---------------
------------Looking For DefList_1 ---------------
------------Looking For Def ---------------
	DefList-> Def DefList_1
Is ϵ in Set FIRST['DefList_1']
TRUE
Rule 2 3 4:DefList-> Def DefList_1
FOLLOW['DefList_1'] { } U FOLLOW['DefList'] { } => FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' } U FOLLOW['DefList'] { } => FOLLOW['Def'] { ',' }
	DefList_1-> , Def DefList_1
Is ϵ in Set FIRST['DefList_1']
TRUE
Rule 2 3 4:DefList_1-> , Def DefList_1
FOLLOW['DefList_1'] { } U FOLLOW['DefList_1'] { } => FOLLOW['DefList_1'] { }
FOLLOW['Def'] { ',' } U FOLLOW['DefList_1'] { } => FOLLOW['Def'] { ',' }
------------Looking For RecIdent ---------------
------------Looking For RecField ---------------
Rule 3:RecIdent-> RecField
FOLLOW['RecField'] { } U FOLLOW['RecIdent'] { } => FOLLOW['RecField'] { }
------------Looking For RecFieldList ---------------
	RecField-> = [ RecFieldList ]
Is ϵ in Set FIRST[']']
FALSE
Rule 2 3:RecField-> = [ RecFieldList ]
FOLLOW[']'] { } U FOLLOW['RecField'] { } => FOLLOW[']'] { }
------------Looking For RecFieldList_1 ---------------
------------Looking For Modifier ---------------
	VarDecls-> RECORDTYPE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> RECORDTYPE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> CHAR Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> CHAR Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> BYTE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> BYTE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> INT Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> INT Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> CARD Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> CARD Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	VarDecls-> BOOL Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:VarDecls-> BOOL Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['VarDecls'] { ';',']' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> RECORDTYPE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> RECORDTYPE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> CHAR Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> CHAR Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> BYTE Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> BYTE Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> INT Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> INT Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
	SysDecl-> CARD Modifier VarList
Is ϵ in Set FIRST['VarList']
FALSE
Rule 2 3:SysDecl-> CARD Modifier VarList
FOLLOW['VarList'] { ';','FUNC','PROC',']' } U FOLLOW['SysDecl'] { ';','FUNC','PROC' } => FOLLOW['VarList'] { ';','FUNC','PROC',']' }
------------Looking For ArrayStuff ---------------
------------Looking For OptArrayInit ---------------
------------Looking For CompConstList ---------------
	OptArrayInit-> = [ CompConstList ]
Is ϵ in Set FIRST[']']
FALSE
Rule 2 3:OptArrayInit-> = [ CompConstList ]
FOLLOW[']'] { } U FOLLOW['OptArrayInit'] { } => FOLLOW[']'] { }
------------Looking For CompConstList_1 ---------------
------------Looking For CompConst ---------------
	CompConstList-> CompConst CompConstList_1
Is ϵ in Set FIRST['CompConstList_1']
TRUE
Rule 2 3 4:CompConstList-> CompConst CompConstList_1
FOLLOW['CompConstList_1'] { ']' } U FOLLOW['CompConstList'] { ']' } => FOLLOW['CompConstList_1'] { ']' }
FOLLOW['CompConst'] { ',',']' } U FOLLOW['CompConstList'] { ']' } => FOLLOW['CompConst'] { ',',']' }
	CompConstList_1-> , CompConst CompConstList_1
Is ϵ in Set FIRST['CompConstList_1']
TRUE
Rule 2 3 4:CompConstList_1-> , CompConst CompConstList_1
FOLLOW['CompConstList_1'] { ']' } U FOLLOW['CompConstList_1'] { ']' } => FOLLOW['CompConstList_1'] { ']' }
FOLLOW['CompConst'] { ',',']' } U FOLLOW['CompConstList_1'] { ']' } => FOLLOW['CompConst'] { ',',']' }
------------Looking For CompConst_1 ---------------
------------Looking For BaseCompConst ---------------
Rule 3:Factor-> BaseCompConst
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
	CompConst-> BaseCompConst CompConst_1
Is ϵ in Set FIRST['CompConst_1']
TRUE
Rule 2 3 4:CompConst-> BaseCompConst CompConst_1
FOLLOW['CompConst_1'] { ',',']' } U FOLLOW['CompConst'] { ',',']' } => FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['CompConst'] { ',',']' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
	CompConst_1-> + BaseCompConst CompConst_1
Is ϵ in Set FIRST['CompConst_1']
TRUE
Rule 2 3 4:CompConst_1-> + BaseCompConst CompConst_1
FOLLOW['CompConst_1'] { ',',']' } U FOLLOW['CompConst_1'] { ',',']' } => FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' } U FOLLOW['CompConst_1'] { ',',']' } => FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
------------Looking For Ident ---------------
	VarName-> Ident OptInit
Is ϵ in Set FIRST['OptInit']
TRUE
Rule 2 3 4:VarName-> Ident OptInit
FOLLOW['OptInit'] { ',',';','FUNC','PROC',']' } U FOLLOW['VarName'] { ',',';','FUNC','PROC',']' } => FOLLOW['OptInit'] { ',',';','FUNC','PROC',']' }
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['VarName'] { ',',';','FUNC','PROC',']' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
	MemContents-> Ident MemContentsType
Is ϵ in Set FIRST['MemContentsType']
TRUE
Rule 2 3 4:MemContents-> Ident MemContentsType
FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } => FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' } U FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } => FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
------------Looking For MemContents ---------------
Rule 3:Factor-> MemContents
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	IdentList-> MemContents IdentList_1
Is ϵ in Set FIRST['IdentList_1']
TRUE
Rule 2 3 4:IdentList-> MemContents IdentList_1
FOLLOW['IdentList_1'] { ')' } U FOLLOW['IdentList'] { ')' } => FOLLOW['IdentList_1'] { ')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['IdentList'] { ')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
	IdentList_1-> , MemContents IdentList_1
Is ϵ in Set FIRST['IdentList_1']
TRUE
Rule 2 3 4:IdentList_1-> , MemContents IdentList_1
FOLLOW['IdentList_1'] { ')' } U FOLLOW['IdentList_1'] { ')' } => FOLLOW['IdentList_1'] { ')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' } U FOLLOW['IdentList_1'] { ')' } => FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
------------Looking For MemContentsType ---------------
------------ Follow Sets ---------------
FOLLOW['ArithExpr'] { 'THEN',')' }
FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['IdentList'] { ')' }
FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['RecField'] { }
FOLLOW['SysDecls'] { 'FUNC','PROC' }
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
FOLLOW['ParamList_1'] { ')' }
FOLLOW['DoLoop'] { }
FOLLOW['OptModifier'] { 'IDENT' }
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Routine'] { 'END','MODULE' }
FOLLOW['WhileLoop'] { }
FOLLOW['RecIdent'] { }
FOLLOW['CompConstList'] { ']' }
FOLLOW['Def'] { ',' }
FOLLOW['ProcBody_1'] { }
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
FOLLOW['ThenPart_1'] { }
FOLLOW['VarDecls'] { ';',']' }
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
FOLLOW['Module'] { 'MODULE' }
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['SysDecl'] { ';','FUNC','PROC' }
FOLLOW['DefList'] { }
FOLLOW['ProcDecl'] { }
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
FOLLOW['Modifier'] { 'IDENT' }
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['ArrayStuff'] { }
FOLLOW['FuncDecl'] { }
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['FuncIdent'] { }
FOLLOW['VarList_1'] { ';','FUNC','PROC',']' }
FOLLOW['Action65'] { '$' }
FOLLOW['OptInit'] { ',',';','FUNC','PROC',']' }
FOLLOW['LogicalOR_1'] { 'THEN',')' }
FOLLOW['VarList'] { ';','FUNC','PROC',']' }
FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
FOLLOW['CompConst_1'] { ',',']' }
FOLLOW['RecFieldList_1'] { ']' }
FOLLOW['ThenPart'] { }
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
FOLLOW['RecFieldList'] { ']' }
FOLLOW['ParamList'] { ')' }
FOLLOW['LogicalAND'] { 'OR','THEN',')' }
FOLLOW['OptArrayInit'] { }
FOLLOW['UNTILLstmt'] { ';' }
FOLLOW['ElseIfPart'] { }
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
FOLLOW['FundType'] { }
FOLLOW['Param'] { ',',')' }
FOLLOW['CompConstList_1'] { ']' }
FOLLOW['Modules_1'] { }
FOLLOW['CompConst'] { ',',']' }
FOLLOW['Routines_1'] { 'MODULE' }
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
FOLLOW['Routines'] { 'MODULE' }
FOLLOW['VarName'] { ',',';','FUNC','PROC',']' }
FOLLOW['DefList_1'] { }
FOLLOW['Statements'] { 'ELSEIF','ELSE' }
FOLLOW['IdentList_1'] { ')' }
FOLLOW['ProcBody'] { }
FOLLOW['Modules'] { '$' }
FOLLOW['ProcIdent'] { }
FOLLOW['IfStmt'] { }

---------------- Create Parse Table --------------
------- Action65 --------
################> Rule 1 <#################
--------Action65-> Modules--------
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['TempFirstY'] { } U FIRST['Modules'] { 'MODULE' } => FIRST['TempFirstY'] { 'MODULE' }
******* MODULE ******
^^^^^^^ MODULE ^^^^^^^
FOLLOW['Action65'] { '$' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Action65-> Modules--------
Is 'ϵ' Not Contained in 'FIRST['Modules']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['TempFirstY'] { } U FIRST['Modules'] { 'MODULE' } => FIRST['TempFirstY'] { 'MODULE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'MODULE' }
 'MODULE'
------- Modules --------
################> Rule 1 <#################
--------Modules-> MODULE Modules_1--------
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['TempFirstY'] { } U FIRST['MODULE'] { 'MODULE' } => FIRST['TempFirstY'] { 'MODULE' }
******* MODULE ******
^^^^^^^ MODULE ^^^^^^^
FOLLOW['Modules'] { '$' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Modules-> MODULE Modules_1--------
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['TempFirstY'] { } U FIRST['MODULE'] { 'MODULE' } => FIRST['TempFirstY'] { 'MODULE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'MODULE' }
 'MODULE'
------- Modules_1 --------
################> Rule 1 <#################
--------Modules_1-> MODULE Module Modules_1--------
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['TempFirstY'] { } U FIRST['MODULE'] { 'MODULE' } => FIRST['TempFirstY'] { 'MODULE' }
******* MODULE ******
^^^^^^^ MODULE ^^^^^^^
--------Modules_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['Modules_1'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Modules_1-> MODULE Module Modules_1--------
Is 'ϵ' Not Contained in 'FIRST['MODULE']'
			Compare 'ϵ' To 'MODULE'
TRUE
FIRST['TempFirstY'] { } U FIRST['MODULE'] { 'MODULE' } => FIRST['TempFirstY'] { 'MODULE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'MODULE' }
 'MODULE'
--------Modules_1-> ϵ--------
FIRST['TempFirstY'] { 'MODULE' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'MODULE','ϵ' }
FIRST['TempFirstY'] { 'MODULE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'MODULE','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
Is $ in Set FOLLOW['Modules_1']
FALSE
  FIRST['TempFirstY'] { 'MODULE','ϵ' }
 'MODULE'
 'ϵ'
------- Module --------
################> Rule 1 <#################
--------Module-> SysDecls Routines--------
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
******* DEFINE ******
^^^^^^^ DEFINE ^^^^^^^
******* TYPE ******
^^^^^^^ TYPE ^^^^^^^
******* RECORDTYPE ******
^^^^^^^ RECORDTYPE ^^^^^^^
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
******* INT ******
^^^^^^^ INT ^^^^^^^
******* CARD ******
^^^^^^^ CARD ^^^^^^^
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
--------Module-> Routines--------
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['TempFirstY'] { } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['TempFirstY'] { 'FUNC','PROC' }
******* FUNC ******
^^^^^^^ FUNC ^^^^^^^
******* PROC ******
^^^^^^^ PROC ^^^^^^^
FOLLOW['Module'] { 'MODULE' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Module-> SysDecls Routines--------
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
--------Module-> Routines--------
Is 'ϵ' Not Contained in 'FIRST['Routines']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['Routines'] { 'FUNC','PROC' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','FUNC','PROC' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
 'FUNC'
 'PROC'
------- Routines --------
################> Rule 1 <#################
--------Routines-> Routine Routines_1--------
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['TempFirstY'] { } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['TempFirstY'] { 'FUNC','PROC' }
******* FUNC ******
^^^^^^^ FUNC ^^^^^^^
******* PROC ******
^^^^^^^ PROC ^^^^^^^
FOLLOW['Routines'] { 'MODULE' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Routines-> Routine Routines_1--------
Is 'ϵ' Not Contained in 'FIRST['Routine']'
			Compare 'ϵ' To 'FUNC'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['TempFirstY'] { } U FIRST['Routine'] { 'FUNC','PROC' } => FIRST['TempFirstY'] { 'FUNC','PROC' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'FUNC','PROC' }
 'FUNC'
 'PROC'
------- Routines_1 --------
################> Rule 1 <#################
--------Routines_1-> END Routine Routines_1--------
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['TempFirstY'] { } U FIRST['END'] { 'END' } => FIRST['TempFirstY'] { 'END' }
******* END ******
^^^^^^^ END ^^^^^^^
--------Routines_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['Routines_1'] { 'MODULE' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Routines_1-> END Routine Routines_1--------
Is 'ϵ' Not Contained in 'FIRST['END']'
			Compare 'ϵ' To 'END'
TRUE
FIRST['TempFirstY'] { } U FIRST['END'] { 'END' } => FIRST['TempFirstY'] { 'END' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'END' }
 'END'
--------Routines_1-> ϵ--------
FIRST['TempFirstY'] { 'END' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'END','ϵ' }
FIRST['TempFirstY'] { 'END','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'END','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'MODULE'
Is $ in Set FOLLOW['Routines_1']
FALSE
  FIRST['TempFirstY'] { 'END','ϵ' }
 'END'
 'ϵ'
------- Routine --------
################> Rule 1 <#################
--------Routine-> FUNC FundType FuncDecl BEGIN ProcBody--------
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['TempFirstY'] { } U FIRST['FUNC'] { 'FUNC' } => FIRST['TempFirstY'] { 'FUNC' }
******* FUNC ******
^^^^^^^ FUNC ^^^^^^^
--------Routine-> PROC ProcDecl BEGIN ProcBody--------
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['TempFirstY'] { } U FIRST['PROC'] { 'PROC' } => FIRST['TempFirstY'] { 'PROC' }
******* PROC ******
^^^^^^^ PROC ^^^^^^^
FOLLOW['Routine'] { 'END','MODULE' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Routine-> FUNC FundType FuncDecl BEGIN ProcBody--------
Is 'ϵ' Not Contained in 'FIRST['FUNC']'
			Compare 'ϵ' To 'FUNC'
TRUE
FIRST['TempFirstY'] { } U FIRST['FUNC'] { 'FUNC' } => FIRST['TempFirstY'] { 'FUNC' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'FUNC' }
 'FUNC'
--------Routine-> PROC ProcDecl BEGIN ProcBody--------
Is 'ϵ' Not Contained in 'FIRST['PROC']'
			Compare 'ϵ' To 'PROC'
TRUE
FIRST['TempFirstY'] { 'FUNC' } U FIRST['PROC'] { 'PROC' } => FIRST['TempFirstY'] { 'FUNC','PROC' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'FUNC','PROC' }
 'FUNC'
 'PROC'
------- ProcBody --------
################> Rule 1 <#################
--------ProcBody-> SysDecls ProcBody_1--------
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
******* DEFINE ******
^^^^^^^ DEFINE ^^^^^^^
******* TYPE ******
^^^^^^^ TYPE ^^^^^^^
******* RECORDTYPE ******
^^^^^^^ RECORDTYPE ^^^^^^^
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
******* INT ******
^^^^^^^ INT ^^^^^^^
******* CARD ******
^^^^^^^ CARD ^^^^^^^
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
FOLLOW['ProcBody'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ProcBody-> SysDecls ProcBody_1--------
Is 'ϵ' Not Contained in 'FIRST['SysDecls']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecls']
TRUE
End of Y1Y2...Yk Chain
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
------- ProcBody_1 --------
################> Rule 1 <#################
--------ProcBody_1-> Statements--------
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['TempFirstY'] { } U FIRST['Statements'] { } => FIRST['TempFirstY'] { }
FOLLOW['ProcBody_1'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ProcBody_1-> Statements--------
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['TempFirstY'] { } U FIRST['Statements'] { } => FIRST['TempFirstY'] { }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { }
------- ProcDecl --------
################> Rule 1 <#################
--------ProcDecl-> ProcIdent OptInit ( ParamList )--------
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['TempFirstY'] { 'PROC_IDENT' }
******* PROC_IDENT ******
^^^^^^^ PROC_IDENT ^^^^^^^
FOLLOW['ProcDecl'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ProcDecl-> ProcIdent OptInit ( ParamList )--------
Is 'ϵ' Not Contained in 'FIRST['ProcIdent']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['ProcIdent'] { 'PROC_IDENT' } => FIRST['TempFirstY'] { 'PROC_IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'PROC_IDENT' }
 'PROC_IDENT'
------- FuncDecl --------
################> Rule 1 <#################
--------FuncDecl-> FuncIdent OptInit ( ParamList )--------
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['TempFirstY'] { 'FUNC_IDENT' }
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
FOLLOW['FuncDecl'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------FuncDecl-> FuncIdent OptInit ( ParamList )--------
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['TempFirstY'] { 'FUNC_IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'FUNC_IDENT' }
 'FUNC_IDENT'
------- FuncIdent --------
################> Rule 1 <#################
--------FuncIdent-> FUNC_IDENT--------
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['TempFirstY'] { 'FUNC_IDENT' }
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
FOLLOW['FuncIdent'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------FuncIdent-> FUNC_IDENT--------
Is 'ϵ' Not Contained in 'FIRST['FUNC_IDENT']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['FUNC_IDENT'] { 'FUNC_IDENT' } => FIRST['TempFirstY'] { 'FUNC_IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'FUNC_IDENT' }
 'FUNC_IDENT'
------- ProcIdent --------
################> Rule 1 <#################
--------ProcIdent-> PROC_IDENT--------
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['TempFirstY'] { 'PROC_IDENT' }
******* PROC_IDENT ******
^^^^^^^ PROC_IDENT ^^^^^^^
FOLLOW['ProcIdent'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ProcIdent-> PROC_IDENT--------
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['TempFirstY'] { 'PROC_IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'PROC_IDENT' }
 'PROC_IDENT'
------- Statements --------
################> Rule 1 <#################
--------Statements-> Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
FOLLOW['Statements'] { 'ELSEIF','ELSE' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Statements-> Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST['Statement']'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['Statement']
TRUE
End of Y1Y2...Yk Chain
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { }
------- Statements_1 --------
################> Rule 1 <#################
--------Statements_1-> ; Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['TempFirstY'] { } U FIRST[';'] { ';' } => FIRST['TempFirstY'] { ';' }
******* ; ******
^^^^^^^ ; ^^^^^^^
--------Statements_1-> FI Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['TempFirstY'] { } U FIRST['FI'] { 'FI' } => FIRST['TempFirstY'] { 'FI' }
******* FI ******
^^^^^^^ FI ^^^^^^^
--------Statements_1-> OD Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['TempFirstY'] { } U FIRST['OD'] { 'OD' } => FIRST['TempFirstY'] { 'OD' }
******* OD ******
^^^^^^^ OD ^^^^^^^
--------Statements_1-> ) Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['TempFirstY'] { } U FIRST[')'] { ')' } => FIRST['TempFirstY'] { ')' }
******* ) ******
^^^^^^^ ) ^^^^^^^
--------Statements_1-> ] Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['TempFirstY'] { } U FIRST[']'] { ']' } => FIRST['TempFirstY'] { ']' }
******* ] ******
^^^^^^^ ] ^^^^^^^
--------Statements_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['Statements_1'] { 'ELSEIF','ELSE' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Statements_1-> ; Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['TempFirstY'] { } U FIRST[';'] { ';' } => FIRST['TempFirstY'] { ';' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ';' }
 ';'
--------Statements_1-> FI Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST['FI']'
			Compare 'ϵ' To 'FI'
TRUE
FIRST['TempFirstY'] { ';' } U FIRST['FI'] { 'FI' } => FIRST['TempFirstY'] { ';','FI' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ';','FI' }
 ';'
 'FI'
--------Statements_1-> OD Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST['OD']'
			Compare 'ϵ' To 'OD'
TRUE
FIRST['TempFirstY'] { ';','FI' } U FIRST['OD'] { 'OD' } => FIRST['TempFirstY'] { ';','FI','OD' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ';','FI','OD' }
 ';'
 'FI'
 'OD'
--------Statements_1-> ) Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST[')']'
			Compare 'ϵ' To ')'
TRUE
FIRST['TempFirstY'] { ';','FI','OD' } U FIRST[')'] { ')' } => FIRST['TempFirstY'] { ';','FI','OD',')' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ';','FI','OD',')' }
 ';'
 'FI'
 'OD'
 ')'
--------Statements_1-> ] Statement Statements_1--------
Is 'ϵ' Not Contained in 'FIRST[']']'
			Compare 'ϵ' To ']'
TRUE
FIRST['TempFirstY'] { ';','FI','OD',')' } U FIRST[']'] { ']' } => FIRST['TempFirstY'] { ';','FI','OD',')',']' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ';','FI','OD',')',']' }
 ';'
 'FI'
 'OD'
 ')'
 ']'
--------Statements_1-> ϵ--------
FIRST['TempFirstY'] { ';','FI','OD',')',']' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ';','FI','OD',')',']','ϵ' }
FIRST['TempFirstY'] { ';','FI','OD',')',']','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ';','FI','OD',')',']','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'ELSEIF'
 'ELSE'
Is $ in Set FOLLOW['Statements_1']
FALSE
  FIRST['TempFirstY'] { ';','FI','OD',')',']','ϵ' }
 ';'
 'FI'
 'OD'
 ')'
 ']'
 'ϵ'
------- Statement --------
################> Rule 1 <#################
--------Statement-> StructStmts--------
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['Statement'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Statement-> StructStmts--------
Is 'ϵ' Not Contained in 'FIRST['StructStmts']'
			Compare 'ϵ' To 'PROC_IDENT'
			Compare 'ϵ' To 'IF'
			Compare 'ϵ' To 'WHILE'
			Compare 'ϵ' To 'DO'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['StructStmts']
TRUE
End of Y1Y2...Yk Chain
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ';'
 'FI'
 'OD'
 ')'
 ']'
 'ELSEIF'
 'ELSE'
Is $ in Set FOLLOW['Statement']
FALSE
  FIRST['TempFirstY'] { 'ϵ' }
 'ϵ'
------- StructStmts --------
################> Rule 1 <#################
--------StructStmts-> PROC_IDENT ( IdentList--------
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['TempFirstY'] { 'PROC_IDENT' }
******* PROC_IDENT ******
^^^^^^^ PROC_IDENT ^^^^^^^
--------StructStmts-> IF IfStmt--------
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['TempFirstY'] { } U FIRST['IF'] { 'IF' } => FIRST['TempFirstY'] { 'IF' }
******* IF ******
^^^^^^^ IF ^^^^^^^
--------StructStmts-> WHILE WhileLoop--------
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['TempFirstY'] { } U FIRST['WHILE'] { 'WHILE' } => FIRST['TempFirstY'] { 'WHILE' }
******* WHILE ******
^^^^^^^ WHILE ^^^^^^^
--------StructStmts-> DO DoLoop--------
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['TempFirstY'] { } U FIRST['DO'] { 'DO' } => FIRST['TempFirstY'] { 'DO' }
******* DO ******
^^^^^^^ DO ^^^^^^^
--------StructStmts-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['StructStmts'] { ';','FI','OD',')',']','ELSEIF','ELSE' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------StructStmts-> PROC_IDENT ( IdentList--------
Is 'ϵ' Not Contained in 'FIRST['PROC_IDENT']'
			Compare 'ϵ' To 'PROC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['PROC_IDENT'] { 'PROC_IDENT' } => FIRST['TempFirstY'] { 'PROC_IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'PROC_IDENT' }
 'PROC_IDENT'
--------StructStmts-> IF IfStmt--------
Is 'ϵ' Not Contained in 'FIRST['IF']'
			Compare 'ϵ' To 'IF'
TRUE
FIRST['TempFirstY'] { 'PROC_IDENT' } U FIRST['IF'] { 'IF' } => FIRST['TempFirstY'] { 'PROC_IDENT','IF' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'PROC_IDENT','IF' }
 'PROC_IDENT'
 'IF'
--------StructStmts-> WHILE WhileLoop--------
Is 'ϵ' Not Contained in 'FIRST['WHILE']'
			Compare 'ϵ' To 'WHILE'
TRUE
FIRST['TempFirstY'] { 'PROC_IDENT','IF' } U FIRST['WHILE'] { 'WHILE' } => FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE' }
 'PROC_IDENT'
 'IF'
 'WHILE'
--------StructStmts-> DO DoLoop--------
Is 'ϵ' Not Contained in 'FIRST['DO']'
			Compare 'ϵ' To 'DO'
TRUE
FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE' } U FIRST['DO'] { 'DO' } => FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE','DO' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE','DO' }
 'PROC_IDENT'
 'IF'
 'WHILE'
 'DO'
--------StructStmts-> ϵ--------
FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE','DO' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ';'
 'FI'
 'OD'
 ')'
 ']'
 'ELSEIF'
 'ELSE'
Is $ in Set FOLLOW['StructStmts']
FALSE
  FIRST['TempFirstY'] { 'PROC_IDENT','IF','WHILE','DO','ϵ' }
 'PROC_IDENT'
 'IF'
 'WHILE'
 'DO'
 'ϵ'
------- WhileLoop --------
################> Rule 1 <#################
--------WhileLoop-> ArithExpr DO Statements--------
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['WhileLoop'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------WhileLoop-> ArithExpr DO Statements--------
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- DoLoop --------
################> Rule 1 <#################
--------DoLoop-> Statements UNTILLstmt ;--------
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['TempFirstY'] { } U FIRST['Statements'] { } => FIRST['TempFirstY'] { }
FOLLOW['DoLoop'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------DoLoop-> Statements UNTILLstmt ;--------
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['TempFirstY'] { } U FIRST['Statements'] { } => FIRST['TempFirstY'] { }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { }
------- UNTILLstmt --------
################> Rule 1 <#################
--------UNTILLstmt-> UNTILL ArithExpr--------
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['TempFirstY'] { } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['TempFirstY'] { 'UNTILL' }
******* UNTILL ******
^^^^^^^ UNTILL ^^^^^^^
FOLLOW['UNTILLstmt'] { ';' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------UNTILLstmt-> UNTILL ArithExpr--------
Is 'ϵ' Not Contained in 'FIRST['UNTILL']'
			Compare 'ϵ' To 'UNTILL'
TRUE
FIRST['TempFirstY'] { } U FIRST['UNTILL'] { 'UNTILL' } => FIRST['TempFirstY'] { 'UNTILL' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'UNTILL' }
 'UNTILL'
------- IfStmt --------
################> Rule 1 <#################
--------IfStmt-> ArithExpr ThenPart--------
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['IfStmt'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------IfStmt-> ArithExpr ThenPart--------
Is 'ϵ' Not Contained in 'FIRST['ArithExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['ArithExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- ThenPart --------
################> Rule 1 <#################
--------ThenPart-> THEN ThenPart_1--------
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['TempFirstY'] { } U FIRST['THEN'] { 'THEN' } => FIRST['TempFirstY'] { 'THEN' }
******* THEN ******
^^^^^^^ THEN ^^^^^^^
FOLLOW['ThenPart'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ThenPart-> THEN ThenPart_1--------
Is 'ϵ' Not Contained in 'FIRST['THEN']'
			Compare 'ϵ' To 'THEN'
TRUE
FIRST['TempFirstY'] { } U FIRST['THEN'] { 'THEN' } => FIRST['TempFirstY'] { 'THEN' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'THEN' }
 'THEN'
------- ThenPart_1 --------
################> Rule 1 <#################
--------ThenPart_1-> Statements ElseIfPart--------
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['TempFirstY'] { } U FIRST['Statements'] { } => FIRST['TempFirstY'] { }
FOLLOW['ThenPart_1'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ThenPart_1-> Statements ElseIfPart--------
Is 'ϵ' Not Contained in 'FIRST['Statements']'
TRUE
FIRST['TempFirstY'] { } U FIRST['Statements'] { } => FIRST['TempFirstY'] { }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { }
------- ElseIfPart --------
################> Rule 1 <#################
--------ElseIfPart-> ELSEIF ArithExpr ThenPart--------
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['TempFirstY'] { } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['TempFirstY'] { 'ELSEIF' }
******* ELSEIF ******
^^^^^^^ ELSEIF ^^^^^^^
--------ElseIfPart-> ELSE Statements--------
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['TempFirstY'] { } U FIRST['ELSE'] { 'ELSE' } => FIRST['TempFirstY'] { 'ELSE' }
******* ELSE ******
^^^^^^^ ELSE ^^^^^^^
--------ElseIfPart-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['ElseIfPart'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ElseIfPart-> ELSEIF ArithExpr ThenPart--------
Is 'ϵ' Not Contained in 'FIRST['ELSEIF']'
			Compare 'ϵ' To 'ELSEIF'
TRUE
FIRST['TempFirstY'] { } U FIRST['ELSEIF'] { 'ELSEIF' } => FIRST['TempFirstY'] { 'ELSEIF' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'ELSEIF' }
 'ELSEIF'
--------ElseIfPart-> ELSE Statements--------
Is 'ϵ' Not Contained in 'FIRST['ELSE']'
			Compare 'ϵ' To 'ELSE'
TRUE
FIRST['TempFirstY'] { 'ELSEIF' } U FIRST['ELSE'] { 'ELSE' } => FIRST['TempFirstY'] { 'ELSEIF','ELSE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'ELSEIF','ELSE' }
 'ELSEIF'
 'ELSE'
--------ElseIfPart-> ϵ--------
FIRST['TempFirstY'] { 'ELSEIF','ELSE' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ELSEIF','ELSE','ϵ' }
FIRST['TempFirstY'] { 'ELSEIF','ELSE','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ELSEIF','ELSE','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
Is $ in Set FOLLOW['ElseIfPart']
FALSE
  FIRST['TempFirstY'] { 'ELSEIF','ELSE','ϵ' }
 'ELSEIF'
 'ELSE'
 'ϵ'
------- ArithExpr --------
################> Rule 1 <#################
--------ArithExpr-> LogicalAND LogicalOR_1--------
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['ArithExpr'] { 'THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ArithExpr-> LogicalAND LogicalOR_1--------
Is 'ϵ' Not Contained in 'FIRST['LogicalAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['LogicalAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- LogicalOR_1 --------
################> Rule 1 <#################
--------LogicalOR_1-> OR LogicalAND LogicalOR_1--------
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['TempFirstY'] { } U FIRST['OR'] { 'OR' } => FIRST['TempFirstY'] { 'OR' }
******* OR ******
^^^^^^^ OR ^^^^^^^
--------LogicalOR_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['LogicalOR_1'] { 'THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------LogicalOR_1-> OR LogicalAND LogicalOR_1--------
Is 'ϵ' Not Contained in 'FIRST['OR']'
			Compare 'ϵ' To 'OR'
TRUE
FIRST['TempFirstY'] { } U FIRST['OR'] { 'OR' } => FIRST['TempFirstY'] { 'OR' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'OR' }
 'OR'
--------LogicalOR_1-> ϵ--------
FIRST['TempFirstY'] { 'OR' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'OR','ϵ' }
FIRST['TempFirstY'] { 'OR','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'OR','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'THEN'
 ')'
Is $ in Set FOLLOW['LogicalOR_1']
FALSE
  FIRST['TempFirstY'] { 'OR','ϵ' }
 'OR'
 'ϵ'
------- LogicalAND --------
################> Rule 1 <#################
--------LogicalAND-> RelOperation LogicalAND_1--------
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['LogicalAND'] { 'OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------LogicalAND-> RelOperation LogicalAND_1--------
Is 'ϵ' Not Contained in 'FIRST['RelOperation']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['RelOperation'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- LogicalAND_1 --------
################> Rule 1 <#################
--------LogicalAND_1-> AND RelOperation LogicalAND_1--------
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['TempFirstY'] { } U FIRST['AND'] { 'AND' } => FIRST['TempFirstY'] { 'AND' }
******* AND ******
^^^^^^^ AND ^^^^^^^
--------LogicalAND_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['LogicalAND_1'] { 'OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------LogicalAND_1-> AND RelOperation LogicalAND_1--------
Is 'ϵ' Not Contained in 'FIRST['AND']'
			Compare 'ϵ' To 'AND'
TRUE
FIRST['TempFirstY'] { } U FIRST['AND'] { 'AND' } => FIRST['TempFirstY'] { 'AND' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'AND' }
 'AND'
--------LogicalAND_1-> ϵ--------
FIRST['TempFirstY'] { 'AND' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'AND','ϵ' }
FIRST['TempFirstY'] { 'AND','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'AND','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['LogicalAND_1']
FALSE
  FIRST['TempFirstY'] { 'AND','ϵ' }
 'AND'
 'ϵ'
------- RelOperation --------
################> Rule 1 <#################
--------RelOperation-> RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['RelOperation'] { 'AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------RelOperation-> RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['RelEquals']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['RelEquals'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- RelOperation_1 --------
################> Rule 1 <#################
--------RelOperation_1-> > RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['TempFirstY'] { } U FIRST['>'] { '>' } => FIRST['TempFirstY'] { '>' }
******* > ******
^^^^^^^ > ^^^^^^^
--------RelOperation_1-> < RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['TempFirstY'] { } U FIRST['<'] { '<' } => FIRST['TempFirstY'] { '<' }
******* < ******
^^^^^^^ < ^^^^^^^
--------RelOperation_1-> GTEQ RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['TempFirstY'] { } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['TempFirstY'] { 'GTEQ' }
******* GTEQ ******
^^^^^^^ GTEQ ^^^^^^^
--------RelOperation_1-> LTEQ RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['TempFirstY'] { } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['TempFirstY'] { 'LTEQ' }
******* LTEQ ******
^^^^^^^ LTEQ ^^^^^^^
--------RelOperation_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['RelOperation_1'] { 'AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------RelOperation_1-> > RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['>']'
			Compare 'ϵ' To '>'
TRUE
FIRST['TempFirstY'] { } U FIRST['>'] { '>' } => FIRST['TempFirstY'] { '>' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '>' }
 '>'
--------RelOperation_1-> < RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['<']'
			Compare 'ϵ' To '<'
TRUE
FIRST['TempFirstY'] { '>' } U FIRST['<'] { '<' } => FIRST['TempFirstY'] { '>','<' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '>','<' }
 '>'
 '<'
--------RelOperation_1-> GTEQ RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['GTEQ']'
			Compare 'ϵ' To 'GTEQ'
TRUE
FIRST['TempFirstY'] { '>','<' } U FIRST['GTEQ'] { 'GTEQ' } => FIRST['TempFirstY'] { '>','<','GTEQ' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '>','<','GTEQ' }
 '>'
 '<'
 'GTEQ'
--------RelOperation_1-> LTEQ RelEquals RelOperation_1--------
Is 'ϵ' Not Contained in 'FIRST['LTEQ']'
			Compare 'ϵ' To 'LTEQ'
TRUE
FIRST['TempFirstY'] { '>','<','GTEQ' } U FIRST['LTEQ'] { 'LTEQ' } => FIRST['TempFirstY'] { '>','<','GTEQ','LTEQ' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '>','<','GTEQ','LTEQ' }
 '>'
 '<'
 'GTEQ'
 'LTEQ'
--------RelOperation_1-> ϵ--------
FIRST['TempFirstY'] { '>','<','GTEQ','LTEQ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '>','<','GTEQ','LTEQ','ϵ' }
FIRST['TempFirstY'] { '>','<','GTEQ','LTEQ','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '>','<','GTEQ','LTEQ','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'AND'
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['RelOperation_1']
FALSE
  FIRST['TempFirstY'] { '>','<','GTEQ','LTEQ','ϵ' }
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'ϵ'
------- RelEquals --------
################> Rule 1 <#################
--------RelEquals-> BitwiseOR RelEquals_1--------
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['RelEquals'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------RelEquals-> BitwiseOR RelEquals_1--------
Is 'ϵ' Not Contained in 'FIRST['BitwiseOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['BitwiseOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- RelEquals_1 --------
################> Rule 1 <#################
--------RelEquals_1-> = BitwiseOR RelEquals_1--------
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['='] { '=' } => FIRST['TempFirstY'] { '=' }
******* = ******
^^^^^^^ = ^^^^^^^
--------RelEquals_1-> # BitwiseOR RelEquals_1--------
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['TempFirstY'] { } U FIRST['#'] { '#' } => FIRST['TempFirstY'] { '#' }
******* # ******
^^^^^^^ # ^^^^^^^
--------RelEquals_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['RelEquals_1'] { '>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------RelEquals_1-> = BitwiseOR RelEquals_1--------
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['='] { '=' } => FIRST['TempFirstY'] { '=' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '=' }
 '='
--------RelEquals_1-> # BitwiseOR RelEquals_1--------
Is 'ϵ' Not Contained in 'FIRST['#']'
			Compare 'ϵ' To '#'
TRUE
FIRST['TempFirstY'] { '=' } U FIRST['#'] { '#' } => FIRST['TempFirstY'] { '=','#' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '=','#' }
 '='
 '#'
--------RelEquals_1-> ϵ--------
FIRST['TempFirstY'] { '=','#' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '=','#','ϵ' }
FIRST['TempFirstY'] { '=','#','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '=','#','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'AND'
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['RelEquals_1']
FALSE
  FIRST['TempFirstY'] { '=','#','ϵ' }
 '='
 '#'
 'ϵ'
------- BitwiseOR --------
################> Rule 1 <#################
--------BitwiseOR-> BitwiseAND BitwiseOR_1--------
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['BitwiseOR'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------BitwiseOR-> BitwiseAND BitwiseOR_1--------
Is 'ϵ' Not Contained in 'FIRST['BitwiseAND']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['BitwiseAND'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- BitwiseOR_1 --------
################> Rule 1 <#################
--------BitwiseOR_1-> % BitwiseAND BitwiseOR_1--------
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['TempFirstY'] { } U FIRST['%'] { '%' } => FIRST['TempFirstY'] { '%' }
******* % ******
^^^^^^^ % ^^^^^^^
--------BitwiseOR_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['BitwiseOR_1'] { '=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------BitwiseOR_1-> % BitwiseAND BitwiseOR_1--------
Is 'ϵ' Not Contained in 'FIRST['%']'
			Compare 'ϵ' To '%'
TRUE
FIRST['TempFirstY'] { } U FIRST['%'] { '%' } => FIRST['TempFirstY'] { '%' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '%' }
 '%'
--------BitwiseOR_1-> ϵ--------
FIRST['TempFirstY'] { '%' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '%','ϵ' }
FIRST['TempFirstY'] { '%','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '%','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 '='
 '#'
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'AND'
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['BitwiseOR_1']
FALSE
  FIRST['TempFirstY'] { '%','ϵ' }
 '%'
 'ϵ'
------- BitwiseAND --------
################> Rule 1 <#################
--------BitwiseAND-> BitwiseXOR BitwiseAND_1--------
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['BitwiseAND'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------BitwiseAND-> BitwiseXOR BitwiseAND_1--------
Is 'ϵ' Not Contained in 'FIRST['BitwiseXOR']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['BitwiseXOR'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- BitwiseAND_1 --------
################> Rule 1 <#################
--------BitwiseAND_1-> & BitwiseXOR BitwiseAND_1--------
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['TempFirstY'] { } U FIRST['&'] { '&' } => FIRST['TempFirstY'] { '&' }
******* & ******
^^^^^^^ & ^^^^^^^
--------BitwiseAND_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['BitwiseAND_1'] { '%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------BitwiseAND_1-> & BitwiseXOR BitwiseAND_1--------
Is 'ϵ' Not Contained in 'FIRST['&']'
			Compare 'ϵ' To '&'
TRUE
FIRST['TempFirstY'] { } U FIRST['&'] { '&' } => FIRST['TempFirstY'] { '&' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '&' }
 '&'
--------BitwiseAND_1-> ϵ--------
FIRST['TempFirstY'] { '&' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '&','ϵ' }
FIRST['TempFirstY'] { '&','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '&','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 '%'
 '='
 '#'
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'AND'
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['BitwiseAND_1']
FALSE
  FIRST['TempFirstY'] { '&','ϵ' }
 '&'
 'ϵ'
------- BitwiseXOR --------
################> Rule 1 <#################
--------BitwiseXOR-> AddExpr SimpleRelExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['BitwiseXOR'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------BitwiseXOR-> AddExpr SimpleRelExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['AddExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['AddExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- SimpleRelExpr_1 --------
################> Rule 1 <#################
--------SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['TempFirstY'] { } U FIRST['!'] { '!' } => FIRST['TempFirstY'] { '!' }
******* ! ******
^^^^^^^ ! ^^^^^^^
--------SimpleRelExpr_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['SimpleRelExpr_1'] { '&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['!']'
			Compare 'ϵ' To '!'
TRUE
FIRST['TempFirstY'] { } U FIRST['!'] { '!' } => FIRST['TempFirstY'] { '!' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '!' }
 '!'
--------SimpleRelExpr_1-> ϵ--------
FIRST['TempFirstY'] { '!' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '!','ϵ' }
FIRST['TempFirstY'] { '!','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '!','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 '&'
 '%'
 '='
 '#'
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'AND'
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['SimpleRelExpr_1']
FALSE
  FIRST['TempFirstY'] { '!','ϵ' }
 '!'
 'ϵ'
------- AddExpr --------
################> Rule 1 <#################
--------AddExpr-> ShifExpr AddExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['AddExpr'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------AddExpr-> ShifExpr AddExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['ShifExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['ShifExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- AddExpr_1 --------
################> Rule 1 <#################
--------AddExpr_1-> + ShifExpr AddExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['TempFirstY'] { } U FIRST['+'] { '+' } => FIRST['TempFirstY'] { '+' }
******* + ******
^^^^^^^ + ^^^^^^^
--------AddExpr_1-> - ShifExpr AddExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['TempFirstY'] { } U FIRST['-'] { '-' } => FIRST['TempFirstY'] { '-' }
******* - ******
^^^^^^^ - ^^^^^^^
--------AddExpr_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['AddExpr_1'] { '!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------AddExpr_1-> + ShifExpr AddExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['TempFirstY'] { } U FIRST['+'] { '+' } => FIRST['TempFirstY'] { '+' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '+' }
 '+'
--------AddExpr_1-> - ShifExpr AddExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['TempFirstY'] { '+' } U FIRST['-'] { '-' } => FIRST['TempFirstY'] { '+','-' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '+','-' }
 '+'
 '-'
--------AddExpr_1-> ϵ--------
FIRST['TempFirstY'] { '+','-' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '+','-','ϵ' }
FIRST['TempFirstY'] { '+','-','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '+','-','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 '!'
 '&'
 '%'
 '='
 '#'
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'AND'
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['AddExpr_1']
FALSE
  FIRST['TempFirstY'] { '+','-','ϵ' }
 '+'
 '-'
 'ϵ'
------- ShifExpr --------
################> Rule 1 <#################
--------ShifExpr-> MultExpr ShiftExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['ShifExpr'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ShifExpr-> MultExpr ShiftExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['MultExpr']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['MultExpr'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- ShiftExpr_1 --------
################> Rule 1 <#################
--------ShiftExpr_1-> LSH MultExpr ShiftExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['TempFirstY'] { } U FIRST['LSH'] { 'LSH' } => FIRST['TempFirstY'] { 'LSH' }
******* LSH ******
^^^^^^^ LSH ^^^^^^^
--------ShiftExpr_1-> RSH MultExpr ShiftExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['TempFirstY'] { } U FIRST['RSH'] { 'RSH' } => FIRST['TempFirstY'] { 'RSH' }
******* RSH ******
^^^^^^^ RSH ^^^^^^^
--------ShiftExpr_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['ShiftExpr_1'] { '+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ShiftExpr_1-> LSH MultExpr ShiftExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['LSH']'
			Compare 'ϵ' To 'LSH'
TRUE
FIRST['TempFirstY'] { } U FIRST['LSH'] { 'LSH' } => FIRST['TempFirstY'] { 'LSH' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'LSH' }
 'LSH'
--------ShiftExpr_1-> RSH MultExpr ShiftExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['RSH']'
			Compare 'ϵ' To 'RSH'
TRUE
FIRST['TempFirstY'] { 'LSH' } U FIRST['RSH'] { 'RSH' } => FIRST['TempFirstY'] { 'LSH','RSH' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'LSH','RSH' }
 'LSH'
 'RSH'
--------ShiftExpr_1-> ϵ--------
FIRST['TempFirstY'] { 'LSH','RSH' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'LSH','RSH','ϵ' }
FIRST['TempFirstY'] { 'LSH','RSH','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'LSH','RSH','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 '+'
 '-'
 '!'
 '&'
 '%'
 '='
 '#'
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'AND'
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['ShiftExpr_1']
FALSE
  FIRST['TempFirstY'] { 'LSH','RSH','ϵ' }
 'LSH'
 'RSH'
 'ϵ'
------- MultExpr --------
################> Rule 1 <#################
--------MultExpr-> Unary MultExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* - ******
^^^^^^^ - ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['MultExpr'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------MultExpr-> Unary MultExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['Unary']'
			Compare 'ϵ' To '-'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Unary'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- MultExpr_1 --------
################> Rule 1 <#################
--------MultExpr_1-> * Unary MultExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['TempFirstY'] { } U FIRST['*'] { '*' } => FIRST['TempFirstY'] { '*' }
******* * ******
^^^^^^^ * ^^^^^^^
--------MultExpr_1-> / Unary MultExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['TempFirstY'] { } U FIRST['/'] { '/' } => FIRST['TempFirstY'] { '/' }
******* / ******
^^^^^^^ / ^^^^^^^
--------MultExpr_1-> MOD Unary MultExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['TempFirstY'] { } U FIRST['MOD'] { 'MOD' } => FIRST['TempFirstY'] { 'MOD' }
******* MOD ******
^^^^^^^ MOD ^^^^^^^
--------MultExpr_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['MultExpr_1'] { 'LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------MultExpr_1-> * Unary MultExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['TempFirstY'] { } U FIRST['*'] { '*' } => FIRST['TempFirstY'] { '*' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '*' }
 '*'
--------MultExpr_1-> / Unary MultExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['/']'
			Compare 'ϵ' To '/'
TRUE
FIRST['TempFirstY'] { '*' } U FIRST['/'] { '/' } => FIRST['TempFirstY'] { '*','/' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '*','/' }
 '*'
 '/'
--------MultExpr_1-> MOD Unary MultExpr_1--------
Is 'ϵ' Not Contained in 'FIRST['MOD']'
			Compare 'ϵ' To 'MOD'
TRUE
FIRST['TempFirstY'] { '*','/' } U FIRST['MOD'] { 'MOD' } => FIRST['TempFirstY'] { '*','/','MOD' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '*','/','MOD' }
 '*'
 '/'
 'MOD'
--------MultExpr_1-> ϵ--------
FIRST['TempFirstY'] { '*','/','MOD' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '*','/','MOD','ϵ' }
FIRST['TempFirstY'] { '*','/','MOD','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '*','/','MOD','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'LSH'
 'RSH'
 '+'
 '-'
 '!'
 '&'
 '%'
 '='
 '#'
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'AND'
 'OR'
 'THEN'
 ')'
Is $ in Set FOLLOW['MultExpr_1']
FALSE
  FIRST['TempFirstY'] { '*','/','MOD','ϵ' }
 '*'
 '/'
 'MOD'
 'ϵ'
------- Unary --------
################> Rule 1 <#################
--------Unary-> - Unary--------
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['TempFirstY'] { } U FIRST['-'] { '-' } => FIRST['TempFirstY'] { '-' }
******* - ******
^^^^^^^ - ^^^^^^^
--------Unary-> Factor--------
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' }
******* ( ******
^^^^^^^ ( ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['Unary'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Unary-> - Unary--------
Is 'ϵ' Not Contained in 'FIRST['-']'
			Compare 'ϵ' To '-'
TRUE
FIRST['TempFirstY'] { } U FIRST['-'] { '-' } => FIRST['TempFirstY'] { '-' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-' }
 '-'
--------Unary-> Factor--------
Is 'ϵ' Not Contained in 'FIRST['Factor']'
			Compare 'ϵ' To '('
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
			Compare 'ϵ' To 'FUNC_IDENT'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { '-' } U FIRST['Factor'] { '(','NUMBER','*','@','FUNC_IDENT','IDENT' } => FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '-','(','NUMBER','*','@','FUNC_IDENT','IDENT' }
 '-'
 '('
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 'IDENT'
------- Factor --------
################> Rule 1 <#################
--------Factor-> BaseCompConst--------
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['TempFirstY'] { } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['TempFirstY'] { 'NUMBER','*','@' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
--------Factor-> FUNCcall--------
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['TempFirstY'] { 'FUNC_IDENT' }
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
--------Factor-> ( ArithExpr )--------
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['TempFirstY'] { } U FIRST['('] { '(' } => FIRST['TempFirstY'] { '(' }
******* ( ******
^^^^^^^ ( ^^^^^^^
--------Factor-> MemContents--------
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['MemContents'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['Factor'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Factor-> BaseCompConst--------
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['TempFirstY'] { } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['TempFirstY'] { 'NUMBER','*','@' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER','*','@' }
 'NUMBER'
 '*'
 '@'
--------Factor-> FUNCcall--------
Is 'ϵ' Not Contained in 'FIRST['FUNCcall']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['TempFirstY'] { 'NUMBER','*','@' } U FIRST['FUNCcall'] { 'FUNC_IDENT' } => FIRST['TempFirstY'] { 'NUMBER','*','@','FUNC_IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER','*','@','FUNC_IDENT' }
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
--------Factor-> ( ArithExpr )--------
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['TempFirstY'] { 'NUMBER','*','@','FUNC_IDENT' } U FIRST['('] { '(' } => FIRST['TempFirstY'] { 'NUMBER','*','@','FUNC_IDENT','(' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER','*','@','FUNC_IDENT','(' }
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 '('
--------Factor-> MemContents--------
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { 'NUMBER','*','@','FUNC_IDENT','(' } U FIRST['MemContents'] { 'IDENT' } => FIRST['TempFirstY'] { 'NUMBER','*','@','FUNC_IDENT','(','IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER','*','@','FUNC_IDENT','(','IDENT' }
 'NUMBER'
 '*'
 '@'
 'FUNC_IDENT'
 '('
 'IDENT'
------- FUNCcall --------
################> Rule 1 <#################
--------FUNCcall-> FuncIdent ( IdentList )--------
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['TempFirstY'] { 'FUNC_IDENT' }
******* FUNC_IDENT ******
^^^^^^^ FUNC_IDENT ^^^^^^^
FOLLOW['FUNCcall'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------FUNCcall-> FuncIdent ( IdentList )--------
Is 'ϵ' Not Contained in 'FIRST['FuncIdent']'
			Compare 'ϵ' To 'FUNC_IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['FuncIdent'] { 'FUNC_IDENT' } => FIRST['TempFirstY'] { 'FUNC_IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'FUNC_IDENT' }
 'FUNC_IDENT'
------- IdentList --------
################> Rule 1 <#################
--------IdentList-> MemContents IdentList_1--------
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['MemContents'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['IdentList'] { ')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------IdentList-> MemContents IdentList_1--------
Is 'ϵ' Not Contained in 'FIRST['MemContents']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['MemContents'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'IDENT' }
 'IDENT'
------- IdentList_1 --------
################> Rule 1 <#################
--------IdentList_1-> , MemContents IdentList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
--------IdentList_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['IdentList_1'] { ')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------IdentList_1-> , MemContents IdentList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ',' }
 ','
--------IdentList_1-> ϵ--------
FIRST['TempFirstY'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
FIRST['TempFirstY'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ')'
Is $ in Set FOLLOW['IdentList_1']
FALSE
  FIRST['TempFirstY'] { ',','ϵ' }
 ','
 'ϵ'
------- FundType --------
################> Rule 1 <#################
--------FundType-> BOOL--------
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['BOOL'] { 'BOOL' } => FIRST['TempFirstY'] { 'BOOL' }
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
--------FundType-> CHAR OptModifier--------
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['TempFirstY'] { } U FIRST['CHAR'] { 'CHAR' } => FIRST['TempFirstY'] { 'CHAR' }
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
--------FundType-> BYTE OptModifier--------
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['TempFirstY'] { } U FIRST['BYTE'] { 'BYTE' } => FIRST['TempFirstY'] { 'BYTE' }
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
--------FundType-> INT OptModifier--------
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['TempFirstY'] { } U FIRST['INT'] { 'INT' } => FIRST['TempFirstY'] { 'INT' }
******* INT ******
^^^^^^^ INT ^^^^^^^
--------FundType-> CARD OptModifier--------
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['TempFirstY'] { } U FIRST['CARD'] { 'CARD' } => FIRST['TempFirstY'] { 'CARD' }
******* CARD ******
^^^^^^^ CARD ^^^^^^^
FOLLOW['FundType'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------FundType-> BOOL--------
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['BOOL'] { 'BOOL' } => FIRST['TempFirstY'] { 'BOOL' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'BOOL' }
 'BOOL'
--------FundType-> CHAR OptModifier--------
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['TempFirstY'] { 'BOOL' } U FIRST['CHAR'] { 'CHAR' } => FIRST['TempFirstY'] { 'BOOL','CHAR' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'BOOL','CHAR' }
 'BOOL'
 'CHAR'
--------FundType-> BYTE OptModifier--------
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['TempFirstY'] { 'BOOL','CHAR' } U FIRST['BYTE'] { 'BYTE' } => FIRST['TempFirstY'] { 'BOOL','CHAR','BYTE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'BOOL','CHAR','BYTE' }
 'BOOL'
 'CHAR'
 'BYTE'
--------FundType-> INT OptModifier--------
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['TempFirstY'] { 'BOOL','CHAR','BYTE' } U FIRST['INT'] { 'INT' } => FIRST['TempFirstY'] { 'BOOL','CHAR','BYTE','INT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'BOOL','CHAR','BYTE','INT' }
 'BOOL'
 'CHAR'
 'BYTE'
 'INT'
--------FundType-> CARD OptModifier--------
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['TempFirstY'] { 'BOOL','CHAR','BYTE','INT' } U FIRST['CARD'] { 'CARD' } => FIRST['TempFirstY'] { 'BOOL','CHAR','BYTE','INT','CARD' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'BOOL','CHAR','BYTE','INT','CARD' }
 'BOOL'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
------- OptModifier --------
################> Rule 1 <#################
--------OptModifier-> POINTER--------
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['TempFirstY'] { } U FIRST['POINTER'] { 'POINTER' } => FIRST['TempFirstY'] { 'POINTER' }
******* POINTER ******
^^^^^^^ POINTER ^^^^^^^
--------OptModifier-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['OptModifier'] { 'IDENT' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------OptModifier-> POINTER--------
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['TempFirstY'] { } U FIRST['POINTER'] { 'POINTER' } => FIRST['TempFirstY'] { 'POINTER' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'POINTER' }
 'POINTER'
--------OptModifier-> ϵ--------
FIRST['TempFirstY'] { 'POINTER' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'POINTER','ϵ' }
FIRST['TempFirstY'] { 'POINTER','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'POINTER','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'IDENT'
Is $ in Set FOLLOW['OptModifier']
FALSE
  FIRST['TempFirstY'] { 'POINTER','ϵ' }
 'POINTER'
 'ϵ'
------- ParamList --------
################> Rule 1 <#################
--------ParamList-> Param ParamList_1--------
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
******* RECORDTYPE ******
^^^^^^^ RECORDTYPE ^^^^^^^
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
******* INT ******
^^^^^^^ INT ^^^^^^^
******* CARD ******
^^^^^^^ CARD ^^^^^^^
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
FOLLOW['ParamList'] { ')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ParamList-> Param ParamList_1--------
Is 'ϵ' Not Contained in 'FIRST['Param']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['Param'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
------- ParamList_1 --------
################> Rule 1 <#################
--------ParamList_1-> , Param ParamList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
--------ParamList_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['ParamList_1'] { ')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ParamList_1-> , Param ParamList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ',' }
 ','
--------ParamList_1-> ϵ--------
FIRST['TempFirstY'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
FIRST['TempFirstY'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ')'
Is $ in Set FOLLOW['ParamList_1']
FALSE
  FIRST['TempFirstY'] { ',','ϵ' }
 ','
 'ϵ'
------- Param --------
################> Rule 1 <#################
--------Param-> RECORDTYPE OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['TempFirstY'] { } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['TempFirstY'] { 'RECORDTYPE' }
******* RECORDTYPE ******
^^^^^^^ RECORDTYPE ^^^^^^^
--------Param-> CHAR OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['TempFirstY'] { } U FIRST['CHAR'] { 'CHAR' } => FIRST['TempFirstY'] { 'CHAR' }
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
--------Param-> BYTE OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['TempFirstY'] { } U FIRST['BYTE'] { 'BYTE' } => FIRST['TempFirstY'] { 'BYTE' }
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
--------Param-> INT OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['TempFirstY'] { } U FIRST['INT'] { 'INT' } => FIRST['TempFirstY'] { 'INT' }
******* INT ******
^^^^^^^ INT ^^^^^^^
--------Param-> CARD OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['TempFirstY'] { } U FIRST['CARD'] { 'CARD' } => FIRST['TempFirstY'] { 'CARD' }
******* CARD ******
^^^^^^^ CARD ^^^^^^^
--------Param-> BOOL OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['BOOL'] { 'BOOL' } => FIRST['TempFirstY'] { 'BOOL' }
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
FOLLOW['Param'] { ',',')' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Param-> RECORDTYPE OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['TempFirstY'] { } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['TempFirstY'] { 'RECORDTYPE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE' }
 'RECORDTYPE'
--------Param-> CHAR OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE' } U FIRST['CHAR'] { 'CHAR' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR' }
 'RECORDTYPE'
 'CHAR'
--------Param-> BYTE OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE','CHAR' } U FIRST['BYTE'] { 'BYTE' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
--------Param-> INT OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE' } U FIRST['INT'] { 'INT' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
--------Param-> CARD OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT' } U FIRST['CARD'] { 'CARD' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
--------Param-> BOOL OptModifier Ident--------
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
------- VarDecls --------
################> Rule 1 <#################
--------VarDecls-> RECORDTYPE Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['TempFirstY'] { } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['TempFirstY'] { 'RECORDTYPE' }
******* RECORDTYPE ******
^^^^^^^ RECORDTYPE ^^^^^^^
--------VarDecls-> CHAR Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['TempFirstY'] { } U FIRST['CHAR'] { 'CHAR' } => FIRST['TempFirstY'] { 'CHAR' }
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
--------VarDecls-> BYTE Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['TempFirstY'] { } U FIRST['BYTE'] { 'BYTE' } => FIRST['TempFirstY'] { 'BYTE' }
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
--------VarDecls-> INT Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['TempFirstY'] { } U FIRST['INT'] { 'INT' } => FIRST['TempFirstY'] { 'INT' }
******* INT ******
^^^^^^^ INT ^^^^^^^
--------VarDecls-> CARD Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['TempFirstY'] { } U FIRST['CARD'] { 'CARD' } => FIRST['TempFirstY'] { 'CARD' }
******* CARD ******
^^^^^^^ CARD ^^^^^^^
--------VarDecls-> BOOL Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['BOOL'] { 'BOOL' } => FIRST['TempFirstY'] { 'BOOL' }
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
FOLLOW['VarDecls'] { ';',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------VarDecls-> RECORDTYPE Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['TempFirstY'] { } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['TempFirstY'] { 'RECORDTYPE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE' }
 'RECORDTYPE'
--------VarDecls-> CHAR Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE' } U FIRST['CHAR'] { 'CHAR' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR' }
 'RECORDTYPE'
 'CHAR'
--------VarDecls-> BYTE Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE','CHAR' } U FIRST['BYTE'] { 'BYTE' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
--------VarDecls-> INT Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE' } U FIRST['INT'] { 'INT' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
--------VarDecls-> CARD Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT' } U FIRST['CARD'] { 'CARD' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
--------VarDecls-> BOOL Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
------- SysDecls --------
################> Rule 1 <#################
--------SysDecls-> SysDecl SysDecls_1--------
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
******* DEFINE ******
^^^^^^^ DEFINE ^^^^^^^
******* TYPE ******
^^^^^^^ TYPE ^^^^^^^
******* RECORDTYPE ******
^^^^^^^ RECORDTYPE ^^^^^^^
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
******* INT ******
^^^^^^^ INT ^^^^^^^
******* CARD ******
^^^^^^^ CARD ^^^^^^^
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['SysDecls'] { 'FUNC','PROC' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------SysDecls-> SysDecl SysDecls_1--------
Is 'ϵ' Not Contained in 'FIRST['SysDecl']'
			Compare 'ϵ' To 'DEFINE'
			Compare 'ϵ' To 'TYPE'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set FIRST['SysDecl']
TRUE
End of Y1Y2...Yk Chain
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'FUNC'
 'PROC'
Is $ in Set FOLLOW['SysDecls']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
 'ϵ'
------- SysDecls_1 --------
################> Rule 1 <#################
--------SysDecls_1-> ; SysDecl SysDecls_1--------
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['TempFirstY'] { } U FIRST[';'] { ';' } => FIRST['TempFirstY'] { ';' }
******* ; ******
^^^^^^^ ; ^^^^^^^
--------SysDecls_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['SysDecls_1'] { 'FUNC','PROC' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------SysDecls_1-> ; SysDecl SysDecls_1--------
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['TempFirstY'] { } U FIRST[';'] { ';' } => FIRST['TempFirstY'] { ';' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ';' }
 ';'
--------SysDecls_1-> ϵ--------
FIRST['TempFirstY'] { ';' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ';','ϵ' }
FIRST['TempFirstY'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ';','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'FUNC'
 'PROC'
Is $ in Set FOLLOW['SysDecls_1']
FALSE
  FIRST['TempFirstY'] { ';','ϵ' }
 ';'
 'ϵ'
------- SysDecl --------
################> Rule 1 <#################
--------SysDecl-> DEFINE DefList--------
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['TempFirstY'] { } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['TempFirstY'] { 'DEFINE' }
******* DEFINE ******
^^^^^^^ DEFINE ^^^^^^^
--------SysDecl-> TYPE RecIdent--------
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['TempFirstY'] { } U FIRST['TYPE'] { 'TYPE' } => FIRST['TempFirstY'] { 'TYPE' }
******* TYPE ******
^^^^^^^ TYPE ^^^^^^^
--------SysDecl-> RECORDTYPE Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['TempFirstY'] { } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['TempFirstY'] { 'RECORDTYPE' }
******* RECORDTYPE ******
^^^^^^^ RECORDTYPE ^^^^^^^
--------SysDecl-> CHAR Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['TempFirstY'] { } U FIRST['CHAR'] { 'CHAR' } => FIRST['TempFirstY'] { 'CHAR' }
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
--------SysDecl-> BYTE Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['TempFirstY'] { } U FIRST['BYTE'] { 'BYTE' } => FIRST['TempFirstY'] { 'BYTE' }
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
--------SysDecl-> INT Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['TempFirstY'] { } U FIRST['INT'] { 'INT' } => FIRST['TempFirstY'] { 'INT' }
******* INT ******
^^^^^^^ INT ^^^^^^^
--------SysDecl-> CARD Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['TempFirstY'] { } U FIRST['CARD'] { 'CARD' } => FIRST['TempFirstY'] { 'CARD' }
******* CARD ******
^^^^^^^ CARD ^^^^^^^
--------SysDecl-> BOOL VarList--------
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['BOOL'] { 'BOOL' } => FIRST['TempFirstY'] { 'BOOL' }
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
--------SysDecl-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['SysDecl'] { ';','FUNC','PROC' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------SysDecl-> DEFINE DefList--------
Is 'ϵ' Not Contained in 'FIRST['DEFINE']'
			Compare 'ϵ' To 'DEFINE'
TRUE
FIRST['TempFirstY'] { } U FIRST['DEFINE'] { 'DEFINE' } => FIRST['TempFirstY'] { 'DEFINE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE' }
 'DEFINE'
--------SysDecl-> TYPE RecIdent--------
Is 'ϵ' Not Contained in 'FIRST['TYPE']'
			Compare 'ϵ' To 'TYPE'
TRUE
FIRST['TempFirstY'] { 'DEFINE' } U FIRST['TYPE'] { 'TYPE' } => FIRST['TempFirstY'] { 'DEFINE','TYPE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE' }
 'DEFINE'
 'TYPE'
--------SysDecl-> RECORDTYPE Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['RECORDTYPE']'
			Compare 'ϵ' To 'RECORDTYPE'
TRUE
FIRST['TempFirstY'] { 'DEFINE','TYPE' } U FIRST['RECORDTYPE'] { 'RECORDTYPE' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
--------SysDecl-> CHAR Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['CHAR']'
			Compare 'ϵ' To 'CHAR'
TRUE
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE' } U FIRST['CHAR'] { 'CHAR' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
--------SysDecl-> BYTE Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['BYTE']'
			Compare 'ϵ' To 'BYTE'
TRUE
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR' } U FIRST['BYTE'] { 'BYTE' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
--------SysDecl-> INT Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['INT']'
			Compare 'ϵ' To 'INT'
TRUE
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE' } U FIRST['INT'] { 'INT' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
--------SysDecl-> CARD Modifier VarList--------
Is 'ϵ' Not Contained in 'FIRST['CARD']'
			Compare 'ϵ' To 'CARD'
TRUE
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT' } U FIRST['CARD'] { 'CARD' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
--------SysDecl-> BOOL VarList--------
Is 'ϵ' Not Contained in 'FIRST['BOOL']'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD' } U FIRST['BOOL'] { 'BOOL' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
--------SysDecl-> ϵ--------
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ';'
 'FUNC'
 'PROC'
Is $ in Set FOLLOW['SysDecl']
FALSE
  FIRST['TempFirstY'] { 'DEFINE','TYPE','RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL','ϵ' }
 'DEFINE'
 'TYPE'
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
 'ϵ'
------- VarList --------
################> Rule 1 <#################
--------VarList-> VarName VarList_1--------
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['VarName'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['VarList'] { ';','FUNC','PROC',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------VarList-> VarName VarList_1--------
Is 'ϵ' Not Contained in 'FIRST['VarName']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['VarName'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'IDENT' }
 'IDENT'
------- VarList_1 --------
################> Rule 1 <#################
--------VarList_1-> , VarName VarList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
--------VarList_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['VarList_1'] { ';','FUNC','PROC',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------VarList_1-> , VarName VarList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ',' }
 ','
--------VarList_1-> ϵ--------
FIRST['TempFirstY'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
FIRST['TempFirstY'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ';'
 'FUNC'
 'PROC'
 ']'
Is $ in Set FOLLOW['VarList_1']
FALSE
  FIRST['TempFirstY'] { ',','ϵ' }
 ','
 'ϵ'
------- VarName --------
################> Rule 1 <#################
--------VarName-> Ident OptInit--------
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['VarName'] { ',',';','FUNC','PROC',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------VarName-> Ident OptInit--------
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'IDENT' }
 'IDENT'
------- OptInit --------
################> Rule 1 <#################
--------OptInit-> = CompConst--------
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['='] { '=' } => FIRST['TempFirstY'] { '=' }
******* = ******
^^^^^^^ = ^^^^^^^
--------OptInit-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['OptInit'] { ',',';','FUNC','PROC',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------OptInit-> = CompConst--------
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['='] { '=' } => FIRST['TempFirstY'] { '=' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '=' }
 '='
--------OptInit-> ϵ--------
FIRST['TempFirstY'] { '=' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '=','ϵ' }
FIRST['TempFirstY'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '=','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ','
 ';'
 'FUNC'
 'PROC'
 ']'
Is $ in Set FOLLOW['OptInit']
FALSE
  FIRST['TempFirstY'] { '=','ϵ' }
 '='
 'ϵ'
------- DefList --------
################> Rule 1 <#################
--------DefList-> Def DefList_1--------
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Def'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['DefList'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------DefList-> Def DefList_1--------
Is 'ϵ' Not Contained in 'FIRST['Def']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Def'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'IDENT' }
 'IDENT'
------- DefList_1 --------
################> Rule 1 <#################
--------DefList_1-> , Def DefList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
--------DefList_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['DefList_1'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------DefList_1-> , Def DefList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ',' }
 ','
--------DefList_1-> ϵ--------
FIRST['TempFirstY'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
FIRST['TempFirstY'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
Is $ in Set FOLLOW['DefList_1']
FALSE
  FIRST['TempFirstY'] { ',','ϵ' }
 ','
 'ϵ'
------- Def --------
################> Rule 1 <#################
--------Def-> Ident = CompConst--------
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['Def'] { ',' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Def-> Ident = CompConst--------
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'IDENT' }
 'IDENT'
------- RecIdent --------
################> Rule 1 <#################
--------RecIdent-> RecField--------
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['RecField'] { '=' } => FIRST['TempFirstY'] { '=' }
******* = ******
^^^^^^^ = ^^^^^^^
FOLLOW['RecIdent'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------RecIdent-> RecField--------
Is 'ϵ' Not Contained in 'FIRST['RecField']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['RecField'] { '=' } => FIRST['TempFirstY'] { '=' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '=' }
 '='
------- RecField --------
################> Rule 1 <#################
--------RecField-> = [ RecFieldList ]--------
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['='] { '=' } => FIRST['TempFirstY'] { '=' }
******* = ******
^^^^^^^ = ^^^^^^^
FOLLOW['RecField'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------RecField-> = [ RecFieldList ]--------
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['='] { '=' } => FIRST['TempFirstY'] { '=' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '=' }
 '='
------- RecFieldList --------
################> Rule 1 <#################
--------RecFieldList-> VarDecls RecFieldList_1--------
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
******* RECORDTYPE ******
^^^^^^^ RECORDTYPE ^^^^^^^
******* CHAR ******
^^^^^^^ CHAR ^^^^^^^
******* BYTE ******
^^^^^^^ BYTE ^^^^^^^
******* INT ******
^^^^^^^ INT ^^^^^^^
******* CARD ******
^^^^^^^ CARD ^^^^^^^
******* BOOL ******
^^^^^^^ BOOL ^^^^^^^
FOLLOW['RecFieldList'] { ']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------RecFieldList-> VarDecls RecFieldList_1--------
Is 'ϵ' Not Contained in 'FIRST['VarDecls']'
			Compare 'ϵ' To 'RECORDTYPE'
			Compare 'ϵ' To 'CHAR'
			Compare 'ϵ' To 'BYTE'
			Compare 'ϵ' To 'INT'
			Compare 'ϵ' To 'CARD'
			Compare 'ϵ' To 'BOOL'
TRUE
FIRST['TempFirstY'] { } U FIRST['VarDecls'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' } => FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'RECORDTYPE','CHAR','BYTE','INT','CARD','BOOL' }
 'RECORDTYPE'
 'CHAR'
 'BYTE'
 'INT'
 'CARD'
 'BOOL'
------- RecFieldList_1 --------
################> Rule 1 <#################
--------RecFieldList_1-> ; VarDecls RecFieldList_1--------
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['TempFirstY'] { } U FIRST[';'] { ';' } => FIRST['TempFirstY'] { ';' }
******* ; ******
^^^^^^^ ; ^^^^^^^
--------RecFieldList_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['RecFieldList_1'] { ']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------RecFieldList_1-> ; VarDecls RecFieldList_1--------
Is 'ϵ' Not Contained in 'FIRST[';']'
			Compare 'ϵ' To ';'
TRUE
FIRST['TempFirstY'] { } U FIRST[';'] { ';' } => FIRST['TempFirstY'] { ';' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ';' }
 ';'
--------RecFieldList_1-> ϵ--------
FIRST['TempFirstY'] { ';' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ';','ϵ' }
FIRST['TempFirstY'] { ';','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ';','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ']'
Is $ in Set FOLLOW['RecFieldList_1']
FALSE
  FIRST['TempFirstY'] { ';','ϵ' }
 ';'
 'ϵ'
------- Modifier --------
################> Rule 1 <#################
--------Modifier-> POINTER--------
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['TempFirstY'] { } U FIRST['POINTER'] { 'POINTER' } => FIRST['TempFirstY'] { 'POINTER' }
******* POINTER ******
^^^^^^^ POINTER ^^^^^^^
--------Modifier-> ARRAY ArrayStuff--------
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['TempFirstY'] { } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['TempFirstY'] { 'ARRAY' }
******* ARRAY ******
^^^^^^^ ARRAY ^^^^^^^
--------Modifier-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['Modifier'] { 'IDENT' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Modifier-> POINTER--------
Is 'ϵ' Not Contained in 'FIRST['POINTER']'
			Compare 'ϵ' To 'POINTER'
TRUE
FIRST['TempFirstY'] { } U FIRST['POINTER'] { 'POINTER' } => FIRST['TempFirstY'] { 'POINTER' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'POINTER' }
 'POINTER'
--------Modifier-> ARRAY ArrayStuff--------
Is 'ϵ' Not Contained in 'FIRST['ARRAY']'
			Compare 'ϵ' To 'ARRAY'
TRUE
FIRST['TempFirstY'] { 'POINTER' } U FIRST['ARRAY'] { 'ARRAY' } => FIRST['TempFirstY'] { 'POINTER','ARRAY' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'POINTER','ARRAY' }
 'POINTER'
 'ARRAY'
--------Modifier-> ϵ--------
FIRST['TempFirstY'] { 'POINTER','ARRAY' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'POINTER','ARRAY','ϵ' }
FIRST['TempFirstY'] { 'POINTER','ARRAY','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'POINTER','ARRAY','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 'IDENT'
Is $ in Set FOLLOW['Modifier']
FALSE
  FIRST['TempFirstY'] { 'POINTER','ARRAY','ϵ' }
 'POINTER'
 'ARRAY'
 'ϵ'
------- ArrayStuff --------
################> Rule 1 <#################
--------ArrayStuff-> ( CompConst ) OptArrayInit--------
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['TempFirstY'] { } U FIRST['('] { '(' } => FIRST['TempFirstY'] { '(' }
******* ( ******
^^^^^^^ ( ^^^^^^^
--------ArrayStuff-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['ArrayStuff'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------ArrayStuff-> ( CompConst ) OptArrayInit--------
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['TempFirstY'] { } U FIRST['('] { '(' } => FIRST['TempFirstY'] { '(' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '(' }
 '('
--------ArrayStuff-> ϵ--------
FIRST['TempFirstY'] { '(' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '(','ϵ' }
FIRST['TempFirstY'] { '(','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '(','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
Is $ in Set FOLLOW['ArrayStuff']
FALSE
  FIRST['TempFirstY'] { '(','ϵ' }
 '('
 'ϵ'
------- OptArrayInit --------
################> Rule 1 <#################
--------OptArrayInit-> = [ CompConstList ]--------
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['='] { '=' } => FIRST['TempFirstY'] { '=' }
******* = ******
^^^^^^^ = ^^^^^^^
--------OptArrayInit-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['OptArrayInit'] { }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------OptArrayInit-> = [ CompConstList ]--------
Is 'ϵ' Not Contained in 'FIRST['=']'
			Compare 'ϵ' To '='
TRUE
FIRST['TempFirstY'] { } U FIRST['='] { '=' } => FIRST['TempFirstY'] { '=' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '=' }
 '='
--------OptArrayInit-> ϵ--------
FIRST['TempFirstY'] { '=' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '=','ϵ' }
FIRST['TempFirstY'] { '=','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '=','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
Is $ in Set FOLLOW['OptArrayInit']
FALSE
  FIRST['TempFirstY'] { '=','ϵ' }
 '='
 'ϵ'
------- CompConstList --------
################> Rule 1 <#################
--------CompConstList-> CompConst CompConstList_1--------
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['TempFirstY'] { } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['TempFirstY'] { 'NUMBER','*','@' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
FOLLOW['CompConstList'] { ']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------CompConstList-> CompConst CompConstList_1--------
Is 'ϵ' Not Contained in 'FIRST['CompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['TempFirstY'] { } U FIRST['CompConst'] { 'NUMBER','*','@' } => FIRST['TempFirstY'] { 'NUMBER','*','@' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER','*','@' }
 'NUMBER'
 '*'
 '@'
------- CompConstList_1 --------
################> Rule 1 <#################
--------CompConstList_1-> , CompConst CompConstList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
--------CompConstList_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['CompConstList_1'] { ']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------CompConstList_1-> , CompConst CompConstList_1--------
Is 'ϵ' Not Contained in 'FIRST[',']'
			Compare 'ϵ' To ','
TRUE
FIRST['TempFirstY'] { } U FIRST[','] { ',' } => FIRST['TempFirstY'] { ',' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { ',' }
 ','
--------CompConstList_1-> ϵ--------
FIRST['TempFirstY'] { ',' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
FIRST['TempFirstY'] { ',','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { ',','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ']'
Is $ in Set FOLLOW['CompConstList_1']
FALSE
  FIRST['TempFirstY'] { ',','ϵ' }
 ','
 'ϵ'
------- CompConst --------
################> Rule 1 <#################
--------CompConst-> BaseCompConst CompConst_1--------
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['TempFirstY'] { } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['TempFirstY'] { 'NUMBER','*','@' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
******* @ ******
^^^^^^^ @ ^^^^^^^
FOLLOW['CompConst'] { ',',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------CompConst-> BaseCompConst CompConst_1--------
Is 'ϵ' Not Contained in 'FIRST['BaseCompConst']'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
			Compare 'ϵ' To '@'
TRUE
FIRST['TempFirstY'] { } U FIRST['BaseCompConst'] { 'NUMBER','*','@' } => FIRST['TempFirstY'] { 'NUMBER','*','@' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER','*','@' }
 'NUMBER'
 '*'
 '@'
------- CompConst_1 --------
################> Rule 1 <#################
--------CompConst_1-> + BaseCompConst CompConst_1--------
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['TempFirstY'] { } U FIRST['+'] { '+' } => FIRST['TempFirstY'] { '+' }
******* + ******
^^^^^^^ + ^^^^^^^
--------CompConst_1-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['CompConst_1'] { ',',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------CompConst_1-> + BaseCompConst CompConst_1--------
Is 'ϵ' Not Contained in 'FIRST['+']'
			Compare 'ϵ' To '+'
TRUE
FIRST['TempFirstY'] { } U FIRST['+'] { '+' } => FIRST['TempFirstY'] { '+' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '+' }
 '+'
--------CompConst_1-> ϵ--------
FIRST['TempFirstY'] { '+' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '+','ϵ' }
FIRST['TempFirstY'] { '+','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '+','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 ','
 ']'
Is $ in Set FOLLOW['CompConst_1']
FALSE
  FIRST['TempFirstY'] { '+','ϵ' }
 '+'
 'ϵ'
------- BaseCompConst --------
################> Rule 1 <#################
--------BaseCompConst-> NUMBER--------
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['TempFirstY'] { } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['TempFirstY'] { 'NUMBER' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
--------BaseCompConst-> *--------
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['TempFirstY'] { } U FIRST['*'] { '*' } => FIRST['TempFirstY'] { '*' }
******* * ******
^^^^^^^ * ^^^^^^^
--------BaseCompConst-> @ MemContents--------
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['TempFirstY'] { } U FIRST['@'] { '@' } => FIRST['TempFirstY'] { '@' }
******* @ ******
^^^^^^^ @ ^^^^^^^
FOLLOW['BaseCompConst'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------BaseCompConst-> NUMBER--------
Is 'ϵ' Not Contained in 'FIRST['NUMBER']'
			Compare 'ϵ' To 'NUMBER'
TRUE
FIRST['TempFirstY'] { } U FIRST['NUMBER'] { 'NUMBER' } => FIRST['TempFirstY'] { 'NUMBER' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER' }
 'NUMBER'
--------BaseCompConst-> *--------
Is 'ϵ' Not Contained in 'FIRST['*']'
			Compare 'ϵ' To '*'
TRUE
FIRST['TempFirstY'] { 'NUMBER' } U FIRST['*'] { '*' } => FIRST['TempFirstY'] { 'NUMBER','*' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER','*' }
 'NUMBER'
 '*'
--------BaseCompConst-> @ MemContents--------
Is 'ϵ' Not Contained in 'FIRST['@']'
			Compare 'ϵ' To '@'
TRUE
FIRST['TempFirstY'] { 'NUMBER','*' } U FIRST['@'] { '@' } => FIRST['TempFirstY'] { 'NUMBER','*','@' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'NUMBER','*','@' }
 'NUMBER'
 '*'
 '@'
------- Ident --------
################> Rule 1 <#################
--------Ident-> IDENT--------
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['IDENT'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['Ident'] { '=',',','(','^','.',')',';','FUNC','PROC','*','/','MOD','LSH','RSH','+','-','!','&','%','#','>','<','GTEQ','LTEQ','AND','OR','THEN',']' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------Ident-> IDENT--------
Is 'ϵ' Not Contained in 'FIRST['IDENT']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['IDENT'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'IDENT' }
 'IDENT'
------- MemContents --------
################> Rule 1 <#################
--------MemContents-> Ident MemContentsType--------
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
******* IDENT ******
^^^^^^^ IDENT ^^^^^^^
FOLLOW['MemContents'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------MemContents-> Ident MemContentsType--------
Is 'ϵ' Not Contained in 'FIRST['Ident']'
			Compare 'ϵ' To 'IDENT'
TRUE
FIRST['TempFirstY'] { } U FIRST['Ident'] { 'IDENT' } => FIRST['TempFirstY'] { 'IDENT' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { 'IDENT' }
 'IDENT'
------- MemContentsType --------
################> Rule 1 <#################
--------MemContentsType-> ( ArithExpr )--------
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['TempFirstY'] { } U FIRST['('] { '(' } => FIRST['TempFirstY'] { '(' }
******* ( ******
^^^^^^^ ( ^^^^^^^
--------MemContentsType-> ^--------
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['TempFirstY'] { } U FIRST['^'] { '^' } => FIRST['TempFirstY'] { '^' }
******* ^ ******
^^^^^^^ ^ ^^^^^^^
--------MemContentsType-> . Ident--------
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['TempFirstY'] { } U FIRST['.'] { '.' } => FIRST['TempFirstY'] { '.' }
******* . ******
^^^^^^^ . ^^^^^^^
--------MemContentsType-> ϵ--------
FIRST['TempFirstY'] { } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
FIRST['TempFirstY'] { 'ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
FOLLOW['MemContentsType'] { '*','/','MOD','LSH','RSH','+','-','!','&','%','=','#','>','<','GTEQ','LTEQ','AND','OR','THEN',')',',' }
TERMINALS['Terminals'] { 'IDENT','GLOBALS','ROUTINES','MODULE','RETURN','PROC','FUNC','FUNC_IDENT','PROC_IDENT','IF','FOR','WHILE','DO','OD','EXIT','THEN','FI','ELSEIF','ELSE','UNTILL','TO','STEP','ASM','ENDASM','OR','AND','GTEQ','LTEQ','NUMBER','DEFINE','TYPE','RECORDTYPE','BOOL','CHAR','BYTE','CARD','INT','POINTER','ARRAY','BEGIN','END','@','<*','.','^','!','&','%','#','>','<','=',':=','==+','==-','==*','==/','==MOD','==&','==!','==XOR','==%','==LSH','==RSH','[',']',',',';','+','-','*','/','MOD','LSH','RSH','(',')','$' }
############< Rule 2 >############
--------MemContentsType-> ( ArithExpr )--------
Is 'ϵ' Not Contained in 'FIRST['(']'
			Compare 'ϵ' To '('
TRUE
FIRST['TempFirstY'] { } U FIRST['('] { '(' } => FIRST['TempFirstY'] { '(' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '(' }
 '('
--------MemContentsType-> ^--------
Is 'ϵ' Not Contained in 'FIRST['^']'
			Compare 'ϵ' To '^'
TRUE
FIRST['TempFirstY'] { '(' } U FIRST['^'] { '^' } => FIRST['TempFirstY'] { '(','^' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '(','^' }
 '('
 '^'
--------MemContentsType-> . Ident--------
Is 'ϵ' Not Contained in 'FIRST['.']'
			Compare 'ϵ' To '.'
TRUE
FIRST['TempFirstY'] { '(','^' } U FIRST['.'] { '.' } => FIRST['TempFirstY'] { '(','^','.' }
Is ϵ in Set FIRST['TempFirstY']
FALSE
  FIRST['TempFirstY'] { '(','^','.' }
 '('
 '^'
 '.'
--------MemContentsType-> ϵ--------
FIRST['TempFirstY'] { '(','^','.' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '(','^','.','ϵ' }
FIRST['TempFirstY'] { '(','^','.','ϵ' } U FIRST['ϵ'] { 'ϵ' } => FIRST['TempFirstY'] { '(','^','.','ϵ' }
Is ϵ in Set FIRST['TempFirstY']
TRUE
 '*'
 '/'
 'MOD'
 'LSH'
 'RSH'
 '+'
 '-'
 '!'
 '&'
 '%'
 '='
 '#'
 '>'
 '<'
 'GTEQ'
 'LTEQ'
 'AND'
 'OR'
 'THEN'
 ')'
 ','
Is $ in Set FOLLOW['MemContentsType']
FALSE
  FIRST['TempFirstY'] { '(','^','.','ϵ' }
 '('
 '^'
 '.'
 'ϵ'
xxxxxxxxxxxx Parse Table xxxxxxxxxxxxxxxxx
('Action65','IDENT')
     1.  MemContents-> Ident MemContentsType
     2.  MemContentsType-> ϵ
('Action65','MODULE')
     1.  Action65-> Modules
('Action65','THEN')
     1.  MemContentsType-> ϵ
('Action65','OR')
     1.  MemContentsType-> ϵ
('Action65','AND')
     1.  MemContentsType-> ϵ
('Action65','GTEQ')
     1.  MemContentsType-> ϵ
('Action65','LTEQ')
     1.  MemContentsType-> ϵ
('Action65','.')
     1.  MemContentsType-> . Ident
('Action65','^')
     1.  MemContentsType-> ^
('Action65','!')
     1.  MemContentsType-> ϵ
('Action65','&')
     1.  MemContentsType-> ϵ
('Action65','%')
     1.  MemContentsType-> ϵ
('Action65','#')
     1.  MemContentsType-> ϵ
('Action65','>')
     1.  MemContentsType-> ϵ
('Action65','<')
     1.  MemContentsType-> ϵ
('Action65','=')
     1.  MemContentsType-> ϵ
('Action65',',')
     1.  MemContentsType-> ϵ
('Action65','+')
     1.  MemContentsType-> ϵ
('Action65','-')
     1.  MemContentsType-> ϵ
('Action65','*')
     1.  MemContentsType-> ϵ
('Action65','/')
     1.  MemContentsType-> ϵ
('Action65','MOD')
     1.  MemContentsType-> ϵ
('Action65','LSH')
     1.  MemContentsType-> ϵ
('Action65','RSH')
     1.  MemContentsType-> ϵ
('Action65','(')
     1.  MemContentsType-> ( ArithExpr )
('Action65',')')
     1.  MemContentsType-> ϵ
('Modules','MODULE')
     1.  Modules-> MODULE Modules_1
('Modules_1','IDENT')
     1.  Modules_1-> ϵ
('Modules_1','MODULE')
     1.  Modules_1-> MODULE Module Modules_1
('Module','PROC')
     1.  Module-> Routines
('Module','FUNC')
     1.  Module-> Routines
('Module','DEFINE')
     1.  Module-> SysDecls Routines
('Module','TYPE')
     1.  Module-> SysDecls Routines
('Module','RECORDTYPE')
     1.  Module-> SysDecls Routines
('Module','BOOL')
     1.  Module-> SysDecls Routines
('Module','CHAR')
     1.  Module-> SysDecls Routines
('Module','BYTE')
     1.  Module-> SysDecls Routines
('Module','CARD')
     1.  Module-> SysDecls Routines
('Module','INT')
     1.  Module-> SysDecls Routines
('Routines','PROC')
     1.  Routines-> Routine Routines_1
('Routines','FUNC')
     1.  Routines-> Routine Routines_1
('Routines_1','IDENT')
     1.  Routines_1-> ϵ
('Routines_1','MODULE')
     1.  Routines_1-> ϵ
('Routines_1','END')
     1.  Routines_1-> END Routine Routines_1
('Routine','PROC')
     1.  Routine-> PROC ProcDecl BEGIN ProcBody
('Routine','FUNC')
     1.  Routine-> FUNC FundType FuncDecl BEGIN ProcBody
('ProcBody','DEFINE')
     1.  ProcBody-> SysDecls ProcBody_1
('ProcBody','TYPE')
     1.  ProcBody-> SysDecls ProcBody_1
('ProcBody','RECORDTYPE')
     1.  ProcBody-> SysDecls ProcBody_1
('ProcBody','BOOL')
     1.  ProcBody-> SysDecls ProcBody_1
('ProcBody','CHAR')
     1.  ProcBody-> SysDecls ProcBody_1
('ProcBody','BYTE')
     1.  ProcBody-> SysDecls ProcBody_1
('ProcBody','CARD')
     1.  ProcBody-> SysDecls ProcBody_1
('ProcBody','INT')
     1.  ProcBody-> SysDecls ProcBody_1
('ProcDecl','PROC_IDENT')
     1.  ProcDecl-> ProcIdent OptInit ( ParamList )
('FuncDecl','FUNC_IDENT')
     1.  FuncDecl-> FuncIdent OptInit ( ParamList )
('FuncIdent','FUNC_IDENT')
     1.  FuncIdent-> FUNC_IDENT
('ProcIdent','PROC_IDENT')
     1.  ProcIdent-> PROC_IDENT
('Statements_1','IDENT')
     1.  Statements_1-> ϵ
('Statements_1','OD')
     1.  Statements_1-> OD Statement Statements_1
('Statements_1','FI')
     1.  Statements_1-> FI Statement Statements_1
('Statements_1','ELSEIF')
     1.  Statements_1-> ϵ
('Statements_1','ELSE')
     1.  Statements_1-> ϵ
('Statements_1',']')
     1.  Statements_1-> ] Statement Statements_1
('Statements_1',';')
     1.  Statements_1-> ; Statement Statements_1
('Statements_1',')')
     1.  Statements_1-> ) Statement Statements_1
('Statement','IDENT')
     1.  Statement-> StructStmts
('Statement','OD')
     1.  Statement-> StructStmts
('Statement','FI')
     1.  Statement-> StructStmts
('Statement','ELSEIF')
     1.  Statement-> StructStmts
('Statement','ELSE')
     1.  Statement-> StructStmts
('Statement',']')
     1.  Statement-> StructStmts
('Statement',';')
     1.  Statement-> StructStmts
('Statement',')')
     1.  Statement-> StructStmts
('StructStmts','IDENT')
     1.  StructStmts-> ϵ
('StructStmts','PROC_IDENT')
     1.  StructStmts-> PROC_IDENT ( IdentList
('StructStmts','IF')
     1.  StructStmts-> IF IfStmt
('StructStmts','WHILE')
     1.  StructStmts-> WHILE WhileLoop
('StructStmts','DO')
     1.  StructStmts-> DO DoLoop
('StructStmts','OD')
     1.  StructStmts-> ϵ
('StructStmts','FI')
     1.  StructStmts-> ϵ
('StructStmts','ELSEIF')
     1.  StructStmts-> ϵ
('StructStmts','ELSE')
     1.  StructStmts-> ϵ
('StructStmts',']')
     1.  StructStmts-> ϵ
('StructStmts',';')
     1.  StructStmts-> ϵ
('StructStmts',')')
     1.  StructStmts-> ϵ
('WhileLoop','IDENT')
     1.  WhileLoop-> ArithExpr DO Statements
('WhileLoop','FUNC_IDENT')
     1.  WhileLoop-> ArithExpr DO Statements
('WhileLoop','NUMBER')
     1.  WhileLoop-> ArithExpr DO Statements
('WhileLoop','@')
     1.  WhileLoop-> ArithExpr DO Statements
('WhileLoop','-')
     1.  WhileLoop-> ArithExpr DO Statements
('WhileLoop','*')
     1.  WhileLoop-> ArithExpr DO Statements
('WhileLoop','(')
     1.  WhileLoop-> ArithExpr DO Statements
('UNTILLstmt','UNTILL')
     1.  UNTILLstmt-> UNTILL ArithExpr
('IfStmt','IDENT')
     1.  IfStmt-> ArithExpr ThenPart
('IfStmt','FUNC_IDENT')
     1.  IfStmt-> ArithExpr ThenPart
('IfStmt','NUMBER')
     1.  IfStmt-> ArithExpr ThenPart
('IfStmt','@')
     1.  IfStmt-> ArithExpr ThenPart
('IfStmt','-')
     1.  IfStmt-> ArithExpr ThenPart
('IfStmt','*')
     1.  IfStmt-> ArithExpr ThenPart
('IfStmt','(')
     1.  IfStmt-> ArithExpr ThenPart
('ThenPart','THEN')
     1.  ThenPart-> THEN ThenPart_1
('ElseIfPart','IDENT')
     1.  ElseIfPart-> ϵ
('ElseIfPart','ELSEIF')
     1.  ElseIfPart-> ELSEIF ArithExpr ThenPart
('ElseIfPart','ELSE')
     1.  ElseIfPart-> ELSE Statements
('ArithExpr','IDENT')
     1.  ArithExpr-> LogicalAND LogicalOR_1
('ArithExpr','FUNC_IDENT')
     1.  ArithExpr-> LogicalAND LogicalOR_1
('ArithExpr','NUMBER')
     1.  ArithExpr-> LogicalAND LogicalOR_1
('ArithExpr','@')
     1.  ArithExpr-> LogicalAND LogicalOR_1
('ArithExpr','-')
     1.  ArithExpr-> LogicalAND LogicalOR_1
('ArithExpr','*')
     1.  ArithExpr-> LogicalAND LogicalOR_1
('ArithExpr','(')
     1.  ArithExpr-> LogicalAND LogicalOR_1
('LogicalOR_1','IDENT')
     1.  LogicalOR_1-> ϵ
('LogicalOR_1','THEN')
     1.  LogicalOR_1-> ϵ
('LogicalOR_1','OR')
     1.  LogicalOR_1-> OR LogicalAND LogicalOR_1
('LogicalOR_1',')')
     1.  LogicalOR_1-> ϵ
('LogicalAND','IDENT')
     1.  LogicalAND-> RelOperation LogicalAND_1
('LogicalAND','FUNC_IDENT')
     1.  LogicalAND-> RelOperation LogicalAND_1
('LogicalAND','NUMBER')
     1.  LogicalAND-> RelOperation LogicalAND_1
('LogicalAND','@')
     1.  LogicalAND-> RelOperation LogicalAND_1
('LogicalAND','-')
     1.  LogicalAND-> RelOperation LogicalAND_1
('LogicalAND','*')
     1.  LogicalAND-> RelOperation LogicalAND_1
('LogicalAND','(')
     1.  LogicalAND-> RelOperation LogicalAND_1
('LogicalAND_1','IDENT')
     1.  LogicalAND_1-> ϵ
('LogicalAND_1','THEN')
     1.  LogicalAND_1-> ϵ
('LogicalAND_1','OR')
     1.  LogicalAND_1-> ϵ
('LogicalAND_1','AND')
     1.  LogicalAND_1-> AND RelOperation LogicalAND_1
('LogicalAND_1',')')
     1.  LogicalAND_1-> ϵ
('RelOperation','IDENT')
     1.  RelOperation-> RelEquals RelOperation_1
('RelOperation','FUNC_IDENT')
     1.  RelOperation-> RelEquals RelOperation_1
('RelOperation','NUMBER')
     1.  RelOperation-> RelEquals RelOperation_1
('RelOperation','@')
     1.  RelOperation-> RelEquals RelOperation_1
('RelOperation','-')
     1.  RelOperation-> RelEquals RelOperation_1
('RelOperation','*')
     1.  RelOperation-> RelEquals RelOperation_1
('RelOperation','(')
     1.  RelOperation-> RelEquals RelOperation_1
('RelOperation_1','IDENT')
     1.  RelOperation_1-> ϵ
('RelOperation_1','THEN')
     1.  RelOperation_1-> ϵ
('RelOperation_1','OR')
     1.  RelOperation_1-> ϵ
('RelOperation_1','AND')
     1.  RelOperation_1-> ϵ
('RelOperation_1','GTEQ')
     1.  RelOperation_1-> GTEQ RelEquals RelOperation_1
('RelOperation_1','LTEQ')
     1.  RelOperation_1-> LTEQ RelEquals RelOperation_1
('RelOperation_1','>')
     1.  RelOperation_1-> > RelEquals RelOperation_1
('RelOperation_1','<')
     1.  RelOperation_1-> < RelEquals RelOperation_1
('RelOperation_1',')')
     1.  RelOperation_1-> ϵ
('RelEquals','IDENT')
     1.  RelEquals-> BitwiseOR RelEquals_1
('RelEquals','FUNC_IDENT')
     1.  RelEquals-> BitwiseOR RelEquals_1
('RelEquals','NUMBER')
     1.  RelEquals-> BitwiseOR RelEquals_1
('RelEquals','@')
     1.  RelEquals-> BitwiseOR RelEquals_1
('RelEquals','-')
     1.  RelEquals-> BitwiseOR RelEquals_1
('RelEquals','*')
     1.  RelEquals-> BitwiseOR RelEquals_1
('RelEquals','(')
     1.  RelEquals-> BitwiseOR RelEquals_1
('RelEquals_1','IDENT')
     1.  RelEquals_1-> ϵ
('RelEquals_1','THEN')
     1.  RelEquals_1-> ϵ
('RelEquals_1','OR')
     1.  RelEquals_1-> ϵ
('RelEquals_1','AND')
     1.  RelEquals_1-> ϵ
('RelEquals_1','GTEQ')
     1.  RelEquals_1-> ϵ
('RelEquals_1','LTEQ')
     1.  RelEquals_1-> ϵ
('RelEquals_1','#')
     1.  RelEquals_1-> # BitwiseOR RelEquals_1
('RelEquals_1','>')
     1.  RelEquals_1-> ϵ
('RelEquals_1','<')
     1.  RelEquals_1-> ϵ
('RelEquals_1','=')
     1.  RelEquals_1-> = BitwiseOR RelEquals_1
('RelEquals_1',')')
     1.  RelEquals_1-> ϵ
('BitwiseOR','IDENT')
     1.  BitwiseOR-> BitwiseAND BitwiseOR_1
('BitwiseOR','FUNC_IDENT')
     1.  BitwiseOR-> BitwiseAND BitwiseOR_1
('BitwiseOR','NUMBER')
     1.  BitwiseOR-> BitwiseAND BitwiseOR_1
('BitwiseOR','@')
     1.  BitwiseOR-> BitwiseAND BitwiseOR_1
('BitwiseOR','-')
     1.  BitwiseOR-> BitwiseAND BitwiseOR_1
('BitwiseOR','*')
     1.  BitwiseOR-> BitwiseAND BitwiseOR_1
('BitwiseOR','(')
     1.  BitwiseOR-> BitwiseAND BitwiseOR_1
('BitwiseOR_1','IDENT')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','THEN')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','OR')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','AND')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','GTEQ')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','LTEQ')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','%')
     1.  BitwiseOR_1-> % BitwiseAND BitwiseOR_1
('BitwiseOR_1','#')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','>')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','<')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1','=')
     1.  BitwiseOR_1-> ϵ
('BitwiseOR_1',')')
     1.  BitwiseOR_1-> ϵ
('BitwiseAND','IDENT')
     1.  BitwiseAND-> BitwiseXOR BitwiseAND_1
('BitwiseAND','FUNC_IDENT')
     1.  BitwiseAND-> BitwiseXOR BitwiseAND_1
('BitwiseAND','NUMBER')
     1.  BitwiseAND-> BitwiseXOR BitwiseAND_1
('BitwiseAND','@')
     1.  BitwiseAND-> BitwiseXOR BitwiseAND_1
('BitwiseAND','-')
     1.  BitwiseAND-> BitwiseXOR BitwiseAND_1
('BitwiseAND','*')
     1.  BitwiseAND-> BitwiseXOR BitwiseAND_1
('BitwiseAND','(')
     1.  BitwiseAND-> BitwiseXOR BitwiseAND_1
('BitwiseAND_1','IDENT')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','THEN')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','OR')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','AND')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','GTEQ')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','LTEQ')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','&')
     1.  BitwiseAND_1-> & BitwiseXOR BitwiseAND_1
('BitwiseAND_1','%')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','#')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','>')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','<')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1','=')
     1.  BitwiseAND_1-> ϵ
('BitwiseAND_1',')')
     1.  BitwiseAND_1-> ϵ
('BitwiseXOR','IDENT')
     1.  BitwiseXOR-> AddExpr SimpleRelExpr_1
('BitwiseXOR','FUNC_IDENT')
     1.  BitwiseXOR-> AddExpr SimpleRelExpr_1
('BitwiseXOR','NUMBER')
     1.  BitwiseXOR-> AddExpr SimpleRelExpr_1
('BitwiseXOR','@')
     1.  BitwiseXOR-> AddExpr SimpleRelExpr_1
('BitwiseXOR','-')
     1.  BitwiseXOR-> AddExpr SimpleRelExpr_1
('BitwiseXOR','*')
     1.  BitwiseXOR-> AddExpr SimpleRelExpr_1
('BitwiseXOR','(')
     1.  BitwiseXOR-> AddExpr SimpleRelExpr_1
('SimpleRelExpr_1','IDENT')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','THEN')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','OR')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','AND')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','GTEQ')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','LTEQ')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','!')
     1.  SimpleRelExpr_1-> ! AddExpr SimpleRelExpr_1
('SimpleRelExpr_1','&')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','%')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','#')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','>')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','<')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1','=')
     1.  SimpleRelExpr_1-> ϵ
('SimpleRelExpr_1',')')
     1.  SimpleRelExpr_1-> ϵ
('AddExpr','IDENT')
     1.  AddExpr-> ShifExpr AddExpr_1
('AddExpr','FUNC_IDENT')
     1.  AddExpr-> ShifExpr AddExpr_1
('AddExpr','NUMBER')
     1.  AddExpr-> ShifExpr AddExpr_1
('AddExpr','@')
     1.  AddExpr-> ShifExpr AddExpr_1
('AddExpr','-')
     1.  AddExpr-> ShifExpr AddExpr_1
('AddExpr','*')
     1.  AddExpr-> ShifExpr AddExpr_1
('AddExpr','(')
     1.  AddExpr-> ShifExpr AddExpr_1
('AddExpr_1','IDENT')
     1.  AddExpr_1-> ϵ
('AddExpr_1','THEN')
     1.  AddExpr_1-> ϵ
('AddExpr_1','OR')
     1.  AddExpr_1-> ϵ
('AddExpr_1','AND')
     1.  AddExpr_1-> ϵ
('AddExpr_1','GTEQ')
     1.  AddExpr_1-> ϵ
('AddExpr_1','LTEQ')
     1.  AddExpr_1-> ϵ
('AddExpr_1','!')
     1.  AddExpr_1-> ϵ
('AddExpr_1','&')
     1.  AddExpr_1-> ϵ
('AddExpr_1','%')
     1.  AddExpr_1-> ϵ
('AddExpr_1','#')
     1.  AddExpr_1-> ϵ
('AddExpr_1','>')
     1.  AddExpr_1-> ϵ
('AddExpr_1','<')
     1.  AddExpr_1-> ϵ
('AddExpr_1','=')
     1.  AddExpr_1-> ϵ
('AddExpr_1','+')
     1.  AddExpr_1-> + ShifExpr AddExpr_1
('AddExpr_1','-')
     1.  AddExpr_1-> - ShifExpr AddExpr_1
('AddExpr_1',')')
     1.  AddExpr_1-> ϵ
('ShifExpr','IDENT')
     1.  ShifExpr-> MultExpr ShiftExpr_1
('ShifExpr','FUNC_IDENT')
     1.  ShifExpr-> MultExpr ShiftExpr_1
('ShifExpr','NUMBER')
     1.  ShifExpr-> MultExpr ShiftExpr_1
('ShifExpr','@')
     1.  ShifExpr-> MultExpr ShiftExpr_1
('ShifExpr','-')
     1.  ShifExpr-> MultExpr ShiftExpr_1
('ShifExpr','*')
     1.  ShifExpr-> MultExpr ShiftExpr_1
('ShifExpr','(')
     1.  ShifExpr-> MultExpr ShiftExpr_1
('ShiftExpr_1','IDENT')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','THEN')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','OR')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','AND')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','GTEQ')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','LTEQ')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','!')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','&')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','%')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','#')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','>')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','<')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','=')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','+')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','-')
     1.  ShiftExpr_1-> ϵ
('ShiftExpr_1','LSH')
     1.  ShiftExpr_1-> LSH MultExpr ShiftExpr_1
('ShiftExpr_1','RSH')
     1.  ShiftExpr_1-> RSH MultExpr ShiftExpr_1
('ShiftExpr_1',')')
     1.  ShiftExpr_1-> ϵ
('MultExpr','IDENT')
     1.  MultExpr-> Unary MultExpr_1
('MultExpr','FUNC_IDENT')
     1.  MultExpr-> Unary MultExpr_1
('MultExpr','NUMBER')
     1.  MultExpr-> Unary MultExpr_1
('MultExpr','@')
     1.  MultExpr-> Unary MultExpr_1
('MultExpr','-')
     1.  MultExpr-> Unary MultExpr_1
('MultExpr','*')
     1.  MultExpr-> Unary MultExpr_1
('MultExpr','(')
     1.  MultExpr-> Unary MultExpr_1
('MultExpr_1','IDENT')
     1.  MultExpr_1-> ϵ
('MultExpr_1','THEN')
     1.  MultExpr_1-> ϵ
('MultExpr_1','OR')
     1.  MultExpr_1-> ϵ
('MultExpr_1','AND')
     1.  MultExpr_1-> ϵ
('MultExpr_1','GTEQ')
     1.  MultExpr_1-> ϵ
('MultExpr_1','LTEQ')
     1.  MultExpr_1-> ϵ
('MultExpr_1','!')
     1.  MultExpr_1-> ϵ
('MultExpr_1','&')
     1.  MultExpr_1-> ϵ
('MultExpr_1','%')
     1.  MultExpr_1-> ϵ
('MultExpr_1','#')
     1.  MultExpr_1-> ϵ
('MultExpr_1','>')
     1.  MultExpr_1-> ϵ
('MultExpr_1','<')
     1.  MultExpr_1-> ϵ
('MultExpr_1','=')
     1.  MultExpr_1-> ϵ
('MultExpr_1','+')
     1.  MultExpr_1-> ϵ
('MultExpr_1','-')
     1.  MultExpr_1-> ϵ
('MultExpr_1','*')
     1.  MultExpr_1-> * Unary MultExpr_1
('MultExpr_1','/')
     1.  MultExpr_1-> / Unary MultExpr_1
('MultExpr_1','MOD')
     1.  MultExpr_1-> MOD Unary MultExpr_1
('MultExpr_1','LSH')
     1.  MultExpr_1-> ϵ
('MultExpr_1','RSH')
     1.  MultExpr_1-> ϵ
('MultExpr_1',')')
     1.  MultExpr_1-> ϵ
('Unary','IDENT')
     1.  Unary-> Factor
('Unary','FUNC_IDENT')
     1.  Unary-> Factor
('Unary','NUMBER')
     1.  Unary-> Factor
('Unary','@')
     1.  Unary-> Factor
('Unary','-')
     1.  Unary-> - Unary
('Unary','*')
     1.  Unary-> Factor
('Unary','(')
     1.  Unary-> Factor
('Factor','IDENT')
     1.  Factor-> MemContents
('Factor','FUNC_IDENT')
     1.  Factor-> FUNCcall
('Factor','NUMBER')
     1.  Factor-> BaseCompConst
('Factor','@')
     1.  Factor-> BaseCompConst
('Factor','*')
     1.  Factor-> BaseCompConst
('Factor','(')
     1.  Factor-> ( ArithExpr )
('FUNCcall','FUNC_IDENT')
     1.  FUNCcall-> FuncIdent ( IdentList )
('IdentList','IDENT')
     1.  IdentList-> MemContents IdentList_1
('IdentList_1','IDENT')
     1.  IdentList_1-> ϵ
('IdentList_1',',')
     1.  IdentList_1-> , MemContents IdentList_1
('IdentList_1',')')
     1.  IdentList_1-> ϵ
('FundType','BOOL')
     1.  FundType-> BOOL
('FundType','CHAR')
     1.  FundType-> CHAR OptModifier
('FundType','BYTE')
     1.  FundType-> BYTE OptModifier
('FundType','CARD')
     1.  FundType-> CARD OptModifier
('FundType','INT')
     1.  FundType-> INT OptModifier
('OptModifier','IDENT')
     1.  OptModifier-> ϵ
('OptModifier','POINTER')
     1.  OptModifier-> POINTER
('ParamList','RECORDTYPE')
     1.  ParamList-> Param ParamList_1
('ParamList','BOOL')
     1.  ParamList-> Param ParamList_1
('ParamList','CHAR')
     1.  ParamList-> Param ParamList_1
('ParamList','BYTE')
     1.  ParamList-> Param ParamList_1
('ParamList','CARD')
     1.  ParamList-> Param ParamList_1
('ParamList','INT')
     1.  ParamList-> Param ParamList_1
('ParamList_1','IDENT')
     1.  ParamList_1-> ϵ
('ParamList_1',',')
     1.  ParamList_1-> , Param ParamList_1
('ParamList_1',')')
     1.  ParamList_1-> ϵ
('Param','RECORDTYPE')
     1.  Param-> RECORDTYPE OptModifier Ident
('Param','BOOL')
     1.  Param-> BOOL OptModifier Ident
('Param','CHAR')
     1.  Param-> CHAR OptModifier Ident
('Param','BYTE')
     1.  Param-> BYTE OptModifier Ident
('Param','CARD')
     1.  Param-> CARD OptModifier Ident
('Param','INT')
     1.  Param-> INT OptModifier Ident
('VarDecls','RECORDTYPE')
     1.  VarDecls-> RECORDTYPE Modifier VarList
('VarDecls','BOOL')
     1.  VarDecls-> BOOL Modifier VarList
('VarDecls','CHAR')
     1.  VarDecls-> CHAR Modifier VarList
('VarDecls','BYTE')
     1.  VarDecls-> BYTE Modifier VarList
('VarDecls','CARD')
     1.  VarDecls-> CARD Modifier VarList
('VarDecls','INT')
     1.  VarDecls-> INT Modifier VarList
('SysDecls','IDENT')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','PROC')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','FUNC')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','DEFINE')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','TYPE')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','RECORDTYPE')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','BOOL')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','CHAR')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','BYTE')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','CARD')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls','INT')
     1.  SysDecls-> SysDecl SysDecls_1
('SysDecls_1','IDENT')
     1.  SysDecls_1-> ϵ
('SysDecls_1','PROC')
     1.  SysDecls_1-> ϵ
('SysDecls_1','FUNC')
     1.  SysDecls_1-> ϵ
('SysDecls_1',';')
     1.  SysDecls_1-> ; SysDecl SysDecls_1
('SysDecl','IDENT')
     1.  SysDecl-> ϵ
('SysDecl','PROC')
     1.  SysDecl-> ϵ
('SysDecl','FUNC')
     1.  SysDecl-> ϵ
('SysDecl','DEFINE')
     1.  SysDecl-> DEFINE DefList
('SysDecl','TYPE')
     1.  SysDecl-> TYPE RecIdent
('SysDecl','RECORDTYPE')
     1.  SysDecl-> RECORDTYPE Modifier VarList
('SysDecl','BOOL')
     1.  SysDecl-> BOOL VarList
('SysDecl','CHAR')
     1.  SysDecl-> CHAR Modifier VarList
('SysDecl','BYTE')
     1.  SysDecl-> BYTE Modifier VarList
('SysDecl','CARD')
     1.  SysDecl-> CARD Modifier VarList
('SysDecl','INT')
     1.  SysDecl-> INT Modifier VarList
('SysDecl',';')
     1.  SysDecl-> ϵ
('VarList','IDENT')
     1.  VarList-> VarName VarList_1
('VarList_1','IDENT')
     1.  VarList_1-> ϵ
('VarList_1','PROC')
     1.  VarList_1-> ϵ
('VarList_1','FUNC')
     1.  VarList_1-> ϵ
('VarList_1',']')
     1.  VarList_1-> ϵ
('VarList_1',',')
     1.  VarList_1-> , VarName VarList_1
('VarList_1',';')
     1.  VarList_1-> ϵ
('VarName','IDENT')
     1.  VarName-> Ident OptInit
('OptInit','IDENT')
     1.  OptInit-> ϵ
('OptInit','PROC')
     1.  OptInit-> ϵ
('OptInit','FUNC')
     1.  OptInit-> ϵ
('OptInit','=')
     1.  OptInit-> = CompConst
('OptInit',']')
     1.  OptInit-> ϵ
('OptInit',',')
     1.  OptInit-> ϵ
('OptInit',';')
     1.  OptInit-> ϵ
('DefList','IDENT')
     1.  DefList-> Def DefList_1
('DefList_1','IDENT')
     1.  DefList_1-> ϵ
('DefList_1',',')
     1.  DefList_1-> , Def DefList_1
('Def','IDENT')
     1.  Def-> Ident = CompConst
('RecIdent','=')
     1.  RecIdent-> RecField
('RecField','=')
     1.  RecField-> = [ RecFieldList ]
('RecFieldList','RECORDTYPE')
     1.  RecFieldList-> VarDecls RecFieldList_1
('RecFieldList','BOOL')
     1.  RecFieldList-> VarDecls RecFieldList_1
('RecFieldList','CHAR')
     1.  RecFieldList-> VarDecls RecFieldList_1
('RecFieldList','BYTE')
     1.  RecFieldList-> VarDecls RecFieldList_1
('RecFieldList','CARD')
     1.  RecFieldList-> VarDecls RecFieldList_1
('RecFieldList','INT')
     1.  RecFieldList-> VarDecls RecFieldList_1
('RecFieldList_1','IDENT')
     1.  RecFieldList_1-> ϵ
('RecFieldList_1',']')
     1.  RecFieldList_1-> ϵ
('RecFieldList_1',';')
     1.  RecFieldList_1-> ; VarDecls RecFieldList_1
('Modifier','IDENT')
     1.  Modifier-> ϵ
('Modifier','POINTER')
     1.  Modifier-> POINTER
('Modifier','ARRAY')
     1.  Modifier-> ARRAY ArrayStuff
('ArrayStuff','IDENT')
     1.  ArrayStuff-> ϵ
('ArrayStuff','(')
     1.  ArrayStuff-> ( CompConst ) OptArrayInit
('OptArrayInit','IDENT')
     1.  OptArrayInit-> ϵ
('OptArrayInit','=')
     1.  OptArrayInit-> = [ CompConstList ]
('CompConstList','NUMBER')
     1.  CompConstList-> CompConst CompConstList_1
('CompConstList','@')
     1.  CompConstList-> CompConst CompConstList_1
('CompConstList','*')
     1.  CompConstList-> CompConst CompConstList_1
('CompConstList_1','IDENT')
     1.  CompConstList_1-> ϵ
('CompConstList_1',']')
     1.  CompConstList_1-> ϵ
('CompConstList_1',',')
     1.  CompConstList_1-> , CompConst CompConstList_1
('CompConst','NUMBER')
     1.  CompConst-> BaseCompConst CompConst_1
('CompConst','@')
     1.  CompConst-> BaseCompConst CompConst_1
('CompConst','*')
     1.  CompConst-> BaseCompConst CompConst_1
('CompConst_1','IDENT')
     1.  CompConst_1-> ϵ
('CompConst_1',']')
     1.  CompConst_1-> ϵ
('CompConst_1',',')
     1.  CompConst_1-> ϵ
('CompConst_1','+')
     1.  CompConst_1-> + BaseCompConst CompConst_1
('BaseCompConst','NUMBER')
     1.  BaseCompConst-> NUMBER
('BaseCompConst','@')
     1.  BaseCompConst-> @ MemContents
('BaseCompConst','*')
     1.  BaseCompConst-> *
('Ident','IDENT')
     1.  Ident-> IDENT
Table Entries = 425
------------ Check For Conflicts-------------
2('Action65','IDENT')
          1.  MemContents-> Ident MemContentsType
          2.  MemContentsType-> ϵ
Conflicts = 2
