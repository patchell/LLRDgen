???????? $ Nullable Set(0)
**************** SymbolTable *****************
CBin::TXA  No Data
CBin::READ_WRTE  No Data
CBin::READ_ONLY  No Data
CBin::START  No Data
CBin::EOR  No Data
CBin::VALUE  No Data
CBin::CHAR_CONSTANT  No Data
CBin::INCLUDE  No Data
CBin::PHA  No Data
CBin::MODE  No Data
CBin::NOP  No Data
CBin::ROL  No Data
CBin::SIZE  No Data
CBin::PROCESSOR  No Data
CBin::CLC  No Data
CBin::PLP  No Data
CBin::TSX  No Data
CBin::ASL  No Data
CBin::BCC  No Data
CBin::TAX  No Data
CBin::TAY  No Data
CBin::R6502  No Data
CBin::WD65C02  No Data
CBin::CLD  No Data
CBin::SECTIONTOKEN  No Data
CBin::CLI  No Data
CBin::JSR  No Data
CBin::XREG  No Data
CBin::AND  No Data
CBin::PLA  No Data
CBin::BCS  No Data
CBin::BNE  No Data
CBin::LSR  No Data
CBin::DEC  No Data
CBin::ENDOFOPCODES  No Data
CBin::CLV  No Data
CBin::INC  No Data
CBin::#  No Data
CBin::DB  No Data
CBin::LEFT_SHIFT  No Data
CBin::(  No Data
CBin::INY  No Data
CBin::)  No Data
CBin::INX  No Data
CBin::SEC  No Data
CBin::*  No Data
CBin::,  No Data
CBin::BEQ  No Data
CBin::DL  No Data
CBin::SED  No Data
CBin::BPL  No Data
CBin::NUMBER  No Data
CBin::RIGHT_SHIFT  No Data
CBin::SEI  No Data
CBin::DS  No Data
CBin::DEX  No Data
CBin::DEY  No Data
CBin::ORG  No Data
CBin::BRK  No Data
CBin::TYA  No Data
CBin::DW  No Data
CBin::RTS  No Data
CBin::;  No Data
CBin::<  No Data
CBin::ORA  No Data
CBin::CPY  No Data
CBin::>  No Data
CBin::CPX  No Data
CBin::HEX_NUMBER  No Data
CBin::ENDOFTOKENS  No Data
CBin::STY  No Data
CBin::AND_OP  No Data
CBin::STX  No Data
CBin::BVC  No Data
CBin::BIT  No Data
CBin::STRING  No Data
CBin::OR_OP  No Data
CBin::ADC  No Data
CBin::YREG  No Data
CBin::SBC  No Data
CBin::STA  No Data
CBin::SYMBOL  No Data
CBin::WD65C816  No Data
CBin::BMI  No Data
CBin::ROR  No Data
CBin::LDA  No Data
CBin::RTI  No Data
CBin::BVS  No Data
CBin::TXS  No Data
CBin::LABEL  No Data
CBin::CMP  No Data
CBin::MOD  No Data
CBin::LDX  No Data
CBin::LDY  No Data
CBin::PHP  No Data
CBin::JMP  No Data
CBin::ACCUM  No Data
^^^^^^^^^^^^^^^ SymbolTable ^^^^^^^^^^^^^^^^^^^^^^
As65:  Token:NONTERMINAL Value:265 NULLABLE(0) START(1)
	First Set'As65 First Set' { }

	Follw Set'As65 Follow Set' { '$' }

Parser:NT:;
Parser:NT:ADC
Parser:NT:AND
Parser:NT:EOR
Parser:NT:ORA
Parser:NT:CMP
Parser:NT:SBC
Parser:NT:LDA
Parser:NT:STA
Parser:NT:ASL
Parser:NT:ROL
Parser:NT:LSR
Parser:NT:ROR
Parser:NT:BCC
Parser:NT:BCS
Parser:NT:BEQ
Parser:NT:BMI
Parser:NT:BNE
Parser:NT:BPL
Parser:NT:BVC
Parser:NT:BVS
Parser:NT:BIT
Parser:NT:BRK
Parser:NT:CLC
Parser:NT:CLD
Parser:NT:CLI
Parser:NT:CLV
Parser:NT:DEX
Parser:NT:DEY
Parser:NT:INX
Parser:NT:INY
Parser:NT:NOP
Parser:NT:PHA
Parser:NT:PLA
Parser:NT:PHP
Parser:NT:PLP
Parser:NT:RTI
Parser:NT:RTS
Parser:NT:SEC
Parser:NT:SED
Parser:NT:SEI
Parser:NT:TAX
Parser:NT:TAY
Parser:NT:TXA
Parser:NT:TYA
Parser:NT:TXS
Parser:NT:TSX
Parser:NT:INC
Parser:NT:DEC
Parser:NT:JMP
Parser:NT:JSR
Parser:NT:CPX
Parser:NT:CPY
Parser:NT:LDX
Parser:NT:LDY
Parser:NT:STX
Parser:NT:STY
Parser:NT:DS
Parser:NT:DB
Parser:NT:DW
Parser:NT:DL
Parser:NT:SECTIONTOKEN
Parser:NT:STRING
Parser:NT:ORG
Parser:NT:PROCESSOR
Parser:NT:R6502
Parser:NT:WD65C02
Parser:NT:WD65C816
Parser:NT:#
Parser:NT:(
Parser:NT:)
Parser:NT:,
Parser:NT:YREG
Parser:NT:,
Parser:NT:XREG
Parser:NT:)
Parser:NT:(
Parser:NT:(
Parser:NT:)
Parser:NT:#
Parser:NT:#
Parser:NT:#
Parser:NT:,
Parser:NT:XREG
Parser:NT:YREG
Parser:NT:,
Parser:NT:XREG
Parser:NT:,
Parser:NT:YREG
Parser:NT:,
Parser:NT:>
Parser:NT:<
Parser:NT:NUMBER
Parser:NT:*
*************  Print Out Grammar Structure************
LdyAddressingMOde
AsmConstant
->  IDENT
->  LABLE
->  NUMBER
->  *
Operators
->  ADC  AluAdrModes
->  AND  AluAdrModes
->  EOR  AluAdrModes
->  ORA  AluAdrModes
->  CMP  AluAdrModes
->  SBC  AluAdrModes
->  LDA  AluAdrModes
->  STA  StaAddressingModes
->  ASL  ShiftAddressingModes
->  ROL  ShiftAddressingModes
->  LSR  ShiftAddressingModes
->  ROR  ShiftAddressingModes
->  BCC  RelAddressingMode
->  BCS  RelAddressingMode
->  BEQ  RelAddressingMode
->  BMI  RelAddressingMode
->  BNE  RelAddressingMode
->  BPL  RelAddressingMode
->  BVC  RelAddressingMode
->  BVS  RelAddressingMode
->  BIT  BitAddressModes
->  BRK
->  CLC
->  CLD
->  CLI
->  CLV
->  DEX
->  DEY
->  INX
->  INY
->  NOP
->  PHA
->  PLA
->  PHP
->  PLP
->  RTI
->  RTS
->  SEC
->  SED
->  SEI
->  TAX
->  TAY
->  TXA
->  TYA
->  TXS
->  TSX
->  INC  IncAddressingMOdes
->  DEC  IncAddressingMOdes
->  JMP  JumpAddressingModes
->  JSR  CallAddressingMode
->  CPX  CPXAddressingMode
->  CPY  CPXAddressingMode
->  LDX  LdxAddressingMode
->  LDY  LdyAddressingMOde
->  STX  StxAddressingMode
->  STY  StyAddressingMode
->  ϵ
AluAdrModes_1
->  #  AsmConstant
->  (  Indirect
ShiftAddressingModes
->  AREG
->  AsmConstant  OptXReg
StaAddressingModes
->  AsmConstant  OptIndexReg
->  (  Indirect
CPXAddressingMode
->  AsmConstant
->  #  AsmConstant
AluAdrModes
->  AsmConstant  OptIndexReg
->  AluAdrModes_1
Indirect_1
OptYReg
->  ,  YREG
->  ϵ
RelAddressingMode
->  AsmConstant
IncAddressingMOdes
->  AsmConstant  OptXReg
CodeLineList_1
->  ;  CodeLine  CodeLineList_1
->  ϵ
AsmConstList_1
IDENT
CodeLineList
->  CodeLine  CodeLineList_1
AREG
ProcessorType
CodeLine_1
->  Operators
->  DefineStorage
->  DefineMemory
->  Control
BitAddressModes
->  AsmConstant
UpperLower
->  >  UpperLower
->  <  UpperLower
->  AsmConstant
Indirect
->  AsmConstant  Indirect_1  Indirect_1
->  )  ,  YREG
->  ,  XREG  )
OptLable
CallAddressingMode
->  AsmConstant
OptIndexReg
->  ,  OptIndexReg_1
->  ϵ
DefineStorage
->  DS  AsmConstant
As65
->  CodeLineList
Processortype
->  R6502
->  WD65C02
->  WD65C816
LdyAddressingMode
->  AsmConstant  OptXReg
->  #  AsmConstant
OptIndexReg_1
->  XREG
->  YREG
LdxAddressingMode
->  AsmConstant  OptYReg
->  #  AsmConstant
StxAddressingMode
->  AsmConstant  OptYReg
StyAddressingMode
->  AsmConstant  OptXReg
JumpAddressingModes
->  AsmConstant
->  (  AsmConstant  )
Control
->  SECTIONTOKEN  STRING
->  ORG  AsmConstant
->  PROCESSOR  ProcessorType
CodeLine
->  OptLable  CodeLine_1
OptXReg
->  ,  XREG
->  ϵ
AsmConstList
->  UpperLower  AsmConstList_1  AsmConstList_1
->  ,  UpperLower  AsmConstList_1
DefineMemory
->  DB  AsmConstList
->  DW  AsmConstList
->  DL  AsmConstList
LABLE
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
********** Non Terminals Set **********
'Non Terminals' { 'As65','CodeLineList','CodeLineList_1','CodeLine','CodeLine_1','Operators','DefineStorage','DefineMemory','Control','AluAdrModes','AluAdrModes_1','Indirect','StaAddressingModes','ShiftAddressingModes','RelAddressingMode','BitAddressModes','IncAddressingMOdes','JumpAddressingModes','CallAddressingMode','LdxAddressingMode','CPXAddressingMode','StxAddressingMode','StyAddressingMode','OptIndexReg','OptIndexReg_1','OptXReg','OptYReg','AsmConstList','UpperLower','AsmConstant' }
*********** Build Nullable Set **********
----- Generate Nullables-------
As65->
CodeLineList->
CodeLineList_1->
CodeLineList_1->
CodeLine->
CodeLine_1->
CodeLine_1->
CodeLine_1->
CodeLine_1->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
DefineStorage->
DefineMemory->
DefineMemory->
DefineMemory->
Control->
Control->
Control->
AluAdrModes->
AluAdrModes->
AluAdrModes_1->
AluAdrModes_1->
Indirect->
Indirect->
Indirect->
StaAddressingModes->
StaAddressingModes->
ShiftAddressingModes->
ShiftAddressingModes->
RelAddressingMode->
BitAddressModes->
IncAddressingMOdes->
JumpAddressingModes->
JumpAddressingModes->
CallAddressingMode->
LdxAddressingMode->
LdxAddressingMode->
CPXAddressingMode->
CPXAddressingMode->
StxAddressingMode->
StyAddressingMode->
OptIndexReg->
OptIndexReg->
OptIndexReg_1->
OptIndexReg_1->
OptXReg->
OptXReg->
OptYReg->
OptYReg->
AsmConstList->
AsmConstList->
UpperLower->
UpperLower->
UpperLower->
AsmConstant->
AsmConstant->
AsmConstant->
AsmConstant->
************ Nullable Iteration 1 *********
As65->
CodeLineList->
CodeLineList_1->
CodeLineList_1->
CodeLine->
CodeLine_1->
CodeLine_1->
CodeLine_1->
CodeLine_1->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
Operators->
DefineStorage->
DefineMemory->
DefineMemory->
DefineMemory->
Control->
Control->
Control->
AluAdrModes->
AluAdrModes->
AluAdrModes_1->
AluAdrModes_1->
Indirect->
Indirect->
Indirect->
StaAddressingModes->
StaAddressingModes->
ShiftAddressingModes->
ShiftAddressingModes->
RelAddressingMode->
BitAddressModes->
IncAddressingMOdes->
JumpAddressingModes->
JumpAddressingModes->
CallAddressingMode->
LdxAddressingMode->
LdxAddressingMode->
CPXAddressingMode->
CPXAddressingMode->
StxAddressingMode->
StyAddressingMode->
OptIndexReg->
OptIndexReg->
OptIndexReg_1->
OptIndexReg_1->
OptXReg->
OptXReg->
OptYReg->
OptYReg->
AsmConstList->
AsmConstList->
UpperLower->
UpperLower->
UpperLower->
AsmConstant->
AsmConstant->
AsmConstant->
AsmConstant->
************ Nullable Iteration 2 *********
----- Done Generate Nullables-------
'Nullables' { 'CodeLineList_1','Operators','OptIndexReg','OptXReg','OptYReg' }

'Non Terminals' { 'As65','CodeLineList','CodeLineList_1','CodeLine','CodeLine_1','Operators','DefineStorage','DefineMemory','Control','AluAdrModes','AluAdrModes_1','Indirect','StaAddressingModes','ShiftAddressingModes','RelAddressingMode','BitAddressModes','IncAddressingMOdes','JumpAddressingModes','CallAddressingMode','LdxAddressingMode','CPXAddressingMode','StxAddressingMode','StyAddressingMode','OptIndexReg','OptIndexReg_1','OptXReg','OptYReg','AsmConstList','UpperLower','AsmConstant' }

****************Create NOT nullable set ************************
----- Calc First Sets------
******* Create First Set Ver 2 ********
###### First Set Iteration #1
----------------------
FIRST(As65)
As65	->  CodeLineList
Is 'ϵ' Not Contained in 'CodeLineList First Set'
TRUE
'As65 First Set' { } U 'CodeLineList First Set' { } => 'As65 First Set' { }
'As65 First Set' { }

----------------------
FIRST(CodeLineList)
CodeLineList	->  CodeLine  CodeLineList_1
Is 'ϵ' Not Contained in 'CodeLine First Set'
TRUE
'CodeLineList First Set' { } U 'CodeLine First Set' { } => 'CodeLineList First Set' { }
'CodeLineList First Set' { }

----------------------
FIRST(CodeLineList_1)
CodeLineList_1	->  ;  CodeLine  CodeLineList_1
Is 'ϵ' Not Contained in '; First Set'
			Compare 'ϵ' To ';'
TRUE
'CodeLineList_1 First Set' { } U '; First Set' { ';' } => 'CodeLineList_1 First Set' { ';' }
'CodeLineList_1 First Set' { ';' }

CodeLineList_1	->  ϵ
'CodeLineList_1 First Set' { ';' } U 'ϵ First Set' { 'ϵ' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' }

----------------------
FIRST(CodeLine)
CodeLine	->  OptLable  CodeLine_1
Is 'ϵ' Not Contained in 'OptLable First Set'
TRUE
'CodeLine First Set' { } U 'OptLable First Set' { } => 'CodeLine First Set' { }
'CodeLine First Set' { }

----------------------
FIRST(CodeLine_1)
CodeLine_1	->  Operators
Is 'ϵ' Not Contained in 'Operators First Set'
TRUE
'CodeLine_1 First Set' { } U 'Operators First Set' { } => 'CodeLine_1 First Set' { }
'CodeLine_1 First Set' { } U 'ϵ First Set' { 'ϵ' } => 'CodeLine_1 First Set' { 'ϵ' }
'CodeLine_1 First Set' { 'ϵ' }

CodeLine_1	->  DefineStorage
Is 'ϵ' Not Contained in 'DefineStorage First Set'
TRUE
'CodeLine_1 First Set' { 'ϵ' } U 'DefineStorage First Set' { } => 'CodeLine_1 First Set' { 'ϵ' }
'CodeLine_1 First Set' { 'ϵ' }

CodeLine_1	->  DefineMemory
Is 'ϵ' Not Contained in 'DefineMemory First Set'
TRUE
'CodeLine_1 First Set' { 'ϵ' } U 'DefineMemory First Set' { } => 'CodeLine_1 First Set' { 'ϵ' }
'CodeLine_1 First Set' { 'ϵ' }

CodeLine_1	->  Control
Is 'ϵ' Not Contained in 'Control First Set'
TRUE
'CodeLine_1 First Set' { 'ϵ' } U 'Control First Set' { } => 'CodeLine_1 First Set' { 'ϵ' }
'CodeLine_1 First Set' { 'ϵ' }

----------------------
FIRST(Operators)
Operators	->  ADC  AluAdrModes
Is 'ϵ' Not Contained in 'ADC First Set'
			Compare 'ϵ' To 'ADC'
TRUE
'Operators First Set' { } U 'ADC First Set' { 'ADC' } => 'Operators First Set' { 'ADC' }
'Operators First Set' { 'ADC' }

Operators	->  AND  AluAdrModes
Is 'ϵ' Not Contained in 'AND First Set'
			Compare 'ϵ' To 'AND'
TRUE
'Operators First Set' { 'ADC' } U 'AND First Set' { 'AND' } => 'Operators First Set' { 'ADC','AND' }
'Operators First Set' { 'ADC','AND' }

Operators	->  EOR  AluAdrModes
Is 'ϵ' Not Contained in 'EOR First Set'
			Compare 'ϵ' To 'EOR'
TRUE
'Operators First Set' { 'ADC','AND' } U 'EOR First Set' { 'EOR' } => 'Operators First Set' { 'ADC','AND','EOR' }
'Operators First Set' { 'ADC','AND','EOR' }

Operators	->  ORA  AluAdrModes
Is 'ϵ' Not Contained in 'ORA First Set'
			Compare 'ϵ' To 'ORA'
TRUE
'Operators First Set' { 'ADC','AND','EOR' } U 'ORA First Set' { 'ORA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA' }
'Operators First Set' { 'ADC','AND','EOR','ORA' }

Operators	->  CMP  AluAdrModes
Is 'ϵ' Not Contained in 'CMP First Set'
			Compare 'ϵ' To 'CMP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA' } U 'CMP First Set' { 'CMP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP' }

Operators	->  SBC  AluAdrModes
Is 'ϵ' Not Contained in 'SBC First Set'
			Compare 'ϵ' To 'SBC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP' } U 'SBC First Set' { 'SBC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC' }

Operators	->  LDA  AluAdrModes
Is 'ϵ' Not Contained in 'LDA First Set'
			Compare 'ϵ' To 'LDA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC' } U 'LDA First Set' { 'LDA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA' }

Operators	->  STA  StaAddressingModes
Is 'ϵ' Not Contained in 'STA First Set'
			Compare 'ϵ' To 'STA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA' } U 'STA First Set' { 'STA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA' }

Operators	->  ASL  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ASL First Set'
			Compare 'ϵ' To 'ASL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA' } U 'ASL First Set' { 'ASL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL' }

Operators	->  ROL  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ROL First Set'
			Compare 'ϵ' To 'ROL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL' } U 'ROL First Set' { 'ROL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL' }

Operators	->  LSR  ShiftAddressingModes
Is 'ϵ' Not Contained in 'LSR First Set'
			Compare 'ϵ' To 'LSR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL' } U 'LSR First Set' { 'LSR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR' }

Operators	->  ROR  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ROR First Set'
			Compare 'ϵ' To 'ROR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR' } U 'ROR First Set' { 'ROR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR' }

Operators	->  BCC  RelAddressingMode
Is 'ϵ' Not Contained in 'BCC First Set'
			Compare 'ϵ' To 'BCC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR' } U 'BCC First Set' { 'BCC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC' }

Operators	->  BCS  RelAddressingMode
Is 'ϵ' Not Contained in 'BCS First Set'
			Compare 'ϵ' To 'BCS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC' } U 'BCS First Set' { 'BCS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS' }

Operators	->  BEQ  RelAddressingMode
Is 'ϵ' Not Contained in 'BEQ First Set'
			Compare 'ϵ' To 'BEQ'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS' } U 'BEQ First Set' { 'BEQ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ' }

Operators	->  BMI  RelAddressingMode
Is 'ϵ' Not Contained in 'BMI First Set'
			Compare 'ϵ' To 'BMI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ' } U 'BMI First Set' { 'BMI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI' }

Operators	->  BNE  RelAddressingMode
Is 'ϵ' Not Contained in 'BNE First Set'
			Compare 'ϵ' To 'BNE'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI' } U 'BNE First Set' { 'BNE' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE' }

Operators	->  BPL  RelAddressingMode
Is 'ϵ' Not Contained in 'BPL First Set'
			Compare 'ϵ' To 'BPL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE' } U 'BPL First Set' { 'BPL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL' }

Operators	->  BVC  RelAddressingMode
Is 'ϵ' Not Contained in 'BVC First Set'
			Compare 'ϵ' To 'BVC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL' } U 'BVC First Set' { 'BVC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC' }

Operators	->  BVS  RelAddressingMode
Is 'ϵ' Not Contained in 'BVS First Set'
			Compare 'ϵ' To 'BVS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC' } U 'BVS First Set' { 'BVS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS' }

Operators	->  BIT  BitAddressModes
Is 'ϵ' Not Contained in 'BIT First Set'
			Compare 'ϵ' To 'BIT'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS' } U 'BIT First Set' { 'BIT' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT' }

Operators	->  BRK
Is 'ϵ' Not Contained in 'BRK First Set'
			Compare 'ϵ' To 'BRK'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT' } U 'BRK First Set' { 'BRK' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK' }

Operators	->  CLC
Is 'ϵ' Not Contained in 'CLC First Set'
			Compare 'ϵ' To 'CLC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK' } U 'CLC First Set' { 'CLC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC' }

Operators	->  CLD
Is 'ϵ' Not Contained in 'CLD First Set'
			Compare 'ϵ' To 'CLD'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC' } U 'CLD First Set' { 'CLD' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD' }

Operators	->  CLI
Is 'ϵ' Not Contained in 'CLI First Set'
			Compare 'ϵ' To 'CLI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD' } U 'CLI First Set' { 'CLI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI' }

Operators	->  CLV
Is 'ϵ' Not Contained in 'CLV First Set'
			Compare 'ϵ' To 'CLV'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI' } U 'CLV First Set' { 'CLV' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV' }

Operators	->  DEX
Is 'ϵ' Not Contained in 'DEX First Set'
			Compare 'ϵ' To 'DEX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV' } U 'DEX First Set' { 'DEX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX' }

Operators	->  DEY
Is 'ϵ' Not Contained in 'DEY First Set'
			Compare 'ϵ' To 'DEY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX' } U 'DEY First Set' { 'DEY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY' }

Operators	->  INX
Is 'ϵ' Not Contained in 'INX First Set'
			Compare 'ϵ' To 'INX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY' } U 'INX First Set' { 'INX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX' }

Operators	->  INY
Is 'ϵ' Not Contained in 'INY First Set'
			Compare 'ϵ' To 'INY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX' } U 'INY First Set' { 'INY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY' }

Operators	->  NOP
Is 'ϵ' Not Contained in 'NOP First Set'
			Compare 'ϵ' To 'NOP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY' } U 'NOP First Set' { 'NOP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP' }

Operators	->  PHA
Is 'ϵ' Not Contained in 'PHA First Set'
			Compare 'ϵ' To 'PHA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP' } U 'PHA First Set' { 'PHA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA' }

Operators	->  PLA
Is 'ϵ' Not Contained in 'PLA First Set'
			Compare 'ϵ' To 'PLA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA' } U 'PLA First Set' { 'PLA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA' }

Operators	->  PHP
Is 'ϵ' Not Contained in 'PHP First Set'
			Compare 'ϵ' To 'PHP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA' } U 'PHP First Set' { 'PHP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP' }

Operators	->  PLP
Is 'ϵ' Not Contained in 'PLP First Set'
			Compare 'ϵ' To 'PLP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP' } U 'PLP First Set' { 'PLP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP' }

Operators	->  RTI
Is 'ϵ' Not Contained in 'RTI First Set'
			Compare 'ϵ' To 'RTI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP' } U 'RTI First Set' { 'RTI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI' }

Operators	->  RTS
Is 'ϵ' Not Contained in 'RTS First Set'
			Compare 'ϵ' To 'RTS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI' } U 'RTS First Set' { 'RTS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS' }

Operators	->  SEC
Is 'ϵ' Not Contained in 'SEC First Set'
			Compare 'ϵ' To 'SEC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS' } U 'SEC First Set' { 'SEC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC' }

Operators	->  SED
Is 'ϵ' Not Contained in 'SED First Set'
			Compare 'ϵ' To 'SED'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC' } U 'SED First Set' { 'SED' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED' }

Operators	->  SEI
Is 'ϵ' Not Contained in 'SEI First Set'
			Compare 'ϵ' To 'SEI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED' } U 'SEI First Set' { 'SEI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI' }

Operators	->  TAX
Is 'ϵ' Not Contained in 'TAX First Set'
			Compare 'ϵ' To 'TAX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI' } U 'TAX First Set' { 'TAX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX' }

Operators	->  TAY
Is 'ϵ' Not Contained in 'TAY First Set'
			Compare 'ϵ' To 'TAY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX' } U 'TAY First Set' { 'TAY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY' }

Operators	->  TXA
Is 'ϵ' Not Contained in 'TXA First Set'
			Compare 'ϵ' To 'TXA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY' } U 'TXA First Set' { 'TXA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA' }

Operators	->  TYA
Is 'ϵ' Not Contained in 'TYA First Set'
			Compare 'ϵ' To 'TYA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA' } U 'TYA First Set' { 'TYA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA' }

Operators	->  TXS
Is 'ϵ' Not Contained in 'TXS First Set'
			Compare 'ϵ' To 'TXS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA' } U 'TXS First Set' { 'TXS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS' }

Operators	->  TSX
Is 'ϵ' Not Contained in 'TSX First Set'
			Compare 'ϵ' To 'TSX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS' } U 'TSX First Set' { 'TSX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX' }

Operators	->  INC  IncAddressingMOdes
Is 'ϵ' Not Contained in 'INC First Set'
			Compare 'ϵ' To 'INC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX' } U 'INC First Set' { 'INC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC' }

Operators	->  DEC  IncAddressingMOdes
Is 'ϵ' Not Contained in 'DEC First Set'
			Compare 'ϵ' To 'DEC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC' } U 'DEC First Set' { 'DEC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC' }

Operators	->  JMP  JumpAddressingModes
Is 'ϵ' Not Contained in 'JMP First Set'
			Compare 'ϵ' To 'JMP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC' } U 'JMP First Set' { 'JMP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP' }

Operators	->  JSR  CallAddressingMode
Is 'ϵ' Not Contained in 'JSR First Set'
			Compare 'ϵ' To 'JSR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP' } U 'JSR First Set' { 'JSR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR' }

Operators	->  CPX  CPXAddressingMode
Is 'ϵ' Not Contained in 'CPX First Set'
			Compare 'ϵ' To 'CPX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR' } U 'CPX First Set' { 'CPX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX' }

Operators	->  CPY  CPXAddressingMode
Is 'ϵ' Not Contained in 'CPY First Set'
			Compare 'ϵ' To 'CPY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX' } U 'CPY First Set' { 'CPY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY' }

Operators	->  LDX  LdxAddressingMode
Is 'ϵ' Not Contained in 'LDX First Set'
			Compare 'ϵ' To 'LDX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY' } U 'LDX First Set' { 'LDX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX' }

Operators	->  LDY  LdyAddressingMOde
Is 'ϵ' Not Contained in 'LDY First Set'
			Compare 'ϵ' To 'LDY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX' } U 'LDY First Set' { 'LDY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY' }

Operators	->  STX  StxAddressingMode
Is 'ϵ' Not Contained in 'STX First Set'
			Compare 'ϵ' To 'STX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY' } U 'STX First Set' { 'STX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX' }

Operators	->  STY  StyAddressingMode
Is 'ϵ' Not Contained in 'STY First Set'
			Compare 'ϵ' To 'STY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX' } U 'STY First Set' { 'STY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY' }

Operators	->  ϵ
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY' } U 'ϵ First Set' { 'ϵ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

----------------------
FIRST(DefineStorage)
DefineStorage	->  DS  AsmConstant
Is 'ϵ' Not Contained in 'DS First Set'
			Compare 'ϵ' To 'DS'
TRUE
'DefineStorage First Set' { } U 'DS First Set' { 'DS' } => 'DefineStorage First Set' { 'DS' }
'DefineStorage First Set' { 'DS' }

----------------------
FIRST(DefineMemory)
DefineMemory	->  DB  AsmConstList
Is 'ϵ' Not Contained in 'DB First Set'
			Compare 'ϵ' To 'DB'
TRUE
'DefineMemory First Set' { } U 'DB First Set' { 'DB' } => 'DefineMemory First Set' { 'DB' }
'DefineMemory First Set' { 'DB' }

DefineMemory	->  DW  AsmConstList
Is 'ϵ' Not Contained in 'DW First Set'
			Compare 'ϵ' To 'DW'
TRUE
'DefineMemory First Set' { 'DB' } U 'DW First Set' { 'DW' } => 'DefineMemory First Set' { 'DB','DW' }
'DefineMemory First Set' { 'DB','DW' }

DefineMemory	->  DL  AsmConstList
Is 'ϵ' Not Contained in 'DL First Set'
			Compare 'ϵ' To 'DL'
TRUE
'DefineMemory First Set' { 'DB','DW' } U 'DL First Set' { 'DL' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

----------------------
FIRST(Control)
Control	->  SECTIONTOKEN  STRING
Is 'ϵ' Not Contained in 'SECTIONTOKEN First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
TRUE
'Control First Set' { } U 'SECTIONTOKEN First Set' { 'SECTIONTOKEN' } => 'Control First Set' { 'SECTIONTOKEN' }
'Control First Set' { 'SECTIONTOKEN' }

Control	->  ORG  AsmConstant
Is 'ϵ' Not Contained in 'ORG First Set'
			Compare 'ϵ' To 'ORG'
TRUE
'Control First Set' { 'SECTIONTOKEN' } U 'ORG First Set' { 'ORG' } => 'Control First Set' { 'SECTIONTOKEN','ORG' }
'Control First Set' { 'SECTIONTOKEN','ORG' }

Control	->  PROCESSOR  ProcessorType
Is 'ϵ' Not Contained in 'PROCESSOR First Set'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG' } U 'PROCESSOR First Set' { 'PROCESSOR' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

----------------------
FIRST(AluAdrModes)
AluAdrModes	->  AsmConstant  OptIndexReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'AluAdrModes First Set' { } U 'AsmConstant First Set' { } => 'AluAdrModes First Set' { }
'AluAdrModes First Set' { }

AluAdrModes	->  AluAdrModes_1
Is 'ϵ' Not Contained in 'AluAdrModes_1 First Set'
TRUE
'AluAdrModes First Set' { } U 'AluAdrModes_1 First Set' { } => 'AluAdrModes First Set' { }
'AluAdrModes First Set' { }

----------------------
FIRST(AluAdrModes_1)
AluAdrModes_1	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'AluAdrModes_1 First Set' { } U '# First Set' { '#' } => 'AluAdrModes_1 First Set' { '#' }
'AluAdrModes_1 First Set' { '#' }

AluAdrModes_1	->  (  Indirect
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'AluAdrModes_1 First Set' { '#' } U '( First Set' { '(' } => 'AluAdrModes_1 First Set' { '#','(' }
'AluAdrModes_1 First Set' { '#','(' }

----------------------
FIRST(Indirect)
Indirect	->  AsmConstant  Indirect_1  Indirect_1
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'Indirect First Set' { } U 'AsmConstant First Set' { } => 'Indirect First Set' { }
'Indirect First Set' { }

Indirect	->  )  ,  YREG
Is 'ϵ' Not Contained in ') First Set'
			Compare 'ϵ' To ')'
TRUE
'Indirect First Set' { } U ') First Set' { ')' } => 'Indirect First Set' { ')' }
'Indirect First Set' { ')' }

Indirect	->  ,  XREG  )
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'Indirect First Set' { ')' } U ', First Set' { ',' } => 'Indirect First Set' { ')',',' }
'Indirect First Set' { ')',',' }

----------------------
FIRST(StaAddressingModes)
StaAddressingModes	->  AsmConstant  OptIndexReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'StaAddressingModes First Set' { } U 'AsmConstant First Set' { } => 'StaAddressingModes First Set' { }
'StaAddressingModes First Set' { }

StaAddressingModes	->  (  Indirect
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'StaAddressingModes First Set' { } U '( First Set' { '(' } => 'StaAddressingModes First Set' { '(' }
'StaAddressingModes First Set' { '(' }

----------------------
FIRST(ShiftAddressingModes)
ShiftAddressingModes	->  AREG
Is 'ϵ' Not Contained in 'AREG First Set'
TRUE
'ShiftAddressingModes First Set' { } U 'AREG First Set' { } => 'ShiftAddressingModes First Set' { }
'ShiftAddressingModes First Set' { }

ShiftAddressingModes	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'ShiftAddressingModes First Set' { } U 'AsmConstant First Set' { } => 'ShiftAddressingModes First Set' { }
'ShiftAddressingModes First Set' { }

----------------------
FIRST(RelAddressingMode)
RelAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'RelAddressingMode First Set' { } U 'AsmConstant First Set' { } => 'RelAddressingMode First Set' { }
'RelAddressingMode First Set' { }

----------------------
FIRST(BitAddressModes)
BitAddressModes	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'BitAddressModes First Set' { } U 'AsmConstant First Set' { } => 'BitAddressModes First Set' { }
'BitAddressModes First Set' { }

----------------------
FIRST(IncAddressingMOdes)
IncAddressingMOdes	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'IncAddressingMOdes First Set' { } U 'AsmConstant First Set' { } => 'IncAddressingMOdes First Set' { }
'IncAddressingMOdes First Set' { }

----------------------
FIRST(JumpAddressingModes)
JumpAddressingModes	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'JumpAddressingModes First Set' { } U 'AsmConstant First Set' { } => 'JumpAddressingModes First Set' { }
'JumpAddressingModes First Set' { }

JumpAddressingModes	->  (  AsmConstant  )
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'JumpAddressingModes First Set' { } U '( First Set' { '(' } => 'JumpAddressingModes First Set' { '(' }
'JumpAddressingModes First Set' { '(' }

----------------------
FIRST(CallAddressingMode)
CallAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'CallAddressingMode First Set' { } U 'AsmConstant First Set' { } => 'CallAddressingMode First Set' { }
'CallAddressingMode First Set' { }

----------------------
FIRST(LdxAddressingMode)
LdxAddressingMode	->  AsmConstant  OptYReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'LdxAddressingMode First Set' { } U 'AsmConstant First Set' { } => 'LdxAddressingMode First Set' { }
'LdxAddressingMode First Set' { }

LdxAddressingMode	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'LdxAddressingMode First Set' { } U '# First Set' { '#' } => 'LdxAddressingMode First Set' { '#' }
'LdxAddressingMode First Set' { '#' }

----------------------
FIRST(CPXAddressingMode)
CPXAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'CPXAddressingMode First Set' { } U 'AsmConstant First Set' { } => 'CPXAddressingMode First Set' { }
'CPXAddressingMode First Set' { }

CPXAddressingMode	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'CPXAddressingMode First Set' { } U '# First Set' { '#' } => 'CPXAddressingMode First Set' { '#' }
'CPXAddressingMode First Set' { '#' }

----------------------
FIRST(StxAddressingMode)
StxAddressingMode	->  AsmConstant  OptYReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'StxAddressingMode First Set' { } U 'AsmConstant First Set' { } => 'StxAddressingMode First Set' { }
'StxAddressingMode First Set' { }

----------------------
FIRST(StyAddressingMode)
StyAddressingMode	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'StyAddressingMode First Set' { } U 'AsmConstant First Set' { } => 'StyAddressingMode First Set' { }
'StyAddressingMode First Set' { }

----------------------
FIRST(OptIndexReg)
OptIndexReg	->  ,  OptIndexReg_1
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptIndexReg First Set' { } U ', First Set' { ',' } => 'OptIndexReg First Set' { ',' }
'OptIndexReg First Set' { ',' }

OptIndexReg	->  ϵ
'OptIndexReg First Set' { ',' } U 'ϵ First Set' { 'ϵ' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' }

----------------------
FIRST(OptIndexReg_1)
OptIndexReg_1	->  XREG
Is 'ϵ' Not Contained in 'XREG First Set'
			Compare 'ϵ' To 'XREG'
TRUE
'OptIndexReg_1 First Set' { } U 'XREG First Set' { 'XREG' } => 'OptIndexReg_1 First Set' { 'XREG' }
'OptIndexReg_1 First Set' { 'XREG' }

OptIndexReg_1	->  YREG
Is 'ϵ' Not Contained in 'YREG First Set'
			Compare 'ϵ' To 'YREG'
TRUE
'OptIndexReg_1 First Set' { 'XREG' } U 'YREG First Set' { 'YREG' } => 'OptIndexReg_1 First Set' { 'XREG','YREG' }
'OptIndexReg_1 First Set' { 'XREG','YREG' }

----------------------
FIRST(OptXReg)
OptXReg	->  ,  XREG
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptXReg First Set' { } U ', First Set' { ',' } => 'OptXReg First Set' { ',' }
'OptXReg First Set' { ',' }

OptXReg	->  ϵ
'OptXReg First Set' { ',' } U 'ϵ First Set' { 'ϵ' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' }

----------------------
FIRST(OptYReg)
OptYReg	->  ,  YREG
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptYReg First Set' { } U ', First Set' { ',' } => 'OptYReg First Set' { ',' }
'OptYReg First Set' { ',' }

OptYReg	->  ϵ
'OptYReg First Set' { ',' } U 'ϵ First Set' { 'ϵ' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' }

----------------------
FIRST(AsmConstList)
AsmConstList	->  UpperLower  AsmConstList_1  AsmConstList_1
Is 'ϵ' Not Contained in 'UpperLower First Set'
TRUE
'AsmConstList First Set' { } U 'UpperLower First Set' { } => 'AsmConstList First Set' { }
'AsmConstList First Set' { }

AsmConstList	->  ,  UpperLower  AsmConstList_1
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'AsmConstList First Set' { } U ', First Set' { ',' } => 'AsmConstList First Set' { ',' }
'AsmConstList First Set' { ',' }

----------------------
FIRST(UpperLower)
UpperLower	->  >  UpperLower
Is 'ϵ' Not Contained in '> First Set'
			Compare 'ϵ' To '>'
TRUE
'UpperLower First Set' { } U '> First Set' { '>' } => 'UpperLower First Set' { '>' }
'UpperLower First Set' { '>' }

UpperLower	->  <  UpperLower
Is 'ϵ' Not Contained in '< First Set'
			Compare 'ϵ' To '<'
TRUE
'UpperLower First Set' { '>' } U '< First Set' { '<' } => 'UpperLower First Set' { '>','<' }
'UpperLower First Set' { '>','<' }

UpperLower	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
TRUE
'UpperLower First Set' { '>','<' } U 'AsmConstant First Set' { } => 'UpperLower First Set' { '>','<' }
'UpperLower First Set' { '>','<' }

----------------------
FIRST(AsmConstant)
AsmConstant	->  IDENT
Is 'ϵ' Not Contained in 'IDENT First Set'
TRUE
'AsmConstant First Set' { } U 'IDENT First Set' { } => 'AsmConstant First Set' { }
'AsmConstant First Set' { }

AsmConstant	->  LABLE
Is 'ϵ' Not Contained in 'LABLE First Set'
TRUE
'AsmConstant First Set' { } U 'LABLE First Set' { } => 'AsmConstant First Set' { }
'AsmConstant First Set' { }

AsmConstant	->  NUMBER
Is 'ϵ' Not Contained in 'NUMBER First Set'
			Compare 'ϵ' To 'NUMBER'
TRUE
'AsmConstant First Set' { } U 'NUMBER First Set' { 'NUMBER' } => 'AsmConstant First Set' { 'NUMBER' }
'AsmConstant First Set' { 'NUMBER' }

AsmConstant	->  *
Is 'ϵ' Not Contained in '* First Set'
			Compare 'ϵ' To '*'
TRUE
'AsmConstant First Set' { 'NUMBER' } U '* First Set' { '*' } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

###### Iteration #2  DONE!
###### First Set Iteration #2
----------------------
FIRST(As65)
As65	->  CodeLineList
Is 'ϵ' Not Contained in 'CodeLineList First Set'
TRUE
'As65 First Set' { } U 'CodeLineList First Set' { } => 'As65 First Set' { }
'As65 First Set' { }

----------------------
FIRST(CodeLineList)
CodeLineList	->  CodeLine  CodeLineList_1
Is 'ϵ' Not Contained in 'CodeLine First Set'
TRUE
'CodeLineList First Set' { } U 'CodeLine First Set' { } => 'CodeLineList First Set' { }
'CodeLineList First Set' { }

----------------------
FIRST(CodeLineList_1)
CodeLineList_1	->  ;  CodeLine  CodeLineList_1
Is 'ϵ' Not Contained in '; First Set'
			Compare 'ϵ' To ';'
TRUE
'CodeLineList_1 First Set' { ';','ϵ' } U '; First Set' { ';' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' }

CodeLineList_1	->  ϵ
'CodeLineList_1 First Set' { ';','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' }

----------------------
FIRST(CodeLine)
CodeLine	->  OptLable  CodeLine_1
Is 'ϵ' Not Contained in 'OptLable First Set'
TRUE
'CodeLine First Set' { } U 'OptLable First Set' { } => 'CodeLine First Set' { }
'CodeLine First Set' { }

----------------------
FIRST(CodeLine_1)
CodeLine_1	->  Operators
Is 'ϵ' Not Contained in 'Operators First Set'
			Compare 'ϵ' To 'ADC'
			Compare 'ϵ' To 'AND'
			Compare 'ϵ' To 'EOR'
			Compare 'ϵ' To 'ORA'
			Compare 'ϵ' To 'CMP'
			Compare 'ϵ' To 'SBC'
			Compare 'ϵ' To 'LDA'
			Compare 'ϵ' To 'STA'
			Compare 'ϵ' To 'ASL'
			Compare 'ϵ' To 'ROL'
			Compare 'ϵ' To 'LSR'
			Compare 'ϵ' To 'ROR'
			Compare 'ϵ' To 'BCC'
			Compare 'ϵ' To 'BCS'
			Compare 'ϵ' To 'BEQ'
			Compare 'ϵ' To 'BMI'
			Compare 'ϵ' To 'BNE'
			Compare 'ϵ' To 'BPL'
			Compare 'ϵ' To 'BVC'
			Compare 'ϵ' To 'BVS'
			Compare 'ϵ' To 'BIT'
			Compare 'ϵ' To 'BRK'
			Compare 'ϵ' To 'CLC'
			Compare 'ϵ' To 'CLD'
			Compare 'ϵ' To 'CLI'
			Compare 'ϵ' To 'CLV'
			Compare 'ϵ' To 'DEX'
			Compare 'ϵ' To 'DEY'
			Compare 'ϵ' To 'INX'
			Compare 'ϵ' To 'INY'
			Compare 'ϵ' To 'NOP'
			Compare 'ϵ' To 'PHA'
			Compare 'ϵ' To 'PLA'
			Compare 'ϵ' To 'PHP'
			Compare 'ϵ' To 'PLP'
			Compare 'ϵ' To 'RTI'
			Compare 'ϵ' To 'RTS'
			Compare 'ϵ' To 'SEC'
			Compare 'ϵ' To 'SED'
			Compare 'ϵ' To 'SEI'
			Compare 'ϵ' To 'TAX'
			Compare 'ϵ' To 'TAY'
			Compare 'ϵ' To 'TXA'
			Compare 'ϵ' To 'TYA'
			Compare 'ϵ' To 'TXS'
			Compare 'ϵ' To 'TSX'
			Compare 'ϵ' To 'INC'
			Compare 'ϵ' To 'DEC'
			Compare 'ϵ' To 'JMP'
			Compare 'ϵ' To 'JSR'
			Compare 'ϵ' To 'CPX'
			Compare 'ϵ' To 'CPY'
			Compare 'ϵ' To 'LDX'
			Compare 'ϵ' To 'LDY'
			Compare 'ϵ' To 'STX'
			Compare 'ϵ' To 'STY'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set Operators First Set
TRUE
End of Y1Y2...Yk Chain
'CodeLine_1 First Set' { 'ϵ' } U 'ϵ First Set' { 'ϵ' } => 'CodeLine_1 First Set' { 'ϵ' }
'CodeLine_1 First Set' { 'ϵ' }

CodeLine_1	->  DefineStorage
Is 'ϵ' Not Contained in 'DefineStorage First Set'
			Compare 'ϵ' To 'DS'
TRUE
'CodeLine_1 First Set' { 'ϵ' } U 'DefineStorage First Set' { 'DS' } => 'CodeLine_1 First Set' { 'ϵ','DS' }
'CodeLine_1 First Set' { 'ϵ','DS' }

CodeLine_1	->  DefineMemory
Is 'ϵ' Not Contained in 'DefineMemory First Set'
			Compare 'ϵ' To 'DB'
			Compare 'ϵ' To 'DW'
			Compare 'ϵ' To 'DL'
TRUE
'CodeLine_1 First Set' { 'ϵ','DS' } U 'DefineMemory First Set' { 'DB','DW','DL' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL' }

CodeLine_1	->  Control
Is 'ϵ' Not Contained in 'Control First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
			Compare 'ϵ' To 'ORG'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL' } U 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

----------------------
FIRST(Operators)
Operators	->  ADC  AluAdrModes
Is 'ϵ' Not Contained in 'ADC First Set'
			Compare 'ϵ' To 'ADC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ADC First Set' { 'ADC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  AND  AluAdrModes
Is 'ϵ' Not Contained in 'AND First Set'
			Compare 'ϵ' To 'AND'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'AND First Set' { 'AND' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  EOR  AluAdrModes
Is 'ϵ' Not Contained in 'EOR First Set'
			Compare 'ϵ' To 'EOR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'EOR First Set' { 'EOR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ORA  AluAdrModes
Is 'ϵ' Not Contained in 'ORA First Set'
			Compare 'ϵ' To 'ORA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ORA First Set' { 'ORA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CMP  AluAdrModes
Is 'ϵ' Not Contained in 'CMP First Set'
			Compare 'ϵ' To 'CMP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CMP First Set' { 'CMP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SBC  AluAdrModes
Is 'ϵ' Not Contained in 'SBC First Set'
			Compare 'ϵ' To 'SBC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SBC First Set' { 'SBC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDA  AluAdrModes
Is 'ϵ' Not Contained in 'LDA First Set'
			Compare 'ϵ' To 'LDA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDA First Set' { 'LDA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STA  StaAddressingModes
Is 'ϵ' Not Contained in 'STA First Set'
			Compare 'ϵ' To 'STA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STA First Set' { 'STA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ASL  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ASL First Set'
			Compare 'ϵ' To 'ASL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ASL First Set' { 'ASL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ROL  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ROL First Set'
			Compare 'ϵ' To 'ROL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ROL First Set' { 'ROL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LSR  ShiftAddressingModes
Is 'ϵ' Not Contained in 'LSR First Set'
			Compare 'ϵ' To 'LSR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LSR First Set' { 'LSR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ROR  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ROR First Set'
			Compare 'ϵ' To 'ROR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ROR First Set' { 'ROR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BCC  RelAddressingMode
Is 'ϵ' Not Contained in 'BCC First Set'
			Compare 'ϵ' To 'BCC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BCC First Set' { 'BCC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BCS  RelAddressingMode
Is 'ϵ' Not Contained in 'BCS First Set'
			Compare 'ϵ' To 'BCS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BCS First Set' { 'BCS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BEQ  RelAddressingMode
Is 'ϵ' Not Contained in 'BEQ First Set'
			Compare 'ϵ' To 'BEQ'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BEQ First Set' { 'BEQ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BMI  RelAddressingMode
Is 'ϵ' Not Contained in 'BMI First Set'
			Compare 'ϵ' To 'BMI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BMI First Set' { 'BMI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BNE  RelAddressingMode
Is 'ϵ' Not Contained in 'BNE First Set'
			Compare 'ϵ' To 'BNE'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BNE First Set' { 'BNE' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BPL  RelAddressingMode
Is 'ϵ' Not Contained in 'BPL First Set'
			Compare 'ϵ' To 'BPL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BPL First Set' { 'BPL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BVC  RelAddressingMode
Is 'ϵ' Not Contained in 'BVC First Set'
			Compare 'ϵ' To 'BVC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BVC First Set' { 'BVC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BVS  RelAddressingMode
Is 'ϵ' Not Contained in 'BVS First Set'
			Compare 'ϵ' To 'BVS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BVS First Set' { 'BVS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BIT  BitAddressModes
Is 'ϵ' Not Contained in 'BIT First Set'
			Compare 'ϵ' To 'BIT'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BIT First Set' { 'BIT' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BRK
Is 'ϵ' Not Contained in 'BRK First Set'
			Compare 'ϵ' To 'BRK'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BRK First Set' { 'BRK' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLC
Is 'ϵ' Not Contained in 'CLC First Set'
			Compare 'ϵ' To 'CLC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLC First Set' { 'CLC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLD
Is 'ϵ' Not Contained in 'CLD First Set'
			Compare 'ϵ' To 'CLD'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLD First Set' { 'CLD' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLI
Is 'ϵ' Not Contained in 'CLI First Set'
			Compare 'ϵ' To 'CLI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLI First Set' { 'CLI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLV
Is 'ϵ' Not Contained in 'CLV First Set'
			Compare 'ϵ' To 'CLV'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLV First Set' { 'CLV' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEX
Is 'ϵ' Not Contained in 'DEX First Set'
			Compare 'ϵ' To 'DEX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEX First Set' { 'DEX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEY
Is 'ϵ' Not Contained in 'DEY First Set'
			Compare 'ϵ' To 'DEY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEY First Set' { 'DEY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INX
Is 'ϵ' Not Contained in 'INX First Set'
			Compare 'ϵ' To 'INX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INX First Set' { 'INX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INY
Is 'ϵ' Not Contained in 'INY First Set'
			Compare 'ϵ' To 'INY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INY First Set' { 'INY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  NOP
Is 'ϵ' Not Contained in 'NOP First Set'
			Compare 'ϵ' To 'NOP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'NOP First Set' { 'NOP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PHA
Is 'ϵ' Not Contained in 'PHA First Set'
			Compare 'ϵ' To 'PHA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PHA First Set' { 'PHA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PLA
Is 'ϵ' Not Contained in 'PLA First Set'
			Compare 'ϵ' To 'PLA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PLA First Set' { 'PLA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PHP
Is 'ϵ' Not Contained in 'PHP First Set'
			Compare 'ϵ' To 'PHP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PHP First Set' { 'PHP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PLP
Is 'ϵ' Not Contained in 'PLP First Set'
			Compare 'ϵ' To 'PLP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PLP First Set' { 'PLP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  RTI
Is 'ϵ' Not Contained in 'RTI First Set'
			Compare 'ϵ' To 'RTI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'RTI First Set' { 'RTI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  RTS
Is 'ϵ' Not Contained in 'RTS First Set'
			Compare 'ϵ' To 'RTS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'RTS First Set' { 'RTS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SEC
Is 'ϵ' Not Contained in 'SEC First Set'
			Compare 'ϵ' To 'SEC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SEC First Set' { 'SEC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SED
Is 'ϵ' Not Contained in 'SED First Set'
			Compare 'ϵ' To 'SED'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SED First Set' { 'SED' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SEI
Is 'ϵ' Not Contained in 'SEI First Set'
			Compare 'ϵ' To 'SEI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SEI First Set' { 'SEI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TAX
Is 'ϵ' Not Contained in 'TAX First Set'
			Compare 'ϵ' To 'TAX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TAX First Set' { 'TAX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TAY
Is 'ϵ' Not Contained in 'TAY First Set'
			Compare 'ϵ' To 'TAY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TAY First Set' { 'TAY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TXA
Is 'ϵ' Not Contained in 'TXA First Set'
			Compare 'ϵ' To 'TXA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TXA First Set' { 'TXA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TYA
Is 'ϵ' Not Contained in 'TYA First Set'
			Compare 'ϵ' To 'TYA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TYA First Set' { 'TYA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TXS
Is 'ϵ' Not Contained in 'TXS First Set'
			Compare 'ϵ' To 'TXS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TXS First Set' { 'TXS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TSX
Is 'ϵ' Not Contained in 'TSX First Set'
			Compare 'ϵ' To 'TSX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TSX First Set' { 'TSX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INC  IncAddressingMOdes
Is 'ϵ' Not Contained in 'INC First Set'
			Compare 'ϵ' To 'INC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INC First Set' { 'INC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEC  IncAddressingMOdes
Is 'ϵ' Not Contained in 'DEC First Set'
			Compare 'ϵ' To 'DEC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEC First Set' { 'DEC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  JMP  JumpAddressingModes
Is 'ϵ' Not Contained in 'JMP First Set'
			Compare 'ϵ' To 'JMP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'JMP First Set' { 'JMP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  JSR  CallAddressingMode
Is 'ϵ' Not Contained in 'JSR First Set'
			Compare 'ϵ' To 'JSR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'JSR First Set' { 'JSR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CPX  CPXAddressingMode
Is 'ϵ' Not Contained in 'CPX First Set'
			Compare 'ϵ' To 'CPX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CPX First Set' { 'CPX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CPY  CPXAddressingMode
Is 'ϵ' Not Contained in 'CPY First Set'
			Compare 'ϵ' To 'CPY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CPY First Set' { 'CPY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDX  LdxAddressingMode
Is 'ϵ' Not Contained in 'LDX First Set'
			Compare 'ϵ' To 'LDX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDX First Set' { 'LDX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDY  LdyAddressingMOde
Is 'ϵ' Not Contained in 'LDY First Set'
			Compare 'ϵ' To 'LDY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDY First Set' { 'LDY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STX  StxAddressingMode
Is 'ϵ' Not Contained in 'STX First Set'
			Compare 'ϵ' To 'STX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STX First Set' { 'STX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STY  StyAddressingMode
Is 'ϵ' Not Contained in 'STY First Set'
			Compare 'ϵ' To 'STY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STY First Set' { 'STY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ϵ
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

----------------------
FIRST(DefineStorage)
DefineStorage	->  DS  AsmConstant
Is 'ϵ' Not Contained in 'DS First Set'
			Compare 'ϵ' To 'DS'
TRUE
'DefineStorage First Set' { 'DS' } U 'DS First Set' { 'DS' } => 'DefineStorage First Set' { 'DS' }
'DefineStorage First Set' { 'DS' }

----------------------
FIRST(DefineMemory)
DefineMemory	->  DB  AsmConstList
Is 'ϵ' Not Contained in 'DB First Set'
			Compare 'ϵ' To 'DB'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DB First Set' { 'DB' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

DefineMemory	->  DW  AsmConstList
Is 'ϵ' Not Contained in 'DW First Set'
			Compare 'ϵ' To 'DW'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DW First Set' { 'DW' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

DefineMemory	->  DL  AsmConstList
Is 'ϵ' Not Contained in 'DL First Set'
			Compare 'ϵ' To 'DL'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DL First Set' { 'DL' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

----------------------
FIRST(Control)
Control	->  SECTIONTOKEN  STRING
Is 'ϵ' Not Contained in 'SECTIONTOKEN First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'SECTIONTOKEN First Set' { 'SECTIONTOKEN' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

Control	->  ORG  AsmConstant
Is 'ϵ' Not Contained in 'ORG First Set'
			Compare 'ϵ' To 'ORG'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'ORG First Set' { 'ORG' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

Control	->  PROCESSOR  ProcessorType
Is 'ϵ' Not Contained in 'PROCESSOR First Set'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'PROCESSOR First Set' { 'PROCESSOR' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

----------------------
FIRST(AluAdrModes)
AluAdrModes	->  AsmConstant  OptIndexReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'AluAdrModes First Set' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'AluAdrModes First Set' { 'NUMBER','*' }
'AluAdrModes First Set' { 'NUMBER','*' }

AluAdrModes	->  AluAdrModes_1
Is 'ϵ' Not Contained in 'AluAdrModes_1 First Set'
			Compare 'ϵ' To '#'
			Compare 'ϵ' To '('
TRUE
'AluAdrModes First Set' { 'NUMBER','*' } U 'AluAdrModes_1 First Set' { '#','(' } => 'AluAdrModes First Set' { 'NUMBER','*','#','(' }
'AluAdrModes First Set' { 'NUMBER','*','#','(' }

----------------------
FIRST(AluAdrModes_1)
AluAdrModes_1	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'AluAdrModes_1 First Set' { '#','(' } U '# First Set' { '#' } => 'AluAdrModes_1 First Set' { '#','(' }
'AluAdrModes_1 First Set' { '#','(' }

AluAdrModes_1	->  (  Indirect
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'AluAdrModes_1 First Set' { '#','(' } U '( First Set' { '(' } => 'AluAdrModes_1 First Set' { '#','(' }
'AluAdrModes_1 First Set' { '#','(' }

----------------------
FIRST(Indirect)
Indirect	->  AsmConstant  Indirect_1  Indirect_1
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'Indirect First Set' { ')',',' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

Indirect	->  )  ,  YREG
Is 'ϵ' Not Contained in ') First Set'
			Compare 'ϵ' To ')'
TRUE
'Indirect First Set' { ')',',','NUMBER','*' } U ') First Set' { ')' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

Indirect	->  ,  XREG  )
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'Indirect First Set' { ')',',','NUMBER','*' } U ', First Set' { ',' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

----------------------
FIRST(StaAddressingModes)
StaAddressingModes	->  AsmConstant  OptIndexReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StaAddressingModes First Set' { '(' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StaAddressingModes First Set' { '(','NUMBER','*' }
'StaAddressingModes First Set' { '(','NUMBER','*' }

StaAddressingModes	->  (  Indirect
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'StaAddressingModes First Set' { '(','NUMBER','*' } U '( First Set' { '(' } => 'StaAddressingModes First Set' { '(','NUMBER','*' }
'StaAddressingModes First Set' { '(','NUMBER','*' }

----------------------
FIRST(ShiftAddressingModes)
ShiftAddressingModes	->  AREG
Is 'ϵ' Not Contained in 'AREG First Set'
TRUE
'ShiftAddressingModes First Set' { } U 'AREG First Set' { } => 'ShiftAddressingModes First Set' { }
'ShiftAddressingModes First Set' { }

ShiftAddressingModes	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'ShiftAddressingModes First Set' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'ShiftAddressingModes First Set' { 'NUMBER','*' }
'ShiftAddressingModes First Set' { 'NUMBER','*' }

----------------------
FIRST(RelAddressingMode)
RelAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'RelAddressingMode First Set' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'RelAddressingMode First Set' { 'NUMBER','*' }
'RelAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(BitAddressModes)
BitAddressModes	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'BitAddressModes First Set' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'BitAddressModes First Set' { 'NUMBER','*' }
'BitAddressModes First Set' { 'NUMBER','*' }

----------------------
FIRST(IncAddressingMOdes)
IncAddressingMOdes	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'IncAddressingMOdes First Set' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'IncAddressingMOdes First Set' { 'NUMBER','*' }
'IncAddressingMOdes First Set' { 'NUMBER','*' }

----------------------
FIRST(JumpAddressingModes)
JumpAddressingModes	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'JumpAddressingModes First Set' { '(' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'JumpAddressingModes First Set' { '(','NUMBER','*' }
'JumpAddressingModes First Set' { '(','NUMBER','*' }

JumpAddressingModes	->  (  AsmConstant  )
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'JumpAddressingModes First Set' { '(','NUMBER','*' } U '( First Set' { '(' } => 'JumpAddressingModes First Set' { '(','NUMBER','*' }
'JumpAddressingModes First Set' { '(','NUMBER','*' }

----------------------
FIRST(CallAddressingMode)
CallAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'CallAddressingMode First Set' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'CallAddressingMode First Set' { 'NUMBER','*' }
'CallAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(LdxAddressingMode)
LdxAddressingMode	->  AsmConstant  OptYReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'LdxAddressingMode First Set' { '#' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'LdxAddressingMode First Set' { '#','NUMBER','*' }
'LdxAddressingMode First Set' { '#','NUMBER','*' }

LdxAddressingMode	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'LdxAddressingMode First Set' { '#','NUMBER','*' } U '# First Set' { '#' } => 'LdxAddressingMode First Set' { '#','NUMBER','*' }
'LdxAddressingMode First Set' { '#','NUMBER','*' }

----------------------
FIRST(CPXAddressingMode)
CPXAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'CPXAddressingMode First Set' { '#' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'CPXAddressingMode First Set' { '#','NUMBER','*' }
'CPXAddressingMode First Set' { '#','NUMBER','*' }

CPXAddressingMode	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'CPXAddressingMode First Set' { '#','NUMBER','*' } U '# First Set' { '#' } => 'CPXAddressingMode First Set' { '#','NUMBER','*' }
'CPXAddressingMode First Set' { '#','NUMBER','*' }

----------------------
FIRST(StxAddressingMode)
StxAddressingMode	->  AsmConstant  OptYReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StxAddressingMode First Set' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StxAddressingMode First Set' { 'NUMBER','*' }
'StxAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(StyAddressingMode)
StyAddressingMode	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StyAddressingMode First Set' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StyAddressingMode First Set' { 'NUMBER','*' }
'StyAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(OptIndexReg)
OptIndexReg	->  ,  OptIndexReg_1
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptIndexReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' }

OptIndexReg	->  ϵ
'OptIndexReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' }

----------------------
FIRST(OptIndexReg_1)
OptIndexReg_1	->  XREG
Is 'ϵ' Not Contained in 'XREG First Set'
			Compare 'ϵ' To 'XREG'
TRUE
'OptIndexReg_1 First Set' { 'XREG','YREG' } U 'XREG First Set' { 'XREG' } => 'OptIndexReg_1 First Set' { 'XREG','YREG' }
'OptIndexReg_1 First Set' { 'XREG','YREG' }

OptIndexReg_1	->  YREG
Is 'ϵ' Not Contained in 'YREG First Set'
			Compare 'ϵ' To 'YREG'
TRUE
'OptIndexReg_1 First Set' { 'XREG','YREG' } U 'YREG First Set' { 'YREG' } => 'OptIndexReg_1 First Set' { 'XREG','YREG' }
'OptIndexReg_1 First Set' { 'XREG','YREG' }

----------------------
FIRST(OptXReg)
OptXReg	->  ,  XREG
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptXReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' }

OptXReg	->  ϵ
'OptXReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' }

----------------------
FIRST(OptYReg)
OptYReg	->  ,  YREG
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptYReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' }

OptYReg	->  ϵ
'OptYReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' }

----------------------
FIRST(AsmConstList)
AsmConstList	->  UpperLower  AsmConstList_1  AsmConstList_1
Is 'ϵ' Not Contained in 'UpperLower First Set'
			Compare 'ϵ' To '>'
			Compare 'ϵ' To '<'
TRUE
'AsmConstList First Set' { ',' } U 'UpperLower First Set' { '>','<' } => 'AsmConstList First Set' { ',','>','<' }
'AsmConstList First Set' { ',','>','<' }

AsmConstList	->  ,  UpperLower  AsmConstList_1
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'AsmConstList First Set' { ',','>','<' } U ', First Set' { ',' } => 'AsmConstList First Set' { ',','>','<' }
'AsmConstList First Set' { ',','>','<' }

----------------------
FIRST(UpperLower)
UpperLower	->  >  UpperLower
Is 'ϵ' Not Contained in '> First Set'
			Compare 'ϵ' To '>'
TRUE
'UpperLower First Set' { '>','<' } U '> First Set' { '>' } => 'UpperLower First Set' { '>','<' }
'UpperLower First Set' { '>','<' }

UpperLower	->  <  UpperLower
Is 'ϵ' Not Contained in '< First Set'
			Compare 'ϵ' To '<'
TRUE
'UpperLower First Set' { '>','<' } U '< First Set' { '<' } => 'UpperLower First Set' { '>','<' }
'UpperLower First Set' { '>','<' }

UpperLower	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'UpperLower First Set' { '>','<' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'UpperLower First Set' { '>','<','NUMBER','*' }
'UpperLower First Set' { '>','<','NUMBER','*' }

----------------------
FIRST(AsmConstant)
AsmConstant	->  IDENT
Is 'ϵ' Not Contained in 'IDENT First Set'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'IDENT First Set' { } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  LABLE
Is 'ϵ' Not Contained in 'LABLE First Set'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'LABLE First Set' { } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  NUMBER
Is 'ϵ' Not Contained in 'NUMBER First Set'
			Compare 'ϵ' To 'NUMBER'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'NUMBER First Set' { 'NUMBER' } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  *
Is 'ϵ' Not Contained in '* First Set'
			Compare 'ϵ' To '*'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U '* First Set' { '*' } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

###### Iteration #3  DONE!
###### First Set Iteration #3
----------------------
FIRST(As65)
As65	->  CodeLineList
Is 'ϵ' Not Contained in 'CodeLineList First Set'
TRUE
'As65 First Set' { } U 'CodeLineList First Set' { } => 'As65 First Set' { }
'As65 First Set' { }

----------------------
FIRST(CodeLineList)
CodeLineList	->  CodeLine  CodeLineList_1
Is 'ϵ' Not Contained in 'CodeLine First Set'
TRUE
'CodeLineList First Set' { } U 'CodeLine First Set' { } => 'CodeLineList First Set' { }
'CodeLineList First Set' { }

----------------------
FIRST(CodeLineList_1)
CodeLineList_1	->  ;  CodeLine  CodeLineList_1
Is 'ϵ' Not Contained in '; First Set'
			Compare 'ϵ' To ';'
TRUE
'CodeLineList_1 First Set' { ';','ϵ' } U '; First Set' { ';' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' }

CodeLineList_1	->  ϵ
'CodeLineList_1 First Set' { ';','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' }

----------------------
FIRST(CodeLine)
CodeLine	->  OptLable  CodeLine_1
Is 'ϵ' Not Contained in 'OptLable First Set'
TRUE
'CodeLine First Set' { } U 'OptLable First Set' { } => 'CodeLine First Set' { }
'CodeLine First Set' { }

----------------------
FIRST(CodeLine_1)
CodeLine_1	->  Operators
Is 'ϵ' Not Contained in 'Operators First Set'
			Compare 'ϵ' To 'ADC'
			Compare 'ϵ' To 'AND'
			Compare 'ϵ' To 'EOR'
			Compare 'ϵ' To 'ORA'
			Compare 'ϵ' To 'CMP'
			Compare 'ϵ' To 'SBC'
			Compare 'ϵ' To 'LDA'
			Compare 'ϵ' To 'STA'
			Compare 'ϵ' To 'ASL'
			Compare 'ϵ' To 'ROL'
			Compare 'ϵ' To 'LSR'
			Compare 'ϵ' To 'ROR'
			Compare 'ϵ' To 'BCC'
			Compare 'ϵ' To 'BCS'
			Compare 'ϵ' To 'BEQ'
			Compare 'ϵ' To 'BMI'
			Compare 'ϵ' To 'BNE'
			Compare 'ϵ' To 'BPL'
			Compare 'ϵ' To 'BVC'
			Compare 'ϵ' To 'BVS'
			Compare 'ϵ' To 'BIT'
			Compare 'ϵ' To 'BRK'
			Compare 'ϵ' To 'CLC'
			Compare 'ϵ' To 'CLD'
			Compare 'ϵ' To 'CLI'
			Compare 'ϵ' To 'CLV'
			Compare 'ϵ' To 'DEX'
			Compare 'ϵ' To 'DEY'
			Compare 'ϵ' To 'INX'
			Compare 'ϵ' To 'INY'
			Compare 'ϵ' To 'NOP'
			Compare 'ϵ' To 'PHA'
			Compare 'ϵ' To 'PLA'
			Compare 'ϵ' To 'PHP'
			Compare 'ϵ' To 'PLP'
			Compare 'ϵ' To 'RTI'
			Compare 'ϵ' To 'RTS'
			Compare 'ϵ' To 'SEC'
			Compare 'ϵ' To 'SED'
			Compare 'ϵ' To 'SEI'
			Compare 'ϵ' To 'TAX'
			Compare 'ϵ' To 'TAY'
			Compare 'ϵ' To 'TXA'
			Compare 'ϵ' To 'TYA'
			Compare 'ϵ' To 'TXS'
			Compare 'ϵ' To 'TSX'
			Compare 'ϵ' To 'INC'
			Compare 'ϵ' To 'DEC'
			Compare 'ϵ' To 'JMP'
			Compare 'ϵ' To 'JSR'
			Compare 'ϵ' To 'CPX'
			Compare 'ϵ' To 'CPY'
			Compare 'ϵ' To 'LDX'
			Compare 'ϵ' To 'LDY'
			Compare 'ϵ' To 'STX'
			Compare 'ϵ' To 'STY'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set Operators First Set
TRUE
End of Y1Y2...Yk Chain
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' } U 'ϵ First Set' { 'ϵ' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

CodeLine_1	->  DefineStorage
Is 'ϵ' Not Contained in 'DefineStorage First Set'
			Compare 'ϵ' To 'DS'
TRUE
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' } U 'DefineStorage First Set' { 'DS' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

CodeLine_1	->  DefineMemory
Is 'ϵ' Not Contained in 'DefineMemory First Set'
			Compare 'ϵ' To 'DB'
			Compare 'ϵ' To 'DW'
			Compare 'ϵ' To 'DL'
TRUE
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' } U 'DefineMemory First Set' { 'DB','DW','DL' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

CodeLine_1	->  Control
Is 'ϵ' Not Contained in 'Control First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
			Compare 'ϵ' To 'ORG'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' } U 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

----------------------
FIRST(Operators)
Operators	->  ADC  AluAdrModes
Is 'ϵ' Not Contained in 'ADC First Set'
			Compare 'ϵ' To 'ADC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ADC First Set' { 'ADC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  AND  AluAdrModes
Is 'ϵ' Not Contained in 'AND First Set'
			Compare 'ϵ' To 'AND'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'AND First Set' { 'AND' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  EOR  AluAdrModes
Is 'ϵ' Not Contained in 'EOR First Set'
			Compare 'ϵ' To 'EOR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'EOR First Set' { 'EOR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ORA  AluAdrModes
Is 'ϵ' Not Contained in 'ORA First Set'
			Compare 'ϵ' To 'ORA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ORA First Set' { 'ORA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CMP  AluAdrModes
Is 'ϵ' Not Contained in 'CMP First Set'
			Compare 'ϵ' To 'CMP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CMP First Set' { 'CMP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SBC  AluAdrModes
Is 'ϵ' Not Contained in 'SBC First Set'
			Compare 'ϵ' To 'SBC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SBC First Set' { 'SBC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDA  AluAdrModes
Is 'ϵ' Not Contained in 'LDA First Set'
			Compare 'ϵ' To 'LDA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDA First Set' { 'LDA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STA  StaAddressingModes
Is 'ϵ' Not Contained in 'STA First Set'
			Compare 'ϵ' To 'STA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STA First Set' { 'STA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ASL  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ASL First Set'
			Compare 'ϵ' To 'ASL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ASL First Set' { 'ASL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ROL  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ROL First Set'
			Compare 'ϵ' To 'ROL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ROL First Set' { 'ROL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LSR  ShiftAddressingModes
Is 'ϵ' Not Contained in 'LSR First Set'
			Compare 'ϵ' To 'LSR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LSR First Set' { 'LSR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ROR  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ROR First Set'
			Compare 'ϵ' To 'ROR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ROR First Set' { 'ROR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BCC  RelAddressingMode
Is 'ϵ' Not Contained in 'BCC First Set'
			Compare 'ϵ' To 'BCC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BCC First Set' { 'BCC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BCS  RelAddressingMode
Is 'ϵ' Not Contained in 'BCS First Set'
			Compare 'ϵ' To 'BCS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BCS First Set' { 'BCS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BEQ  RelAddressingMode
Is 'ϵ' Not Contained in 'BEQ First Set'
			Compare 'ϵ' To 'BEQ'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BEQ First Set' { 'BEQ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BMI  RelAddressingMode
Is 'ϵ' Not Contained in 'BMI First Set'
			Compare 'ϵ' To 'BMI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BMI First Set' { 'BMI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BNE  RelAddressingMode
Is 'ϵ' Not Contained in 'BNE First Set'
			Compare 'ϵ' To 'BNE'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BNE First Set' { 'BNE' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BPL  RelAddressingMode
Is 'ϵ' Not Contained in 'BPL First Set'
			Compare 'ϵ' To 'BPL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BPL First Set' { 'BPL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BVC  RelAddressingMode
Is 'ϵ' Not Contained in 'BVC First Set'
			Compare 'ϵ' To 'BVC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BVC First Set' { 'BVC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BVS  RelAddressingMode
Is 'ϵ' Not Contained in 'BVS First Set'
			Compare 'ϵ' To 'BVS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BVS First Set' { 'BVS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BIT  BitAddressModes
Is 'ϵ' Not Contained in 'BIT First Set'
			Compare 'ϵ' To 'BIT'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BIT First Set' { 'BIT' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BRK
Is 'ϵ' Not Contained in 'BRK First Set'
			Compare 'ϵ' To 'BRK'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BRK First Set' { 'BRK' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLC
Is 'ϵ' Not Contained in 'CLC First Set'
			Compare 'ϵ' To 'CLC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLC First Set' { 'CLC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLD
Is 'ϵ' Not Contained in 'CLD First Set'
			Compare 'ϵ' To 'CLD'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLD First Set' { 'CLD' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLI
Is 'ϵ' Not Contained in 'CLI First Set'
			Compare 'ϵ' To 'CLI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLI First Set' { 'CLI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLV
Is 'ϵ' Not Contained in 'CLV First Set'
			Compare 'ϵ' To 'CLV'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLV First Set' { 'CLV' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEX
Is 'ϵ' Not Contained in 'DEX First Set'
			Compare 'ϵ' To 'DEX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEX First Set' { 'DEX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEY
Is 'ϵ' Not Contained in 'DEY First Set'
			Compare 'ϵ' To 'DEY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEY First Set' { 'DEY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INX
Is 'ϵ' Not Contained in 'INX First Set'
			Compare 'ϵ' To 'INX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INX First Set' { 'INX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INY
Is 'ϵ' Not Contained in 'INY First Set'
			Compare 'ϵ' To 'INY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INY First Set' { 'INY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  NOP
Is 'ϵ' Not Contained in 'NOP First Set'
			Compare 'ϵ' To 'NOP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'NOP First Set' { 'NOP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PHA
Is 'ϵ' Not Contained in 'PHA First Set'
			Compare 'ϵ' To 'PHA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PHA First Set' { 'PHA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PLA
Is 'ϵ' Not Contained in 'PLA First Set'
			Compare 'ϵ' To 'PLA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PLA First Set' { 'PLA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PHP
Is 'ϵ' Not Contained in 'PHP First Set'
			Compare 'ϵ' To 'PHP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PHP First Set' { 'PHP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PLP
Is 'ϵ' Not Contained in 'PLP First Set'
			Compare 'ϵ' To 'PLP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PLP First Set' { 'PLP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  RTI
Is 'ϵ' Not Contained in 'RTI First Set'
			Compare 'ϵ' To 'RTI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'RTI First Set' { 'RTI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  RTS
Is 'ϵ' Not Contained in 'RTS First Set'
			Compare 'ϵ' To 'RTS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'RTS First Set' { 'RTS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SEC
Is 'ϵ' Not Contained in 'SEC First Set'
			Compare 'ϵ' To 'SEC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SEC First Set' { 'SEC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SED
Is 'ϵ' Not Contained in 'SED First Set'
			Compare 'ϵ' To 'SED'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SED First Set' { 'SED' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SEI
Is 'ϵ' Not Contained in 'SEI First Set'
			Compare 'ϵ' To 'SEI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SEI First Set' { 'SEI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TAX
Is 'ϵ' Not Contained in 'TAX First Set'
			Compare 'ϵ' To 'TAX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TAX First Set' { 'TAX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TAY
Is 'ϵ' Not Contained in 'TAY First Set'
			Compare 'ϵ' To 'TAY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TAY First Set' { 'TAY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TXA
Is 'ϵ' Not Contained in 'TXA First Set'
			Compare 'ϵ' To 'TXA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TXA First Set' { 'TXA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TYA
Is 'ϵ' Not Contained in 'TYA First Set'
			Compare 'ϵ' To 'TYA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TYA First Set' { 'TYA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TXS
Is 'ϵ' Not Contained in 'TXS First Set'
			Compare 'ϵ' To 'TXS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TXS First Set' { 'TXS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TSX
Is 'ϵ' Not Contained in 'TSX First Set'
			Compare 'ϵ' To 'TSX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TSX First Set' { 'TSX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INC  IncAddressingMOdes
Is 'ϵ' Not Contained in 'INC First Set'
			Compare 'ϵ' To 'INC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INC First Set' { 'INC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEC  IncAddressingMOdes
Is 'ϵ' Not Contained in 'DEC First Set'
			Compare 'ϵ' To 'DEC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEC First Set' { 'DEC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  JMP  JumpAddressingModes
Is 'ϵ' Not Contained in 'JMP First Set'
			Compare 'ϵ' To 'JMP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'JMP First Set' { 'JMP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  JSR  CallAddressingMode
Is 'ϵ' Not Contained in 'JSR First Set'
			Compare 'ϵ' To 'JSR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'JSR First Set' { 'JSR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CPX  CPXAddressingMode
Is 'ϵ' Not Contained in 'CPX First Set'
			Compare 'ϵ' To 'CPX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CPX First Set' { 'CPX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CPY  CPXAddressingMode
Is 'ϵ' Not Contained in 'CPY First Set'
			Compare 'ϵ' To 'CPY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CPY First Set' { 'CPY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDX  LdxAddressingMode
Is 'ϵ' Not Contained in 'LDX First Set'
			Compare 'ϵ' To 'LDX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDX First Set' { 'LDX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDY  LdyAddressingMOde
Is 'ϵ' Not Contained in 'LDY First Set'
			Compare 'ϵ' To 'LDY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDY First Set' { 'LDY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STX  StxAddressingMode
Is 'ϵ' Not Contained in 'STX First Set'
			Compare 'ϵ' To 'STX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STX First Set' { 'STX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STY  StyAddressingMode
Is 'ϵ' Not Contained in 'STY First Set'
			Compare 'ϵ' To 'STY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STY First Set' { 'STY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ϵ
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

----------------------
FIRST(DefineStorage)
DefineStorage	->  DS  AsmConstant
Is 'ϵ' Not Contained in 'DS First Set'
			Compare 'ϵ' To 'DS'
TRUE
'DefineStorage First Set' { 'DS' } U 'DS First Set' { 'DS' } => 'DefineStorage First Set' { 'DS' }
'DefineStorage First Set' { 'DS' }

----------------------
FIRST(DefineMemory)
DefineMemory	->  DB  AsmConstList
Is 'ϵ' Not Contained in 'DB First Set'
			Compare 'ϵ' To 'DB'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DB First Set' { 'DB' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

DefineMemory	->  DW  AsmConstList
Is 'ϵ' Not Contained in 'DW First Set'
			Compare 'ϵ' To 'DW'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DW First Set' { 'DW' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

DefineMemory	->  DL  AsmConstList
Is 'ϵ' Not Contained in 'DL First Set'
			Compare 'ϵ' To 'DL'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DL First Set' { 'DL' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

----------------------
FIRST(Control)
Control	->  SECTIONTOKEN  STRING
Is 'ϵ' Not Contained in 'SECTIONTOKEN First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'SECTIONTOKEN First Set' { 'SECTIONTOKEN' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

Control	->  ORG  AsmConstant
Is 'ϵ' Not Contained in 'ORG First Set'
			Compare 'ϵ' To 'ORG'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'ORG First Set' { 'ORG' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

Control	->  PROCESSOR  ProcessorType
Is 'ϵ' Not Contained in 'PROCESSOR First Set'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'PROCESSOR First Set' { 'PROCESSOR' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

----------------------
FIRST(AluAdrModes)
AluAdrModes	->  AsmConstant  OptIndexReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'AluAdrModes First Set' { 'NUMBER','*','#','(' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'AluAdrModes First Set' { 'NUMBER','*','#','(' }
'AluAdrModes First Set' { 'NUMBER','*','#','(' }

AluAdrModes	->  AluAdrModes_1
Is 'ϵ' Not Contained in 'AluAdrModes_1 First Set'
			Compare 'ϵ' To '#'
			Compare 'ϵ' To '('
TRUE
'AluAdrModes First Set' { 'NUMBER','*','#','(' } U 'AluAdrModes_1 First Set' { '#','(' } => 'AluAdrModes First Set' { 'NUMBER','*','#','(' }
'AluAdrModes First Set' { 'NUMBER','*','#','(' }

----------------------
FIRST(AluAdrModes_1)
AluAdrModes_1	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'AluAdrModes_1 First Set' { '#','(' } U '# First Set' { '#' } => 'AluAdrModes_1 First Set' { '#','(' }
'AluAdrModes_1 First Set' { '#','(' }

AluAdrModes_1	->  (  Indirect
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'AluAdrModes_1 First Set' { '#','(' } U '( First Set' { '(' } => 'AluAdrModes_1 First Set' { '#','(' }
'AluAdrModes_1 First Set' { '#','(' }

----------------------
FIRST(Indirect)
Indirect	->  AsmConstant  Indirect_1  Indirect_1
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'Indirect First Set' { ')',',','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

Indirect	->  )  ,  YREG
Is 'ϵ' Not Contained in ') First Set'
			Compare 'ϵ' To ')'
TRUE
'Indirect First Set' { ')',',','NUMBER','*' } U ') First Set' { ')' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

Indirect	->  ,  XREG  )
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'Indirect First Set' { ')',',','NUMBER','*' } U ', First Set' { ',' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

----------------------
FIRST(StaAddressingModes)
StaAddressingModes	->  AsmConstant  OptIndexReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StaAddressingModes First Set' { '(','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StaAddressingModes First Set' { '(','NUMBER','*' }
'StaAddressingModes First Set' { '(','NUMBER','*' }

StaAddressingModes	->  (  Indirect
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'StaAddressingModes First Set' { '(','NUMBER','*' } U '( First Set' { '(' } => 'StaAddressingModes First Set' { '(','NUMBER','*' }
'StaAddressingModes First Set' { '(','NUMBER','*' }

----------------------
FIRST(ShiftAddressingModes)
ShiftAddressingModes	->  AREG
Is 'ϵ' Not Contained in 'AREG First Set'
TRUE
'ShiftAddressingModes First Set' { 'NUMBER','*' } U 'AREG First Set' { } => 'ShiftAddressingModes First Set' { 'NUMBER','*' }
'ShiftAddressingModes First Set' { 'NUMBER','*' }

ShiftAddressingModes	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'ShiftAddressingModes First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'ShiftAddressingModes First Set' { 'NUMBER','*' }
'ShiftAddressingModes First Set' { 'NUMBER','*' }

----------------------
FIRST(RelAddressingMode)
RelAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'RelAddressingMode First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'RelAddressingMode First Set' { 'NUMBER','*' }
'RelAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(BitAddressModes)
BitAddressModes	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'BitAddressModes First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'BitAddressModes First Set' { 'NUMBER','*' }
'BitAddressModes First Set' { 'NUMBER','*' }

----------------------
FIRST(IncAddressingMOdes)
IncAddressingMOdes	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'IncAddressingMOdes First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'IncAddressingMOdes First Set' { 'NUMBER','*' }
'IncAddressingMOdes First Set' { 'NUMBER','*' }

----------------------
FIRST(JumpAddressingModes)
JumpAddressingModes	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'JumpAddressingModes First Set' { '(','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'JumpAddressingModes First Set' { '(','NUMBER','*' }
'JumpAddressingModes First Set' { '(','NUMBER','*' }

JumpAddressingModes	->  (  AsmConstant  )
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'JumpAddressingModes First Set' { '(','NUMBER','*' } U '( First Set' { '(' } => 'JumpAddressingModes First Set' { '(','NUMBER','*' }
'JumpAddressingModes First Set' { '(','NUMBER','*' }

----------------------
FIRST(CallAddressingMode)
CallAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'CallAddressingMode First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'CallAddressingMode First Set' { 'NUMBER','*' }
'CallAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(LdxAddressingMode)
LdxAddressingMode	->  AsmConstant  OptYReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'LdxAddressingMode First Set' { '#','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'LdxAddressingMode First Set' { '#','NUMBER','*' }
'LdxAddressingMode First Set' { '#','NUMBER','*' }

LdxAddressingMode	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'LdxAddressingMode First Set' { '#','NUMBER','*' } U '# First Set' { '#' } => 'LdxAddressingMode First Set' { '#','NUMBER','*' }
'LdxAddressingMode First Set' { '#','NUMBER','*' }

----------------------
FIRST(CPXAddressingMode)
CPXAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'CPXAddressingMode First Set' { '#','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'CPXAddressingMode First Set' { '#','NUMBER','*' }
'CPXAddressingMode First Set' { '#','NUMBER','*' }

CPXAddressingMode	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'CPXAddressingMode First Set' { '#','NUMBER','*' } U '# First Set' { '#' } => 'CPXAddressingMode First Set' { '#','NUMBER','*' }
'CPXAddressingMode First Set' { '#','NUMBER','*' }

----------------------
FIRST(StxAddressingMode)
StxAddressingMode	->  AsmConstant  OptYReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StxAddressingMode First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StxAddressingMode First Set' { 'NUMBER','*' }
'StxAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(StyAddressingMode)
StyAddressingMode	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StyAddressingMode First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StyAddressingMode First Set' { 'NUMBER','*' }
'StyAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(OptIndexReg)
OptIndexReg	->  ,  OptIndexReg_1
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptIndexReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' }

OptIndexReg	->  ϵ
'OptIndexReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' }

----------------------
FIRST(OptIndexReg_1)
OptIndexReg_1	->  XREG
Is 'ϵ' Not Contained in 'XREG First Set'
			Compare 'ϵ' To 'XREG'
TRUE
'OptIndexReg_1 First Set' { 'XREG','YREG' } U 'XREG First Set' { 'XREG' } => 'OptIndexReg_1 First Set' { 'XREG','YREG' }
'OptIndexReg_1 First Set' { 'XREG','YREG' }

OptIndexReg_1	->  YREG
Is 'ϵ' Not Contained in 'YREG First Set'
			Compare 'ϵ' To 'YREG'
TRUE
'OptIndexReg_1 First Set' { 'XREG','YREG' } U 'YREG First Set' { 'YREG' } => 'OptIndexReg_1 First Set' { 'XREG','YREG' }
'OptIndexReg_1 First Set' { 'XREG','YREG' }

----------------------
FIRST(OptXReg)
OptXReg	->  ,  XREG
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptXReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' }

OptXReg	->  ϵ
'OptXReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' }

----------------------
FIRST(OptYReg)
OptYReg	->  ,  YREG
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptYReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' }

OptYReg	->  ϵ
'OptYReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' }

----------------------
FIRST(AsmConstList)
AsmConstList	->  UpperLower  AsmConstList_1  AsmConstList_1
Is 'ϵ' Not Contained in 'UpperLower First Set'
			Compare 'ϵ' To '>'
			Compare 'ϵ' To '<'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'AsmConstList First Set' { ',','>','<' } U 'UpperLower First Set' { '>','<','NUMBER','*' } => 'AsmConstList First Set' { ',','>','<','NUMBER','*' }
'AsmConstList First Set' { ',','>','<','NUMBER','*' }

AsmConstList	->  ,  UpperLower  AsmConstList_1
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'AsmConstList First Set' { ',','>','<','NUMBER','*' } U ', First Set' { ',' } => 'AsmConstList First Set' { ',','>','<','NUMBER','*' }
'AsmConstList First Set' { ',','>','<','NUMBER','*' }

----------------------
FIRST(UpperLower)
UpperLower	->  >  UpperLower
Is 'ϵ' Not Contained in '> First Set'
			Compare 'ϵ' To '>'
TRUE
'UpperLower First Set' { '>','<','NUMBER','*' } U '> First Set' { '>' } => 'UpperLower First Set' { '>','<','NUMBER','*' }
'UpperLower First Set' { '>','<','NUMBER','*' }

UpperLower	->  <  UpperLower
Is 'ϵ' Not Contained in '< First Set'
			Compare 'ϵ' To '<'
TRUE
'UpperLower First Set' { '>','<','NUMBER','*' } U '< First Set' { '<' } => 'UpperLower First Set' { '>','<','NUMBER','*' }
'UpperLower First Set' { '>','<','NUMBER','*' }

UpperLower	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'UpperLower First Set' { '>','<','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'UpperLower First Set' { '>','<','NUMBER','*' }
'UpperLower First Set' { '>','<','NUMBER','*' }

----------------------
FIRST(AsmConstant)
AsmConstant	->  IDENT
Is 'ϵ' Not Contained in 'IDENT First Set'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'IDENT First Set' { } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  LABLE
Is 'ϵ' Not Contained in 'LABLE First Set'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'LABLE First Set' { } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  NUMBER
Is 'ϵ' Not Contained in 'NUMBER First Set'
			Compare 'ϵ' To 'NUMBER'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'NUMBER First Set' { 'NUMBER' } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  *
Is 'ϵ' Not Contained in '* First Set'
			Compare 'ϵ' To '*'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U '* First Set' { '*' } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

###### Iteration #4  DONE!
###### First Set Iteration #4
----------------------
FIRST(As65)
As65	->  CodeLineList
Is 'ϵ' Not Contained in 'CodeLineList First Set'
TRUE
'As65 First Set' { } U 'CodeLineList First Set' { } => 'As65 First Set' { }
'As65 First Set' { }

----------------------
FIRST(CodeLineList)
CodeLineList	->  CodeLine  CodeLineList_1
Is 'ϵ' Not Contained in 'CodeLine First Set'
TRUE
'CodeLineList First Set' { } U 'CodeLine First Set' { } => 'CodeLineList First Set' { }
'CodeLineList First Set' { }

----------------------
FIRST(CodeLineList_1)
CodeLineList_1	->  ;  CodeLine  CodeLineList_1
Is 'ϵ' Not Contained in '; First Set'
			Compare 'ϵ' To ';'
TRUE
'CodeLineList_1 First Set' { ';','ϵ' } U '; First Set' { ';' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' }

CodeLineList_1	->  ϵ
'CodeLineList_1 First Set' { ';','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'CodeLineList_1 First Set' { ';','ϵ' }
'CodeLineList_1 First Set' { ';','ϵ' }

----------------------
FIRST(CodeLine)
CodeLine	->  OptLable  CodeLine_1
Is 'ϵ' Not Contained in 'OptLable First Set'
TRUE
'CodeLine First Set' { } U 'OptLable First Set' { } => 'CodeLine First Set' { }
'CodeLine First Set' { }

----------------------
FIRST(CodeLine_1)
CodeLine_1	->  Operators
Is 'ϵ' Not Contained in 'Operators First Set'
			Compare 'ϵ' To 'ADC'
			Compare 'ϵ' To 'AND'
			Compare 'ϵ' To 'EOR'
			Compare 'ϵ' To 'ORA'
			Compare 'ϵ' To 'CMP'
			Compare 'ϵ' To 'SBC'
			Compare 'ϵ' To 'LDA'
			Compare 'ϵ' To 'STA'
			Compare 'ϵ' To 'ASL'
			Compare 'ϵ' To 'ROL'
			Compare 'ϵ' To 'LSR'
			Compare 'ϵ' To 'ROR'
			Compare 'ϵ' To 'BCC'
			Compare 'ϵ' To 'BCS'
			Compare 'ϵ' To 'BEQ'
			Compare 'ϵ' To 'BMI'
			Compare 'ϵ' To 'BNE'
			Compare 'ϵ' To 'BPL'
			Compare 'ϵ' To 'BVC'
			Compare 'ϵ' To 'BVS'
			Compare 'ϵ' To 'BIT'
			Compare 'ϵ' To 'BRK'
			Compare 'ϵ' To 'CLC'
			Compare 'ϵ' To 'CLD'
			Compare 'ϵ' To 'CLI'
			Compare 'ϵ' To 'CLV'
			Compare 'ϵ' To 'DEX'
			Compare 'ϵ' To 'DEY'
			Compare 'ϵ' To 'INX'
			Compare 'ϵ' To 'INY'
			Compare 'ϵ' To 'NOP'
			Compare 'ϵ' To 'PHA'
			Compare 'ϵ' To 'PLA'
			Compare 'ϵ' To 'PHP'
			Compare 'ϵ' To 'PLP'
			Compare 'ϵ' To 'RTI'
			Compare 'ϵ' To 'RTS'
			Compare 'ϵ' To 'SEC'
			Compare 'ϵ' To 'SED'
			Compare 'ϵ' To 'SEI'
			Compare 'ϵ' To 'TAX'
			Compare 'ϵ' To 'TAY'
			Compare 'ϵ' To 'TXA'
			Compare 'ϵ' To 'TYA'
			Compare 'ϵ' To 'TXS'
			Compare 'ϵ' To 'TSX'
			Compare 'ϵ' To 'INC'
			Compare 'ϵ' To 'DEC'
			Compare 'ϵ' To 'JMP'
			Compare 'ϵ' To 'JSR'
			Compare 'ϵ' To 'CPX'
			Compare 'ϵ' To 'CPY'
			Compare 'ϵ' To 'LDX'
			Compare 'ϵ' To 'LDY'
			Compare 'ϵ' To 'STX'
			Compare 'ϵ' To 'STY'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set Operators First Set
TRUE
End of Y1Y2...Yk Chain
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' } U 'ϵ First Set' { 'ϵ' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

CodeLine_1	->  DefineStorage
Is 'ϵ' Not Contained in 'DefineStorage First Set'
			Compare 'ϵ' To 'DS'
TRUE
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' } U 'DefineStorage First Set' { 'DS' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

CodeLine_1	->  DefineMemory
Is 'ϵ' Not Contained in 'DefineMemory First Set'
			Compare 'ϵ' To 'DB'
			Compare 'ϵ' To 'DW'
			Compare 'ϵ' To 'DL'
TRUE
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' } U 'DefineMemory First Set' { 'DB','DW','DL' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

CodeLine_1	->  Control
Is 'ϵ' Not Contained in 'Control First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
			Compare 'ϵ' To 'ORG'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' } U 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } => 'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

----------------------
FIRST(Operators)
Operators	->  ADC  AluAdrModes
Is 'ϵ' Not Contained in 'ADC First Set'
			Compare 'ϵ' To 'ADC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ADC First Set' { 'ADC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  AND  AluAdrModes
Is 'ϵ' Not Contained in 'AND First Set'
			Compare 'ϵ' To 'AND'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'AND First Set' { 'AND' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  EOR  AluAdrModes
Is 'ϵ' Not Contained in 'EOR First Set'
			Compare 'ϵ' To 'EOR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'EOR First Set' { 'EOR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ORA  AluAdrModes
Is 'ϵ' Not Contained in 'ORA First Set'
			Compare 'ϵ' To 'ORA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ORA First Set' { 'ORA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CMP  AluAdrModes
Is 'ϵ' Not Contained in 'CMP First Set'
			Compare 'ϵ' To 'CMP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CMP First Set' { 'CMP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SBC  AluAdrModes
Is 'ϵ' Not Contained in 'SBC First Set'
			Compare 'ϵ' To 'SBC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SBC First Set' { 'SBC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDA  AluAdrModes
Is 'ϵ' Not Contained in 'LDA First Set'
			Compare 'ϵ' To 'LDA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDA First Set' { 'LDA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STA  StaAddressingModes
Is 'ϵ' Not Contained in 'STA First Set'
			Compare 'ϵ' To 'STA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STA First Set' { 'STA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ASL  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ASL First Set'
			Compare 'ϵ' To 'ASL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ASL First Set' { 'ASL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ROL  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ROL First Set'
			Compare 'ϵ' To 'ROL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ROL First Set' { 'ROL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LSR  ShiftAddressingModes
Is 'ϵ' Not Contained in 'LSR First Set'
			Compare 'ϵ' To 'LSR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LSR First Set' { 'LSR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ROR  ShiftAddressingModes
Is 'ϵ' Not Contained in 'ROR First Set'
			Compare 'ϵ' To 'ROR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ROR First Set' { 'ROR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BCC  RelAddressingMode
Is 'ϵ' Not Contained in 'BCC First Set'
			Compare 'ϵ' To 'BCC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BCC First Set' { 'BCC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BCS  RelAddressingMode
Is 'ϵ' Not Contained in 'BCS First Set'
			Compare 'ϵ' To 'BCS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BCS First Set' { 'BCS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BEQ  RelAddressingMode
Is 'ϵ' Not Contained in 'BEQ First Set'
			Compare 'ϵ' To 'BEQ'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BEQ First Set' { 'BEQ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BMI  RelAddressingMode
Is 'ϵ' Not Contained in 'BMI First Set'
			Compare 'ϵ' To 'BMI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BMI First Set' { 'BMI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BNE  RelAddressingMode
Is 'ϵ' Not Contained in 'BNE First Set'
			Compare 'ϵ' To 'BNE'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BNE First Set' { 'BNE' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BPL  RelAddressingMode
Is 'ϵ' Not Contained in 'BPL First Set'
			Compare 'ϵ' To 'BPL'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BPL First Set' { 'BPL' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BVC  RelAddressingMode
Is 'ϵ' Not Contained in 'BVC First Set'
			Compare 'ϵ' To 'BVC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BVC First Set' { 'BVC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BVS  RelAddressingMode
Is 'ϵ' Not Contained in 'BVS First Set'
			Compare 'ϵ' To 'BVS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BVS First Set' { 'BVS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BIT  BitAddressModes
Is 'ϵ' Not Contained in 'BIT First Set'
			Compare 'ϵ' To 'BIT'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BIT First Set' { 'BIT' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  BRK
Is 'ϵ' Not Contained in 'BRK First Set'
			Compare 'ϵ' To 'BRK'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'BRK First Set' { 'BRK' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLC
Is 'ϵ' Not Contained in 'CLC First Set'
			Compare 'ϵ' To 'CLC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLC First Set' { 'CLC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLD
Is 'ϵ' Not Contained in 'CLD First Set'
			Compare 'ϵ' To 'CLD'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLD First Set' { 'CLD' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLI
Is 'ϵ' Not Contained in 'CLI First Set'
			Compare 'ϵ' To 'CLI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLI First Set' { 'CLI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CLV
Is 'ϵ' Not Contained in 'CLV First Set'
			Compare 'ϵ' To 'CLV'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CLV First Set' { 'CLV' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEX
Is 'ϵ' Not Contained in 'DEX First Set'
			Compare 'ϵ' To 'DEX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEX First Set' { 'DEX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEY
Is 'ϵ' Not Contained in 'DEY First Set'
			Compare 'ϵ' To 'DEY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEY First Set' { 'DEY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INX
Is 'ϵ' Not Contained in 'INX First Set'
			Compare 'ϵ' To 'INX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INX First Set' { 'INX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INY
Is 'ϵ' Not Contained in 'INY First Set'
			Compare 'ϵ' To 'INY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INY First Set' { 'INY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  NOP
Is 'ϵ' Not Contained in 'NOP First Set'
			Compare 'ϵ' To 'NOP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'NOP First Set' { 'NOP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PHA
Is 'ϵ' Not Contained in 'PHA First Set'
			Compare 'ϵ' To 'PHA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PHA First Set' { 'PHA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PLA
Is 'ϵ' Not Contained in 'PLA First Set'
			Compare 'ϵ' To 'PLA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PLA First Set' { 'PLA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PHP
Is 'ϵ' Not Contained in 'PHP First Set'
			Compare 'ϵ' To 'PHP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PHP First Set' { 'PHP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  PLP
Is 'ϵ' Not Contained in 'PLP First Set'
			Compare 'ϵ' To 'PLP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'PLP First Set' { 'PLP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  RTI
Is 'ϵ' Not Contained in 'RTI First Set'
			Compare 'ϵ' To 'RTI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'RTI First Set' { 'RTI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  RTS
Is 'ϵ' Not Contained in 'RTS First Set'
			Compare 'ϵ' To 'RTS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'RTS First Set' { 'RTS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SEC
Is 'ϵ' Not Contained in 'SEC First Set'
			Compare 'ϵ' To 'SEC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SEC First Set' { 'SEC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SED
Is 'ϵ' Not Contained in 'SED First Set'
			Compare 'ϵ' To 'SED'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SED First Set' { 'SED' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  SEI
Is 'ϵ' Not Contained in 'SEI First Set'
			Compare 'ϵ' To 'SEI'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'SEI First Set' { 'SEI' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TAX
Is 'ϵ' Not Contained in 'TAX First Set'
			Compare 'ϵ' To 'TAX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TAX First Set' { 'TAX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TAY
Is 'ϵ' Not Contained in 'TAY First Set'
			Compare 'ϵ' To 'TAY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TAY First Set' { 'TAY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TXA
Is 'ϵ' Not Contained in 'TXA First Set'
			Compare 'ϵ' To 'TXA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TXA First Set' { 'TXA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TYA
Is 'ϵ' Not Contained in 'TYA First Set'
			Compare 'ϵ' To 'TYA'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TYA First Set' { 'TYA' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TXS
Is 'ϵ' Not Contained in 'TXS First Set'
			Compare 'ϵ' To 'TXS'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TXS First Set' { 'TXS' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  TSX
Is 'ϵ' Not Contained in 'TSX First Set'
			Compare 'ϵ' To 'TSX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'TSX First Set' { 'TSX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  INC  IncAddressingMOdes
Is 'ϵ' Not Contained in 'INC First Set'
			Compare 'ϵ' To 'INC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'INC First Set' { 'INC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  DEC  IncAddressingMOdes
Is 'ϵ' Not Contained in 'DEC First Set'
			Compare 'ϵ' To 'DEC'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'DEC First Set' { 'DEC' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  JMP  JumpAddressingModes
Is 'ϵ' Not Contained in 'JMP First Set'
			Compare 'ϵ' To 'JMP'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'JMP First Set' { 'JMP' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  JSR  CallAddressingMode
Is 'ϵ' Not Contained in 'JSR First Set'
			Compare 'ϵ' To 'JSR'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'JSR First Set' { 'JSR' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CPX  CPXAddressingMode
Is 'ϵ' Not Contained in 'CPX First Set'
			Compare 'ϵ' To 'CPX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CPX First Set' { 'CPX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  CPY  CPXAddressingMode
Is 'ϵ' Not Contained in 'CPY First Set'
			Compare 'ϵ' To 'CPY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'CPY First Set' { 'CPY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDX  LdxAddressingMode
Is 'ϵ' Not Contained in 'LDX First Set'
			Compare 'ϵ' To 'LDX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDX First Set' { 'LDX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  LDY  LdyAddressingMOde
Is 'ϵ' Not Contained in 'LDY First Set'
			Compare 'ϵ' To 'LDY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'LDY First Set' { 'LDY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STX  StxAddressingMode
Is 'ϵ' Not Contained in 'STX First Set'
			Compare 'ϵ' To 'STX'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STX First Set' { 'STX' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  STY  StyAddressingMode
Is 'ϵ' Not Contained in 'STY First Set'
			Compare 'ϵ' To 'STY'
TRUE
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'STY First Set' { 'STY' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

Operators	->  ϵ
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

----------------------
FIRST(DefineStorage)
DefineStorage	->  DS  AsmConstant
Is 'ϵ' Not Contained in 'DS First Set'
			Compare 'ϵ' To 'DS'
TRUE
'DefineStorage First Set' { 'DS' } U 'DS First Set' { 'DS' } => 'DefineStorage First Set' { 'DS' }
'DefineStorage First Set' { 'DS' }

----------------------
FIRST(DefineMemory)
DefineMemory	->  DB  AsmConstList
Is 'ϵ' Not Contained in 'DB First Set'
			Compare 'ϵ' To 'DB'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DB First Set' { 'DB' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

DefineMemory	->  DW  AsmConstList
Is 'ϵ' Not Contained in 'DW First Set'
			Compare 'ϵ' To 'DW'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DW First Set' { 'DW' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

DefineMemory	->  DL  AsmConstList
Is 'ϵ' Not Contained in 'DL First Set'
			Compare 'ϵ' To 'DL'
TRUE
'DefineMemory First Set' { 'DB','DW','DL' } U 'DL First Set' { 'DL' } => 'DefineMemory First Set' { 'DB','DW','DL' }
'DefineMemory First Set' { 'DB','DW','DL' }

----------------------
FIRST(Control)
Control	->  SECTIONTOKEN  STRING
Is 'ϵ' Not Contained in 'SECTIONTOKEN First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'SECTIONTOKEN First Set' { 'SECTIONTOKEN' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

Control	->  ORG  AsmConstant
Is 'ϵ' Not Contained in 'ORG First Set'
			Compare 'ϵ' To 'ORG'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'ORG First Set' { 'ORG' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

Control	->  PROCESSOR  ProcessorType
Is 'ϵ' Not Contained in 'PROCESSOR First Set'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } U 'PROCESSOR First Set' { 'PROCESSOR' } => 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }
'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

----------------------
FIRST(AluAdrModes)
AluAdrModes	->  AsmConstant  OptIndexReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'AluAdrModes First Set' { 'NUMBER','*','#','(' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'AluAdrModes First Set' { 'NUMBER','*','#','(' }
'AluAdrModes First Set' { 'NUMBER','*','#','(' }

AluAdrModes	->  AluAdrModes_1
Is 'ϵ' Not Contained in 'AluAdrModes_1 First Set'
			Compare 'ϵ' To '#'
			Compare 'ϵ' To '('
TRUE
'AluAdrModes First Set' { 'NUMBER','*','#','(' } U 'AluAdrModes_1 First Set' { '#','(' } => 'AluAdrModes First Set' { 'NUMBER','*','#','(' }
'AluAdrModes First Set' { 'NUMBER','*','#','(' }

----------------------
FIRST(AluAdrModes_1)
AluAdrModes_1	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'AluAdrModes_1 First Set' { '#','(' } U '# First Set' { '#' } => 'AluAdrModes_1 First Set' { '#','(' }
'AluAdrModes_1 First Set' { '#','(' }

AluAdrModes_1	->  (  Indirect
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'AluAdrModes_1 First Set' { '#','(' } U '( First Set' { '(' } => 'AluAdrModes_1 First Set' { '#','(' }
'AluAdrModes_1 First Set' { '#','(' }

----------------------
FIRST(Indirect)
Indirect	->  AsmConstant  Indirect_1  Indirect_1
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'Indirect First Set' { ')',',','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

Indirect	->  )  ,  YREG
Is 'ϵ' Not Contained in ') First Set'
			Compare 'ϵ' To ')'
TRUE
'Indirect First Set' { ')',',','NUMBER','*' } U ') First Set' { ')' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

Indirect	->  ,  XREG  )
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'Indirect First Set' { ')',',','NUMBER','*' } U ', First Set' { ',' } => 'Indirect First Set' { ')',',','NUMBER','*' }
'Indirect First Set' { ')',',','NUMBER','*' }

----------------------
FIRST(StaAddressingModes)
StaAddressingModes	->  AsmConstant  OptIndexReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StaAddressingModes First Set' { '(','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StaAddressingModes First Set' { '(','NUMBER','*' }
'StaAddressingModes First Set' { '(','NUMBER','*' }

StaAddressingModes	->  (  Indirect
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'StaAddressingModes First Set' { '(','NUMBER','*' } U '( First Set' { '(' } => 'StaAddressingModes First Set' { '(','NUMBER','*' }
'StaAddressingModes First Set' { '(','NUMBER','*' }

----------------------
FIRST(ShiftAddressingModes)
ShiftAddressingModes	->  AREG
Is 'ϵ' Not Contained in 'AREG First Set'
TRUE
'ShiftAddressingModes First Set' { 'NUMBER','*' } U 'AREG First Set' { } => 'ShiftAddressingModes First Set' { 'NUMBER','*' }
'ShiftAddressingModes First Set' { 'NUMBER','*' }

ShiftAddressingModes	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'ShiftAddressingModes First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'ShiftAddressingModes First Set' { 'NUMBER','*' }
'ShiftAddressingModes First Set' { 'NUMBER','*' }

----------------------
FIRST(RelAddressingMode)
RelAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'RelAddressingMode First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'RelAddressingMode First Set' { 'NUMBER','*' }
'RelAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(BitAddressModes)
BitAddressModes	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'BitAddressModes First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'BitAddressModes First Set' { 'NUMBER','*' }
'BitAddressModes First Set' { 'NUMBER','*' }

----------------------
FIRST(IncAddressingMOdes)
IncAddressingMOdes	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'IncAddressingMOdes First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'IncAddressingMOdes First Set' { 'NUMBER','*' }
'IncAddressingMOdes First Set' { 'NUMBER','*' }

----------------------
FIRST(JumpAddressingModes)
JumpAddressingModes	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'JumpAddressingModes First Set' { '(','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'JumpAddressingModes First Set' { '(','NUMBER','*' }
'JumpAddressingModes First Set' { '(','NUMBER','*' }

JumpAddressingModes	->  (  AsmConstant  )
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'JumpAddressingModes First Set' { '(','NUMBER','*' } U '( First Set' { '(' } => 'JumpAddressingModes First Set' { '(','NUMBER','*' }
'JumpAddressingModes First Set' { '(','NUMBER','*' }

----------------------
FIRST(CallAddressingMode)
CallAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'CallAddressingMode First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'CallAddressingMode First Set' { 'NUMBER','*' }
'CallAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(LdxAddressingMode)
LdxAddressingMode	->  AsmConstant  OptYReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'LdxAddressingMode First Set' { '#','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'LdxAddressingMode First Set' { '#','NUMBER','*' }
'LdxAddressingMode First Set' { '#','NUMBER','*' }

LdxAddressingMode	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'LdxAddressingMode First Set' { '#','NUMBER','*' } U '# First Set' { '#' } => 'LdxAddressingMode First Set' { '#','NUMBER','*' }
'LdxAddressingMode First Set' { '#','NUMBER','*' }

----------------------
FIRST(CPXAddressingMode)
CPXAddressingMode	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'CPXAddressingMode First Set' { '#','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'CPXAddressingMode First Set' { '#','NUMBER','*' }
'CPXAddressingMode First Set' { '#','NUMBER','*' }

CPXAddressingMode	->  #  AsmConstant
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'CPXAddressingMode First Set' { '#','NUMBER','*' } U '# First Set' { '#' } => 'CPXAddressingMode First Set' { '#','NUMBER','*' }
'CPXAddressingMode First Set' { '#','NUMBER','*' }

----------------------
FIRST(StxAddressingMode)
StxAddressingMode	->  AsmConstant  OptYReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StxAddressingMode First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StxAddressingMode First Set' { 'NUMBER','*' }
'StxAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(StyAddressingMode)
StyAddressingMode	->  AsmConstant  OptXReg
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'StyAddressingMode First Set' { 'NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'StyAddressingMode First Set' { 'NUMBER','*' }
'StyAddressingMode First Set' { 'NUMBER','*' }

----------------------
FIRST(OptIndexReg)
OptIndexReg	->  ,  OptIndexReg_1
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptIndexReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' }

OptIndexReg	->  ϵ
'OptIndexReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptIndexReg First Set' { ',','ϵ' }
'OptIndexReg First Set' { ',','ϵ' }

----------------------
FIRST(OptIndexReg_1)
OptIndexReg_1	->  XREG
Is 'ϵ' Not Contained in 'XREG First Set'
			Compare 'ϵ' To 'XREG'
TRUE
'OptIndexReg_1 First Set' { 'XREG','YREG' } U 'XREG First Set' { 'XREG' } => 'OptIndexReg_1 First Set' { 'XREG','YREG' }
'OptIndexReg_1 First Set' { 'XREG','YREG' }

OptIndexReg_1	->  YREG
Is 'ϵ' Not Contained in 'YREG First Set'
			Compare 'ϵ' To 'YREG'
TRUE
'OptIndexReg_1 First Set' { 'XREG','YREG' } U 'YREG First Set' { 'YREG' } => 'OptIndexReg_1 First Set' { 'XREG','YREG' }
'OptIndexReg_1 First Set' { 'XREG','YREG' }

----------------------
FIRST(OptXReg)
OptXReg	->  ,  XREG
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptXReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' }

OptXReg	->  ϵ
'OptXReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptXReg First Set' { ',','ϵ' }
'OptXReg First Set' { ',','ϵ' }

----------------------
FIRST(OptYReg)
OptYReg	->  ,  YREG
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'OptYReg First Set' { ',','ϵ' } U ', First Set' { ',' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' }

OptYReg	->  ϵ
'OptYReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'OptYReg First Set' { ',','ϵ' }
'OptYReg First Set' { ',','ϵ' }

----------------------
FIRST(AsmConstList)
AsmConstList	->  UpperLower  AsmConstList_1  AsmConstList_1
Is 'ϵ' Not Contained in 'UpperLower First Set'
			Compare 'ϵ' To '>'
			Compare 'ϵ' To '<'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'AsmConstList First Set' { ',','>','<','NUMBER','*' } U 'UpperLower First Set' { '>','<','NUMBER','*' } => 'AsmConstList First Set' { ',','>','<','NUMBER','*' }
'AsmConstList First Set' { ',','>','<','NUMBER','*' }

AsmConstList	->  ,  UpperLower  AsmConstList_1
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'AsmConstList First Set' { ',','>','<','NUMBER','*' } U ', First Set' { ',' } => 'AsmConstList First Set' { ',','>','<','NUMBER','*' }
'AsmConstList First Set' { ',','>','<','NUMBER','*' }

----------------------
FIRST(UpperLower)
UpperLower	->  >  UpperLower
Is 'ϵ' Not Contained in '> First Set'
			Compare 'ϵ' To '>'
TRUE
'UpperLower First Set' { '>','<','NUMBER','*' } U '> First Set' { '>' } => 'UpperLower First Set' { '>','<','NUMBER','*' }
'UpperLower First Set' { '>','<','NUMBER','*' }

UpperLower	->  <  UpperLower
Is 'ϵ' Not Contained in '< First Set'
			Compare 'ϵ' To '<'
TRUE
'UpperLower First Set' { '>','<','NUMBER','*' } U '< First Set' { '<' } => 'UpperLower First Set' { '>','<','NUMBER','*' }
'UpperLower First Set' { '>','<','NUMBER','*' }

UpperLower	->  AsmConstant
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'UpperLower First Set' { '>','<','NUMBER','*' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'UpperLower First Set' { '>','<','NUMBER','*' }
'UpperLower First Set' { '>','<','NUMBER','*' }

----------------------
FIRST(AsmConstant)
AsmConstant	->  IDENT
Is 'ϵ' Not Contained in 'IDENT First Set'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'IDENT First Set' { } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  LABLE
Is 'ϵ' Not Contained in 'LABLE First Set'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'LABLE First Set' { } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  NUMBER
Is 'ϵ' Not Contained in 'NUMBER First Set'
			Compare 'ϵ' To 'NUMBER'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U 'NUMBER First Set' { 'NUMBER' } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

AsmConstant	->  *
Is 'ϵ' Not Contained in '* First Set'
			Compare 'ϵ' To '*'
TRUE
'AsmConstant First Set' { 'NUMBER','*' } U '* First Set' { '*' } => 'AsmConstant First Set' { 'NUMBER','*' }
'AsmConstant First Set' { 'NUMBER','*' }

###### Iteration #5  DONE!
'LdyAddressingMOde First Set' { }

'AsmConstant First Set' { 'NUMBER','*' }

'Operators First Set' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }

'AluAdrModes_1 First Set' { '#','(' }

'ShiftAddressingModes First Set' { 'NUMBER','*' }

'StaAddressingModes First Set' { '(','NUMBER','*' }

'CPXAddressingMode First Set' { '#','NUMBER','*' }

'AluAdrModes First Set' { 'NUMBER','*','#','(' }

'Indirect_1 First Set' { }

'OptYReg First Set' { ',','ϵ' }

'RelAddressingMode First Set' { 'NUMBER','*' }

'IncAddressingMOdes First Set' { 'NUMBER','*' }

'CodeLineList_1 First Set' { ';','ϵ' }

'AsmConstList_1 First Set' { }

'IDENT First Set' { }

'CodeLineList First Set' { }

'AREG First Set' { }

'ProcessorType First Set' { }

'CodeLine_1 First Set' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }

'BitAddressModes First Set' { 'NUMBER','*' }

'UpperLower First Set' { '>','<','NUMBER','*' }

'Indirect First Set' { ')',',','NUMBER','*' }

'OptLable First Set' { }

'CallAddressingMode First Set' { 'NUMBER','*' }

'OptIndexReg First Set' { ',','ϵ' }

'DefineStorage First Set' { 'DS' }

'As65 First Set' { }

'Processortype First Set' { }

'LdyAddressingMode First Set' { }

'OptIndexReg_1 First Set' { 'XREG','YREG' }

'LdxAddressingMode First Set' { '#','NUMBER','*' }

'StxAddressingMode First Set' { 'NUMBER','*' }

'StyAddressingMode First Set' { 'NUMBER','*' }

'JumpAddressingModes First Set' { '(','NUMBER','*' }

'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' }

'CodeLine First Set' { }

'OptXReg First Set' { ',','ϵ' }

'AsmConstList First Set' { ',','>','<','NUMBER','*' }

'DefineMemory First Set' { 'DB','DW','DL' }

'LABLE First Set' { }


----- Calc Follow Sets------
######### Follow Set Itteration #1
------------Looking For As65 ---------------
------------Looking For CodeLineList ---------------
Rule 3:As65->  CodeLineList
'CodeLineList Follow Set' { } U 'As65 Follow Set' { '$' } => 'CodeLineList Follow Set' { '$' }
------------Looking For CodeLineList_1 ---------------
------------Looking For CodeLine ---------------
	CodeLineList->  CodeLine  CodeLineList_1
Is ϵ in Set CodeLineList_1 First Set
TRUE
Rule 2 3 4:CodeLineList->  CodeLine  CodeLineList_1
'CodeLineList_1 Follow Set' { } U 'CodeLineList Follow Set' { '$' } => 'CodeLineList_1 Follow Set' { '$' }
'CodeLine Follow Set' { ';' } U 'CodeLineList Follow Set' { '$' } => 'CodeLine Follow Set' { ';','$' }
	CodeLineList_1->  ;  CodeLine  CodeLineList_1
Is ϵ in Set CodeLineList_1 First Set
TRUE
Rule 2 3 4:CodeLineList_1->  ;  CodeLine  CodeLineList_1
'CodeLineList_1 Follow Set' { '$' } U 'CodeLineList_1 Follow Set' { '$' } => 'CodeLineList_1 Follow Set' { '$' }
'CodeLine Follow Set' { ';','$' } U 'CodeLineList_1 Follow Set' { '$' } => 'CodeLine Follow Set' { ';','$' }
------------Looking For CodeLine_1 ---------------
------------Looking For Operators ---------------
Rule 3:CodeLine_1->  Operators
'Operators Follow Set' { } U 'CodeLine_1 Follow Set' { } => 'Operators Follow Set' { }
------------Looking For DefineStorage ---------------
Rule 3:CodeLine_1->  DefineStorage
'DefineStorage Follow Set' { } U 'CodeLine_1 Follow Set' { } => 'DefineStorage Follow Set' { }
------------Looking For DefineMemory ---------------
Rule 3:CodeLine_1->  DefineMemory
'DefineMemory Follow Set' { } U 'CodeLine_1 Follow Set' { } => 'DefineMemory Follow Set' { }
------------Looking For Control ---------------
Rule 3:CodeLine_1->  Control
'Control Follow Set' { } U 'CodeLine_1 Follow Set' { } => 'Control Follow Set' { }
------------Looking For AluAdrModes ---------------
------------Looking For AluAdrModes_1 ---------------
Rule 3:AluAdrModes->  AluAdrModes_1
'AluAdrModes_1 Follow Set' { } U 'AluAdrModes Follow Set' { } => 'AluAdrModes_1 Follow Set' { }
------------Looking For Indirect ---------------
------------Looking For StaAddressingModes ---------------
------------Looking For ShiftAddressingModes ---------------
------------Looking For RelAddressingMode ---------------
------------Looking For BitAddressModes ---------------
------------Looking For IncAddressingMOdes ---------------
------------Looking For JumpAddressingModes ---------------
------------Looking For CallAddressingMode ---------------
------------Looking For LdxAddressingMode ---------------
------------Looking For CPXAddressingMode ---------------
------------Looking For StxAddressingMode ---------------
------------Looking For StyAddressingMode ---------------
------------Looking For OptIndexReg ---------------
------------Looking For OptIndexReg_1 ---------------
------------Looking For OptXReg ---------------
------------Looking For OptYReg ---------------
------------Looking For AsmConstList ---------------
------------Looking For UpperLower ---------------
	AsmConstList->  ,  UpperLower  AsmConstList_1
Is ϵ in Set AsmConstList_1 First Set
FALSE
Rule 2 3:AsmConstList->  ,  UpperLower  AsmConstList_1
'AsmConstList_1 Follow Set' { } U 'AsmConstList Follow Set' { } => 'AsmConstList_1 Follow Set' { }
------------Looking For AsmConstant ---------------
	AluAdrModes->  AsmConstant  OptIndexReg
Is ϵ in Set OptIndexReg First Set
TRUE
Rule 2 3 4:AluAdrModes->  AsmConstant  OptIndexReg
'OptIndexReg Follow Set' { } U 'AluAdrModes Follow Set' { } => 'OptIndexReg Follow Set' { }
'AsmConstant Follow Set' { ',' } U 'AluAdrModes Follow Set' { } => 'AsmConstant Follow Set' { ',' }
	StaAddressingModes->  AsmConstant  OptIndexReg
Is ϵ in Set OptIndexReg First Set
TRUE
Rule 2 3 4:StaAddressingModes->  AsmConstant  OptIndexReg
'OptIndexReg Follow Set' { } U 'StaAddressingModes Follow Set' { } => 'OptIndexReg Follow Set' { }
'AsmConstant Follow Set' { ',' } U 'StaAddressingModes Follow Set' { } => 'AsmConstant Follow Set' { ',' }
	ShiftAddressingModes->  AsmConstant  OptXReg
Is ϵ in Set OptXReg First Set
TRUE
Rule 2 3 4:ShiftAddressingModes->  AsmConstant  OptXReg
'OptXReg Follow Set' { } U 'ShiftAddressingModes Follow Set' { } => 'OptXReg Follow Set' { }
'AsmConstant Follow Set' { ',' } U 'ShiftAddressingModes Follow Set' { } => 'AsmConstant Follow Set' { ',' }
Rule 3:RelAddressingMode->  AsmConstant
'AsmConstant Follow Set' { ',' } U 'RelAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',' }
Rule 3:BitAddressModes->  AsmConstant
'AsmConstant Follow Set' { ',' } U 'BitAddressModes Follow Set' { } => 'AsmConstant Follow Set' { ',' }
	IncAddressingMOdes->  AsmConstant  OptXReg
Is ϵ in Set OptXReg First Set
TRUE
Rule 2 3 4:IncAddressingMOdes->  AsmConstant  OptXReg
'OptXReg Follow Set' { } U 'IncAddressingMOdes Follow Set' { } => 'OptXReg Follow Set' { }
'AsmConstant Follow Set' { ',' } U 'IncAddressingMOdes Follow Set' { } => 'AsmConstant Follow Set' { ',' }
Rule 3:JumpAddressingModes->  AsmConstant
'AsmConstant Follow Set' { ',' } U 'JumpAddressingModes Follow Set' { } => 'AsmConstant Follow Set' { ',' }
	JumpAddressingModes->  (  AsmConstant  )
Is ϵ in Set ) First Set
FALSE
Rule 2 3:JumpAddressingModes->  (  AsmConstant  )
') Follow Set' { } U 'JumpAddressingModes Follow Set' { } => ') Follow Set' { }
Rule 3:CallAddressingMode->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'CallAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	LdxAddressingMode->  AsmConstant  OptYReg
Is ϵ in Set OptYReg First Set
TRUE
Rule 2 3 4:LdxAddressingMode->  AsmConstant  OptYReg
'OptYReg Follow Set' { } U 'LdxAddressingMode Follow Set' { } => 'OptYReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'LdxAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
Rule 3:CPXAddressingMode->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'CPXAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	StxAddressingMode->  AsmConstant  OptYReg
Is ϵ in Set OptYReg First Set
TRUE
Rule 2 3 4:StxAddressingMode->  AsmConstant  OptYReg
'OptYReg Follow Set' { } U 'StxAddressingMode Follow Set' { } => 'OptYReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'StxAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	StyAddressingMode->  AsmConstant  OptXReg
Is ϵ in Set OptXReg First Set
TRUE
Rule 2 3 4:StyAddressingMode->  AsmConstant  OptXReg
'OptXReg Follow Set' { } U 'StyAddressingMode Follow Set' { } => 'OptXReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'StyAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
Rule 3:UpperLower->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'UpperLower Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
######### Follow Set Itteration #2
------------Looking For As65 ---------------
------------Looking For CodeLineList ---------------
Rule 3:As65->  CodeLineList
'CodeLineList Follow Set' { '$' } U 'As65 Follow Set' { '$' } => 'CodeLineList Follow Set' { '$' }
------------Looking For CodeLineList_1 ---------------
------------Looking For CodeLine ---------------
	CodeLineList->  CodeLine  CodeLineList_1
Is ϵ in Set CodeLineList_1 First Set
TRUE
Rule 2 3 4:CodeLineList->  CodeLine  CodeLineList_1
'CodeLineList_1 Follow Set' { '$' } U 'CodeLineList Follow Set' { '$' } => 'CodeLineList_1 Follow Set' { '$' }
'CodeLine Follow Set' { ';','$' } U 'CodeLineList Follow Set' { '$' } => 'CodeLine Follow Set' { ';','$' }
	CodeLineList_1->  ;  CodeLine  CodeLineList_1
Is ϵ in Set CodeLineList_1 First Set
TRUE
Rule 2 3 4:CodeLineList_1->  ;  CodeLine  CodeLineList_1
'CodeLineList_1 Follow Set' { '$' } U 'CodeLineList_1 Follow Set' { '$' } => 'CodeLineList_1 Follow Set' { '$' }
'CodeLine Follow Set' { ';','$' } U 'CodeLineList_1 Follow Set' { '$' } => 'CodeLine Follow Set' { ';','$' }
------------Looking For CodeLine_1 ---------------
------------Looking For Operators ---------------
Rule 3:CodeLine_1->  Operators
'Operators Follow Set' { } U 'CodeLine_1 Follow Set' { } => 'Operators Follow Set' { }
------------Looking For DefineStorage ---------------
Rule 3:CodeLine_1->  DefineStorage
'DefineStorage Follow Set' { } U 'CodeLine_1 Follow Set' { } => 'DefineStorage Follow Set' { }
------------Looking For DefineMemory ---------------
Rule 3:CodeLine_1->  DefineMemory
'DefineMemory Follow Set' { } U 'CodeLine_1 Follow Set' { } => 'DefineMemory Follow Set' { }
------------Looking For Control ---------------
Rule 3:CodeLine_1->  Control
'Control Follow Set' { } U 'CodeLine_1 Follow Set' { } => 'Control Follow Set' { }
------------Looking For AluAdrModes ---------------
------------Looking For AluAdrModes_1 ---------------
Rule 3:AluAdrModes->  AluAdrModes_1
'AluAdrModes_1 Follow Set' { } U 'AluAdrModes Follow Set' { } => 'AluAdrModes_1 Follow Set' { }
------------Looking For Indirect ---------------
------------Looking For StaAddressingModes ---------------
------------Looking For ShiftAddressingModes ---------------
------------Looking For RelAddressingMode ---------------
------------Looking For BitAddressModes ---------------
------------Looking For IncAddressingMOdes ---------------
------------Looking For JumpAddressingModes ---------------
------------Looking For CallAddressingMode ---------------
------------Looking For LdxAddressingMode ---------------
------------Looking For CPXAddressingMode ---------------
------------Looking For StxAddressingMode ---------------
------------Looking For StyAddressingMode ---------------
------------Looking For OptIndexReg ---------------
------------Looking For OptIndexReg_1 ---------------
------------Looking For OptXReg ---------------
------------Looking For OptYReg ---------------
------------Looking For AsmConstList ---------------
------------Looking For UpperLower ---------------
	AsmConstList->  ,  UpperLower  AsmConstList_1
Is ϵ in Set AsmConstList_1 First Set
FALSE
Rule 2 3:AsmConstList->  ,  UpperLower  AsmConstList_1
'AsmConstList_1 Follow Set' { } U 'AsmConstList Follow Set' { } => 'AsmConstList_1 Follow Set' { }
------------Looking For AsmConstant ---------------
	AluAdrModes->  AsmConstant  OptIndexReg
Is ϵ in Set OptIndexReg First Set
TRUE
Rule 2 3 4:AluAdrModes->  AsmConstant  OptIndexReg
'OptIndexReg Follow Set' { } U 'AluAdrModes Follow Set' { } => 'OptIndexReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'AluAdrModes Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	StaAddressingModes->  AsmConstant  OptIndexReg
Is ϵ in Set OptIndexReg First Set
TRUE
Rule 2 3 4:StaAddressingModes->  AsmConstant  OptIndexReg
'OptIndexReg Follow Set' { } U 'StaAddressingModes Follow Set' { } => 'OptIndexReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'StaAddressingModes Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	ShiftAddressingModes->  AsmConstant  OptXReg
Is ϵ in Set OptXReg First Set
TRUE
Rule 2 3 4:ShiftAddressingModes->  AsmConstant  OptXReg
'OptXReg Follow Set' { } U 'ShiftAddressingModes Follow Set' { } => 'OptXReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'ShiftAddressingModes Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
Rule 3:RelAddressingMode->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'RelAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
Rule 3:BitAddressModes->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'BitAddressModes Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	IncAddressingMOdes->  AsmConstant  OptXReg
Is ϵ in Set OptXReg First Set
TRUE
Rule 2 3 4:IncAddressingMOdes->  AsmConstant  OptXReg
'OptXReg Follow Set' { } U 'IncAddressingMOdes Follow Set' { } => 'OptXReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'IncAddressingMOdes Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
Rule 3:JumpAddressingModes->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'JumpAddressingModes Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	JumpAddressingModes->  (  AsmConstant  )
Is ϵ in Set ) First Set
FALSE
Rule 2 3:JumpAddressingModes->  (  AsmConstant  )
') Follow Set' { } U 'JumpAddressingModes Follow Set' { } => ') Follow Set' { }
Rule 3:CallAddressingMode->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'CallAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	LdxAddressingMode->  AsmConstant  OptYReg
Is ϵ in Set OptYReg First Set
TRUE
Rule 2 3 4:LdxAddressingMode->  AsmConstant  OptYReg
'OptYReg Follow Set' { } U 'LdxAddressingMode Follow Set' { } => 'OptYReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'LdxAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
Rule 3:CPXAddressingMode->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'CPXAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	StxAddressingMode->  AsmConstant  OptYReg
Is ϵ in Set OptYReg First Set
TRUE
Rule 2 3 4:StxAddressingMode->  AsmConstant  OptYReg
'OptYReg Follow Set' { } U 'StxAddressingMode Follow Set' { } => 'OptYReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'StxAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
	StyAddressingMode->  AsmConstant  OptXReg
Is ϵ in Set OptXReg First Set
TRUE
Rule 2 3 4:StyAddressingMode->  AsmConstant  OptXReg
'OptXReg Follow Set' { } U 'StyAddressingMode Follow Set' { } => 'OptXReg Follow Set' { }
'AsmConstant Follow Set' { ',',')' } U 'StyAddressingMode Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
Rule 3:UpperLower->  AsmConstant
'AsmConstant Follow Set' { ',',')' } U 'UpperLower Follow Set' { } => 'AsmConstant Follow Set' { ',',')' }
------------ Follow Sets ---------------
'LdyAddressingMOde Follow Set' { }

'AsmConstant Follow Set' { ',',')' }

'Operators Follow Set' { }

'AluAdrModes_1 Follow Set' { }

'ShiftAddressingModes Follow Set' { }

'StaAddressingModes Follow Set' { }

'CPXAddressingMode Follow Set' { }

'AluAdrModes Follow Set' { }

'Indirect_1 Follow Set' { }

'OptYReg Follow Set' { }

'RelAddressingMode Follow Set' { }

'IncAddressingMOdes Follow Set' { }

'CodeLineList_1 Follow Set' { '$' }

'AsmConstList_1 Follow Set' { }

'IDENT Follow Set' { }

'CodeLineList Follow Set' { '$' }

'AREG Follow Set' { }

'ProcessorType Follow Set' { }

'CodeLine_1 Follow Set' { }

'BitAddressModes Follow Set' { }

'UpperLower Follow Set' { }

'Indirect Follow Set' { }

'OptLable Follow Set' { }

'CallAddressingMode Follow Set' { }

'OptIndexReg Follow Set' { }

'DefineStorage Follow Set' { }

'As65 Follow Set' { '$' }

'Processortype Follow Set' { }

'LdyAddressingMode Follow Set' { }

'OptIndexReg_1 Follow Set' { }

'LdxAddressingMode Follow Set' { }

'StxAddressingMode Follow Set' { }

'StyAddressingMode Follow Set' { }

'JumpAddressingModes Follow Set' { }

'Control Follow Set' { }

'CodeLine Follow Set' { ';','$' }

'OptXReg Follow Set' { }

'AsmConstList Follow Set' { }

'DefineMemory Follow Set' { }

'LABLE Follow Set' { }


---------------- Create Parse Table --------------
------- As65 --------
################> Rule 1 <#################
--------  As65->  CodeLineList--------
Is 'ϵ' Not Contained in 'CodeLineList First Set'
TRUE
'TempFirstY' { } U 'CodeLineList First Set' { } => 'TempFirstY' { }
'As65 Follow Set' { '$' }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  As65->  CodeLineList--------
Is 'ϵ' Not Contained in 'CodeLineList First Set'
TRUE
'TempFirstY' { } U 'CodeLineList First Set' { } => 'TempFirstY' { }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { }
------- CodeLineList --------
################> Rule 1 <#################
--------  CodeLineList->  CodeLine  CodeLineList_1--------
Is 'ϵ' Not Contained in 'CodeLine First Set'
TRUE
'TempFirstY' { } U 'CodeLine First Set' { } => 'TempFirstY' { }
'CodeLineList Follow Set' { '$' }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  CodeLineList->  CodeLine  CodeLineList_1--------
Is 'ϵ' Not Contained in 'CodeLine First Set'
TRUE
'TempFirstY' { } U 'CodeLine First Set' { } => 'TempFirstY' { }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { }
------- CodeLineList_1 --------
################> Rule 1 <#################
--------  CodeLineList_1->  ;  CodeLine  CodeLineList_1--------
Is 'ϵ' Not Contained in '; First Set'
			Compare 'ϵ' To ';'
TRUE
'TempFirstY' { } U '; First Set' { ';' } => 'TempFirstY' { ';' }
******* ; ******
^^^^^^^ ; ^^^^^^^
--------  CodeLineList_1->  ϵ--------
'TempFirstY' { } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
'TempFirstY' { 'ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
'CodeLineList_1 Follow Set' { '$' }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  CodeLineList_1->  ;  CodeLine  CodeLineList_1--------
Is 'ϵ' Not Contained in '; First Set'
			Compare 'ϵ' To ';'
TRUE
'TempFirstY' { } U '; First Set' { ';' } => 'TempFirstY' { ';' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { ';' }
 ';'
--------  CodeLineList_1->  ϵ--------
'TempFirstY' { ';' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { ';','ϵ' }
'TempFirstY' { ';','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { ';','ϵ' }
Is ϵ in Set TempFirstY
TRUE
 '$'
Is $ in Set CodeLineList_1 Follow Set
TRUE
'TempFirstY' { ';','ϵ' }
 ';'
 'ϵ'
------- CodeLine --------
################> Rule 1 <#################
--------  CodeLine->  OptLable  CodeLine_1--------
Is 'ϵ' Not Contained in 'OptLable First Set'
TRUE
'TempFirstY' { } U 'OptLable First Set' { } => 'TempFirstY' { }
'CodeLine Follow Set' { ';','$' }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  CodeLine->  OptLable  CodeLine_1--------
Is 'ϵ' Not Contained in 'OptLable First Set'
TRUE
'TempFirstY' { } U 'OptLable First Set' { } => 'TempFirstY' { }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { }
------- CodeLine_1 --------
################> Rule 1 <#################
--------  CodeLine_1->  Operators--------
Is 'ϵ' Not Contained in 'Operators First Set'
			Compare 'ϵ' To 'ADC'
			Compare 'ϵ' To 'AND'
			Compare 'ϵ' To 'EOR'
			Compare 'ϵ' To 'ORA'
			Compare 'ϵ' To 'CMP'
			Compare 'ϵ' To 'SBC'
			Compare 'ϵ' To 'LDA'
			Compare 'ϵ' To 'STA'
			Compare 'ϵ' To 'ASL'
			Compare 'ϵ' To 'ROL'
			Compare 'ϵ' To 'LSR'
			Compare 'ϵ' To 'ROR'
			Compare 'ϵ' To 'BCC'
			Compare 'ϵ' To 'BCS'
			Compare 'ϵ' To 'BEQ'
			Compare 'ϵ' To 'BMI'
			Compare 'ϵ' To 'BNE'
			Compare 'ϵ' To 'BPL'
			Compare 'ϵ' To 'BVC'
			Compare 'ϵ' To 'BVS'
			Compare 'ϵ' To 'BIT'
			Compare 'ϵ' To 'BRK'
			Compare 'ϵ' To 'CLC'
			Compare 'ϵ' To 'CLD'
			Compare 'ϵ' To 'CLI'
			Compare 'ϵ' To 'CLV'
			Compare 'ϵ' To 'DEX'
			Compare 'ϵ' To 'DEY'
			Compare 'ϵ' To 'INX'
			Compare 'ϵ' To 'INY'
			Compare 'ϵ' To 'NOP'
			Compare 'ϵ' To 'PHA'
			Compare 'ϵ' To 'PLA'
			Compare 'ϵ' To 'PHP'
			Compare 'ϵ' To 'PLP'
			Compare 'ϵ' To 'RTI'
			Compare 'ϵ' To 'RTS'
			Compare 'ϵ' To 'SEC'
			Compare 'ϵ' To 'SED'
			Compare 'ϵ' To 'SEI'
			Compare 'ϵ' To 'TAX'
			Compare 'ϵ' To 'TAY'
			Compare 'ϵ' To 'TXA'
			Compare 'ϵ' To 'TYA'
			Compare 'ϵ' To 'TXS'
			Compare 'ϵ' To 'TSX'
			Compare 'ϵ' To 'INC'
			Compare 'ϵ' To 'DEC'
			Compare 'ϵ' To 'JMP'
			Compare 'ϵ' To 'JSR'
			Compare 'ϵ' To 'CPX'
			Compare 'ϵ' To 'CPY'
			Compare 'ϵ' To 'LDX'
			Compare 'ϵ' To 'LDY'
			Compare 'ϵ' To 'STX'
			Compare 'ϵ' To 'STY'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set Operators First Set
TRUE
End of Y1Y2...Yk Chain
'TempFirstY' { } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
--------  CodeLine_1->  DefineStorage--------
Is 'ϵ' Not Contained in 'DefineStorage First Set'
			Compare 'ϵ' To 'DS'
TRUE
'TempFirstY' { } U 'DefineStorage First Set' { 'DS' } => 'TempFirstY' { 'DS' }
******* DS ******
^^^^^^^ DS ^^^^^^^
--------  CodeLine_1->  DefineMemory--------
Is 'ϵ' Not Contained in 'DefineMemory First Set'
			Compare 'ϵ' To 'DB'
			Compare 'ϵ' To 'DW'
			Compare 'ϵ' To 'DL'
TRUE
'TempFirstY' { } U 'DefineMemory First Set' { 'DB','DW','DL' } => 'TempFirstY' { 'DB','DW','DL' }
******* DB ******
^^^^^^^ DB ^^^^^^^
******* DW ******
^^^^^^^ DW ^^^^^^^
******* DL ******
^^^^^^^ DL ^^^^^^^
--------  CodeLine_1->  Control--------
Is 'ϵ' Not Contained in 'Control First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
			Compare 'ϵ' To 'ORG'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'TempFirstY' { } U 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } => 'TempFirstY' { 'SECTIONTOKEN','ORG','PROCESSOR' }
******* SECTIONTOKEN ******
^^^^^^^ SECTIONTOKEN ^^^^^^^
******* ORG ******
^^^^^^^ ORG ^^^^^^^
******* PROCESSOR ******
^^^^^^^ PROCESSOR ^^^^^^^
'CodeLine_1 Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  CodeLine_1->  Operators--------
Is 'ϵ' Not Contained in 'Operators First Set'
			Compare 'ϵ' To 'ADC'
			Compare 'ϵ' To 'AND'
			Compare 'ϵ' To 'EOR'
			Compare 'ϵ' To 'ORA'
			Compare 'ϵ' To 'CMP'
			Compare 'ϵ' To 'SBC'
			Compare 'ϵ' To 'LDA'
			Compare 'ϵ' To 'STA'
			Compare 'ϵ' To 'ASL'
			Compare 'ϵ' To 'ROL'
			Compare 'ϵ' To 'LSR'
			Compare 'ϵ' To 'ROR'
			Compare 'ϵ' To 'BCC'
			Compare 'ϵ' To 'BCS'
			Compare 'ϵ' To 'BEQ'
			Compare 'ϵ' To 'BMI'
			Compare 'ϵ' To 'BNE'
			Compare 'ϵ' To 'BPL'
			Compare 'ϵ' To 'BVC'
			Compare 'ϵ' To 'BVS'
			Compare 'ϵ' To 'BIT'
			Compare 'ϵ' To 'BRK'
			Compare 'ϵ' To 'CLC'
			Compare 'ϵ' To 'CLD'
			Compare 'ϵ' To 'CLI'
			Compare 'ϵ' To 'CLV'
			Compare 'ϵ' To 'DEX'
			Compare 'ϵ' To 'DEY'
			Compare 'ϵ' To 'INX'
			Compare 'ϵ' To 'INY'
			Compare 'ϵ' To 'NOP'
			Compare 'ϵ' To 'PHA'
			Compare 'ϵ' To 'PLA'
			Compare 'ϵ' To 'PHP'
			Compare 'ϵ' To 'PLP'
			Compare 'ϵ' To 'RTI'
			Compare 'ϵ' To 'RTS'
			Compare 'ϵ' To 'SEC'
			Compare 'ϵ' To 'SED'
			Compare 'ϵ' To 'SEI'
			Compare 'ϵ' To 'TAX'
			Compare 'ϵ' To 'TAY'
			Compare 'ϵ' To 'TXA'
			Compare 'ϵ' To 'TYA'
			Compare 'ϵ' To 'TXS'
			Compare 'ϵ' To 'TSX'
			Compare 'ϵ' To 'INC'
			Compare 'ϵ' To 'DEC'
			Compare 'ϵ' To 'JMP'
			Compare 'ϵ' To 'JSR'
			Compare 'ϵ' To 'CPX'
			Compare 'ϵ' To 'CPY'
			Compare 'ϵ' To 'LDX'
			Compare 'ϵ' To 'LDY'
			Compare 'ϵ' To 'STX'
			Compare 'ϵ' To 'STY'
			Compare 'ϵ' To 'ϵ'
FALSE
Is ϵ in Set Operators First Set
TRUE
End of Y1Y2...Yk Chain
'TempFirstY' { } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
Is ϵ in Set TempFirstY
TRUE
Is $ in Set CodeLine_1 Follow Set
FALSE
'TempFirstY' { 'ϵ' }
 'ϵ'
--------  CodeLine_1->  DefineStorage--------
Is 'ϵ' Not Contained in 'DefineStorage First Set'
			Compare 'ϵ' To 'DS'
TRUE
'TempFirstY' { 'ϵ' } U 'DefineStorage First Set' { 'DS' } => 'TempFirstY' { 'ϵ','DS' }
Is ϵ in Set TempFirstY
TRUE
Is $ in Set CodeLine_1 Follow Set
FALSE
'TempFirstY' { 'ϵ','DS' }
 'ϵ'
 'DS'
--------  CodeLine_1->  DefineMemory--------
Is 'ϵ' Not Contained in 'DefineMemory First Set'
			Compare 'ϵ' To 'DB'
			Compare 'ϵ' To 'DW'
			Compare 'ϵ' To 'DL'
TRUE
'TempFirstY' { 'ϵ','DS' } U 'DefineMemory First Set' { 'DB','DW','DL' } => 'TempFirstY' { 'ϵ','DS','DB','DW','DL' }
Is ϵ in Set TempFirstY
TRUE
Is $ in Set CodeLine_1 Follow Set
FALSE
'TempFirstY' { 'ϵ','DS','DB','DW','DL' }
 'ϵ'
 'DS'
 'DB'
 'DW'
 'DL'
--------  CodeLine_1->  Control--------
Is 'ϵ' Not Contained in 'Control First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
			Compare 'ϵ' To 'ORG'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'TempFirstY' { 'ϵ','DS','DB','DW','DL' } U 'Control First Set' { 'SECTIONTOKEN','ORG','PROCESSOR' } => 'TempFirstY' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
Is ϵ in Set TempFirstY
TRUE
Is $ in Set CodeLine_1 Follow Set
FALSE
'TempFirstY' { 'ϵ','DS','DB','DW','DL','SECTIONTOKEN','ORG','PROCESSOR' }
 'ϵ'
 'DS'
 'DB'
 'DW'
 'DL'
 'SECTIONTOKEN'
 'ORG'
 'PROCESSOR'
------- Operators --------
################> Rule 1 <#################
--------  Operators->  ADC  AluAdrModes--------
Is 'ϵ' Not Contained in 'ADC First Set'
			Compare 'ϵ' To 'ADC'
TRUE
'TempFirstY' { } U 'ADC First Set' { 'ADC' } => 'TempFirstY' { 'ADC' }
******* ADC ******
^^^^^^^ ADC ^^^^^^^
--------  Operators->  AND  AluAdrModes--------
Is 'ϵ' Not Contained in 'AND First Set'
			Compare 'ϵ' To 'AND'
TRUE
'TempFirstY' { } U 'AND First Set' { 'AND' } => 'TempFirstY' { 'AND' }
******* AND ******
^^^^^^^ AND ^^^^^^^
--------  Operators->  EOR  AluAdrModes--------
Is 'ϵ' Not Contained in 'EOR First Set'
			Compare 'ϵ' To 'EOR'
TRUE
'TempFirstY' { } U 'EOR First Set' { 'EOR' } => 'TempFirstY' { 'EOR' }
******* EOR ******
^^^^^^^ EOR ^^^^^^^
--------  Operators->  ORA  AluAdrModes--------
Is 'ϵ' Not Contained in 'ORA First Set'
			Compare 'ϵ' To 'ORA'
TRUE
'TempFirstY' { } U 'ORA First Set' { 'ORA' } => 'TempFirstY' { 'ORA' }
******* ORA ******
^^^^^^^ ORA ^^^^^^^
--------  Operators->  CMP  AluAdrModes--------
Is 'ϵ' Not Contained in 'CMP First Set'
			Compare 'ϵ' To 'CMP'
TRUE
'TempFirstY' { } U 'CMP First Set' { 'CMP' } => 'TempFirstY' { 'CMP' }
******* CMP ******
^^^^^^^ CMP ^^^^^^^
--------  Operators->  SBC  AluAdrModes--------
Is 'ϵ' Not Contained in 'SBC First Set'
			Compare 'ϵ' To 'SBC'
TRUE
'TempFirstY' { } U 'SBC First Set' { 'SBC' } => 'TempFirstY' { 'SBC' }
******* SBC ******
^^^^^^^ SBC ^^^^^^^
--------  Operators->  LDA  AluAdrModes--------
Is 'ϵ' Not Contained in 'LDA First Set'
			Compare 'ϵ' To 'LDA'
TRUE
'TempFirstY' { } U 'LDA First Set' { 'LDA' } => 'TempFirstY' { 'LDA' }
******* LDA ******
^^^^^^^ LDA ^^^^^^^
--------  Operators->  STA  StaAddressingModes--------
Is 'ϵ' Not Contained in 'STA First Set'
			Compare 'ϵ' To 'STA'
TRUE
'TempFirstY' { } U 'STA First Set' { 'STA' } => 'TempFirstY' { 'STA' }
******* STA ******
^^^^^^^ STA ^^^^^^^
--------  Operators->  ASL  ShiftAddressingModes--------
Is 'ϵ' Not Contained in 'ASL First Set'
			Compare 'ϵ' To 'ASL'
TRUE
'TempFirstY' { } U 'ASL First Set' { 'ASL' } => 'TempFirstY' { 'ASL' }
******* ASL ******
^^^^^^^ ASL ^^^^^^^
--------  Operators->  ROL  ShiftAddressingModes--------
Is 'ϵ' Not Contained in 'ROL First Set'
			Compare 'ϵ' To 'ROL'
TRUE
'TempFirstY' { } U 'ROL First Set' { 'ROL' } => 'TempFirstY' { 'ROL' }
******* ROL ******
^^^^^^^ ROL ^^^^^^^
--------  Operators->  LSR  ShiftAddressingModes--------
Is 'ϵ' Not Contained in 'LSR First Set'
			Compare 'ϵ' To 'LSR'
TRUE
'TempFirstY' { } U 'LSR First Set' { 'LSR' } => 'TempFirstY' { 'LSR' }
******* LSR ******
^^^^^^^ LSR ^^^^^^^
--------  Operators->  ROR  ShiftAddressingModes--------
Is 'ϵ' Not Contained in 'ROR First Set'
			Compare 'ϵ' To 'ROR'
TRUE
'TempFirstY' { } U 'ROR First Set' { 'ROR' } => 'TempFirstY' { 'ROR' }
******* ROR ******
^^^^^^^ ROR ^^^^^^^
--------  Operators->  BCC  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BCC First Set'
			Compare 'ϵ' To 'BCC'
TRUE
'TempFirstY' { } U 'BCC First Set' { 'BCC' } => 'TempFirstY' { 'BCC' }
******* BCC ******
^^^^^^^ BCC ^^^^^^^
--------  Operators->  BCS  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BCS First Set'
			Compare 'ϵ' To 'BCS'
TRUE
'TempFirstY' { } U 'BCS First Set' { 'BCS' } => 'TempFirstY' { 'BCS' }
******* BCS ******
^^^^^^^ BCS ^^^^^^^
--------  Operators->  BEQ  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BEQ First Set'
			Compare 'ϵ' To 'BEQ'
TRUE
'TempFirstY' { } U 'BEQ First Set' { 'BEQ' } => 'TempFirstY' { 'BEQ' }
******* BEQ ******
^^^^^^^ BEQ ^^^^^^^
--------  Operators->  BMI  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BMI First Set'
			Compare 'ϵ' To 'BMI'
TRUE
'TempFirstY' { } U 'BMI First Set' { 'BMI' } => 'TempFirstY' { 'BMI' }
******* BMI ******
^^^^^^^ BMI ^^^^^^^
--------  Operators->  BNE  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BNE First Set'
			Compare 'ϵ' To 'BNE'
TRUE
'TempFirstY' { } U 'BNE First Set' { 'BNE' } => 'TempFirstY' { 'BNE' }
******* BNE ******
^^^^^^^ BNE ^^^^^^^
--------  Operators->  BPL  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BPL First Set'
			Compare 'ϵ' To 'BPL'
TRUE
'TempFirstY' { } U 'BPL First Set' { 'BPL' } => 'TempFirstY' { 'BPL' }
******* BPL ******
^^^^^^^ BPL ^^^^^^^
--------  Operators->  BVC  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BVC First Set'
			Compare 'ϵ' To 'BVC'
TRUE
'TempFirstY' { } U 'BVC First Set' { 'BVC' } => 'TempFirstY' { 'BVC' }
******* BVC ******
^^^^^^^ BVC ^^^^^^^
--------  Operators->  BVS  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BVS First Set'
			Compare 'ϵ' To 'BVS'
TRUE
'TempFirstY' { } U 'BVS First Set' { 'BVS' } => 'TempFirstY' { 'BVS' }
******* BVS ******
^^^^^^^ BVS ^^^^^^^
--------  Operators->  BIT  BitAddressModes--------
Is 'ϵ' Not Contained in 'BIT First Set'
			Compare 'ϵ' To 'BIT'
TRUE
'TempFirstY' { } U 'BIT First Set' { 'BIT' } => 'TempFirstY' { 'BIT' }
******* BIT ******
^^^^^^^ BIT ^^^^^^^
--------  Operators->  BRK--------
Is 'ϵ' Not Contained in 'BRK First Set'
			Compare 'ϵ' To 'BRK'
TRUE
'TempFirstY' { } U 'BRK First Set' { 'BRK' } => 'TempFirstY' { 'BRK' }
******* BRK ******
^^^^^^^ BRK ^^^^^^^
--------  Operators->  CLC--------
Is 'ϵ' Not Contained in 'CLC First Set'
			Compare 'ϵ' To 'CLC'
TRUE
'TempFirstY' { } U 'CLC First Set' { 'CLC' } => 'TempFirstY' { 'CLC' }
******* CLC ******
^^^^^^^ CLC ^^^^^^^
--------  Operators->  CLD--------
Is 'ϵ' Not Contained in 'CLD First Set'
			Compare 'ϵ' To 'CLD'
TRUE
'TempFirstY' { } U 'CLD First Set' { 'CLD' } => 'TempFirstY' { 'CLD' }
******* CLD ******
^^^^^^^ CLD ^^^^^^^
--------  Operators->  CLI--------
Is 'ϵ' Not Contained in 'CLI First Set'
			Compare 'ϵ' To 'CLI'
TRUE
'TempFirstY' { } U 'CLI First Set' { 'CLI' } => 'TempFirstY' { 'CLI' }
******* CLI ******
^^^^^^^ CLI ^^^^^^^
--------  Operators->  CLV--------
Is 'ϵ' Not Contained in 'CLV First Set'
			Compare 'ϵ' To 'CLV'
TRUE
'TempFirstY' { } U 'CLV First Set' { 'CLV' } => 'TempFirstY' { 'CLV' }
******* CLV ******
^^^^^^^ CLV ^^^^^^^
--------  Operators->  DEX--------
Is 'ϵ' Not Contained in 'DEX First Set'
			Compare 'ϵ' To 'DEX'
TRUE
'TempFirstY' { } U 'DEX First Set' { 'DEX' } => 'TempFirstY' { 'DEX' }
******* DEX ******
^^^^^^^ DEX ^^^^^^^
--------  Operators->  DEY--------
Is 'ϵ' Not Contained in 'DEY First Set'
			Compare 'ϵ' To 'DEY'
TRUE
'TempFirstY' { } U 'DEY First Set' { 'DEY' } => 'TempFirstY' { 'DEY' }
******* DEY ******
^^^^^^^ DEY ^^^^^^^
--------  Operators->  INX--------
Is 'ϵ' Not Contained in 'INX First Set'
			Compare 'ϵ' To 'INX'
TRUE
'TempFirstY' { } U 'INX First Set' { 'INX' } => 'TempFirstY' { 'INX' }
******* INX ******
^^^^^^^ INX ^^^^^^^
--------  Operators->  INY--------
Is 'ϵ' Not Contained in 'INY First Set'
			Compare 'ϵ' To 'INY'
TRUE
'TempFirstY' { } U 'INY First Set' { 'INY' } => 'TempFirstY' { 'INY' }
******* INY ******
^^^^^^^ INY ^^^^^^^
--------  Operators->  NOP--------
Is 'ϵ' Not Contained in 'NOP First Set'
			Compare 'ϵ' To 'NOP'
TRUE
'TempFirstY' { } U 'NOP First Set' { 'NOP' } => 'TempFirstY' { 'NOP' }
******* NOP ******
^^^^^^^ NOP ^^^^^^^
--------  Operators->  PHA--------
Is 'ϵ' Not Contained in 'PHA First Set'
			Compare 'ϵ' To 'PHA'
TRUE
'TempFirstY' { } U 'PHA First Set' { 'PHA' } => 'TempFirstY' { 'PHA' }
******* PHA ******
^^^^^^^ PHA ^^^^^^^
--------  Operators->  PLA--------
Is 'ϵ' Not Contained in 'PLA First Set'
			Compare 'ϵ' To 'PLA'
TRUE
'TempFirstY' { } U 'PLA First Set' { 'PLA' } => 'TempFirstY' { 'PLA' }
******* PLA ******
^^^^^^^ PLA ^^^^^^^
--------  Operators->  PHP--------
Is 'ϵ' Not Contained in 'PHP First Set'
			Compare 'ϵ' To 'PHP'
TRUE
'TempFirstY' { } U 'PHP First Set' { 'PHP' } => 'TempFirstY' { 'PHP' }
******* PHP ******
^^^^^^^ PHP ^^^^^^^
--------  Operators->  PLP--------
Is 'ϵ' Not Contained in 'PLP First Set'
			Compare 'ϵ' To 'PLP'
TRUE
'TempFirstY' { } U 'PLP First Set' { 'PLP' } => 'TempFirstY' { 'PLP' }
******* PLP ******
^^^^^^^ PLP ^^^^^^^
--------  Operators->  RTI--------
Is 'ϵ' Not Contained in 'RTI First Set'
			Compare 'ϵ' To 'RTI'
TRUE
'TempFirstY' { } U 'RTI First Set' { 'RTI' } => 'TempFirstY' { 'RTI' }
******* RTI ******
^^^^^^^ RTI ^^^^^^^
--------  Operators->  RTS--------
Is 'ϵ' Not Contained in 'RTS First Set'
			Compare 'ϵ' To 'RTS'
TRUE
'TempFirstY' { } U 'RTS First Set' { 'RTS' } => 'TempFirstY' { 'RTS' }
******* RTS ******
^^^^^^^ RTS ^^^^^^^
--------  Operators->  SEC--------
Is 'ϵ' Not Contained in 'SEC First Set'
			Compare 'ϵ' To 'SEC'
TRUE
'TempFirstY' { } U 'SEC First Set' { 'SEC' } => 'TempFirstY' { 'SEC' }
******* SEC ******
^^^^^^^ SEC ^^^^^^^
--------  Operators->  SED--------
Is 'ϵ' Not Contained in 'SED First Set'
			Compare 'ϵ' To 'SED'
TRUE
'TempFirstY' { } U 'SED First Set' { 'SED' } => 'TempFirstY' { 'SED' }
******* SED ******
^^^^^^^ SED ^^^^^^^
--------  Operators->  SEI--------
Is 'ϵ' Not Contained in 'SEI First Set'
			Compare 'ϵ' To 'SEI'
TRUE
'TempFirstY' { } U 'SEI First Set' { 'SEI' } => 'TempFirstY' { 'SEI' }
******* SEI ******
^^^^^^^ SEI ^^^^^^^
--------  Operators->  TAX--------
Is 'ϵ' Not Contained in 'TAX First Set'
			Compare 'ϵ' To 'TAX'
TRUE
'TempFirstY' { } U 'TAX First Set' { 'TAX' } => 'TempFirstY' { 'TAX' }
******* TAX ******
^^^^^^^ TAX ^^^^^^^
--------  Operators->  TAY--------
Is 'ϵ' Not Contained in 'TAY First Set'
			Compare 'ϵ' To 'TAY'
TRUE
'TempFirstY' { } U 'TAY First Set' { 'TAY' } => 'TempFirstY' { 'TAY' }
******* TAY ******
^^^^^^^ TAY ^^^^^^^
--------  Operators->  TXA--------
Is 'ϵ' Not Contained in 'TXA First Set'
			Compare 'ϵ' To 'TXA'
TRUE
'TempFirstY' { } U 'TXA First Set' { 'TXA' } => 'TempFirstY' { 'TXA' }
******* TXA ******
^^^^^^^ TXA ^^^^^^^
--------  Operators->  TYA--------
Is 'ϵ' Not Contained in 'TYA First Set'
			Compare 'ϵ' To 'TYA'
TRUE
'TempFirstY' { } U 'TYA First Set' { 'TYA' } => 'TempFirstY' { 'TYA' }
******* TYA ******
^^^^^^^ TYA ^^^^^^^
--------  Operators->  TXS--------
Is 'ϵ' Not Contained in 'TXS First Set'
			Compare 'ϵ' To 'TXS'
TRUE
'TempFirstY' { } U 'TXS First Set' { 'TXS' } => 'TempFirstY' { 'TXS' }
******* TXS ******
^^^^^^^ TXS ^^^^^^^
--------  Operators->  TSX--------
Is 'ϵ' Not Contained in 'TSX First Set'
			Compare 'ϵ' To 'TSX'
TRUE
'TempFirstY' { } U 'TSX First Set' { 'TSX' } => 'TempFirstY' { 'TSX' }
******* TSX ******
^^^^^^^ TSX ^^^^^^^
--------  Operators->  INC  IncAddressingMOdes--------
Is 'ϵ' Not Contained in 'INC First Set'
			Compare 'ϵ' To 'INC'
TRUE
'TempFirstY' { } U 'INC First Set' { 'INC' } => 'TempFirstY' { 'INC' }
******* INC ******
^^^^^^^ INC ^^^^^^^
--------  Operators->  DEC  IncAddressingMOdes--------
Is 'ϵ' Not Contained in 'DEC First Set'
			Compare 'ϵ' To 'DEC'
TRUE
'TempFirstY' { } U 'DEC First Set' { 'DEC' } => 'TempFirstY' { 'DEC' }
******* DEC ******
^^^^^^^ DEC ^^^^^^^
--------  Operators->  JMP  JumpAddressingModes--------
Is 'ϵ' Not Contained in 'JMP First Set'
			Compare 'ϵ' To 'JMP'
TRUE
'TempFirstY' { } U 'JMP First Set' { 'JMP' } => 'TempFirstY' { 'JMP' }
******* JMP ******
^^^^^^^ JMP ^^^^^^^
--------  Operators->  JSR  CallAddressingMode--------
Is 'ϵ' Not Contained in 'JSR First Set'
			Compare 'ϵ' To 'JSR'
TRUE
'TempFirstY' { } U 'JSR First Set' { 'JSR' } => 'TempFirstY' { 'JSR' }
******* JSR ******
^^^^^^^ JSR ^^^^^^^
--------  Operators->  CPX  CPXAddressingMode--------
Is 'ϵ' Not Contained in 'CPX First Set'
			Compare 'ϵ' To 'CPX'
TRUE
'TempFirstY' { } U 'CPX First Set' { 'CPX' } => 'TempFirstY' { 'CPX' }
******* CPX ******
^^^^^^^ CPX ^^^^^^^
--------  Operators->  CPY  CPXAddressingMode--------
Is 'ϵ' Not Contained in 'CPY First Set'
			Compare 'ϵ' To 'CPY'
TRUE
'TempFirstY' { } U 'CPY First Set' { 'CPY' } => 'TempFirstY' { 'CPY' }
******* CPY ******
^^^^^^^ CPY ^^^^^^^
--------  Operators->  LDX  LdxAddressingMode--------
Is 'ϵ' Not Contained in 'LDX First Set'
			Compare 'ϵ' To 'LDX'
TRUE
'TempFirstY' { } U 'LDX First Set' { 'LDX' } => 'TempFirstY' { 'LDX' }
******* LDX ******
^^^^^^^ LDX ^^^^^^^
--------  Operators->  LDY  LdyAddressingMOde--------
Is 'ϵ' Not Contained in 'LDY First Set'
			Compare 'ϵ' To 'LDY'
TRUE
'TempFirstY' { } U 'LDY First Set' { 'LDY' } => 'TempFirstY' { 'LDY' }
******* LDY ******
^^^^^^^ LDY ^^^^^^^
--------  Operators->  STX  StxAddressingMode--------
Is 'ϵ' Not Contained in 'STX First Set'
			Compare 'ϵ' To 'STX'
TRUE
'TempFirstY' { } U 'STX First Set' { 'STX' } => 'TempFirstY' { 'STX' }
******* STX ******
^^^^^^^ STX ^^^^^^^
--------  Operators->  STY  StyAddressingMode--------
Is 'ϵ' Not Contained in 'STY First Set'
			Compare 'ϵ' To 'STY'
TRUE
'TempFirstY' { } U 'STY First Set' { 'STY' } => 'TempFirstY' { 'STY' }
******* STY ******
^^^^^^^ STY ^^^^^^^
--------  Operators->  ϵ--------
'TempFirstY' { } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
'TempFirstY' { 'ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
'Operators Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  Operators->  ADC  AluAdrModes--------
Is 'ϵ' Not Contained in 'ADC First Set'
			Compare 'ϵ' To 'ADC'
TRUE
'TempFirstY' { } U 'ADC First Set' { 'ADC' } => 'TempFirstY' { 'ADC' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC' }
 'ADC'
--------  Operators->  AND  AluAdrModes--------
Is 'ϵ' Not Contained in 'AND First Set'
			Compare 'ϵ' To 'AND'
TRUE
'TempFirstY' { 'ADC' } U 'AND First Set' { 'AND' } => 'TempFirstY' { 'ADC','AND' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND' }
 'ADC'
 'AND'
--------  Operators->  EOR  AluAdrModes--------
Is 'ϵ' Not Contained in 'EOR First Set'
			Compare 'ϵ' To 'EOR'
TRUE
'TempFirstY' { 'ADC','AND' } U 'EOR First Set' { 'EOR' } => 'TempFirstY' { 'ADC','AND','EOR' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR' }
 'ADC'
 'AND'
 'EOR'
--------  Operators->  ORA  AluAdrModes--------
Is 'ϵ' Not Contained in 'ORA First Set'
			Compare 'ϵ' To 'ORA'
TRUE
'TempFirstY' { 'ADC','AND','EOR' } U 'ORA First Set' { 'ORA' } => 'TempFirstY' { 'ADC','AND','EOR','ORA' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
--------  Operators->  CMP  AluAdrModes--------
Is 'ϵ' Not Contained in 'CMP First Set'
			Compare 'ϵ' To 'CMP'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA' } U 'CMP First Set' { 'CMP' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
--------  Operators->  SBC  AluAdrModes--------
Is 'ϵ' Not Contained in 'SBC First Set'
			Compare 'ϵ' To 'SBC'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP' } U 'SBC First Set' { 'SBC' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
--------  Operators->  LDA  AluAdrModes--------
Is 'ϵ' Not Contained in 'LDA First Set'
			Compare 'ϵ' To 'LDA'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC' } U 'LDA First Set' { 'LDA' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
--------  Operators->  STA  StaAddressingModes--------
Is 'ϵ' Not Contained in 'STA First Set'
			Compare 'ϵ' To 'STA'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA' } U 'STA First Set' { 'STA' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
--------  Operators->  ASL  ShiftAddressingModes--------
Is 'ϵ' Not Contained in 'ASL First Set'
			Compare 'ϵ' To 'ASL'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA' } U 'ASL First Set' { 'ASL' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
--------  Operators->  ROL  ShiftAddressingModes--------
Is 'ϵ' Not Contained in 'ROL First Set'
			Compare 'ϵ' To 'ROL'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL' } U 'ROL First Set' { 'ROL' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
--------  Operators->  LSR  ShiftAddressingModes--------
Is 'ϵ' Not Contained in 'LSR First Set'
			Compare 'ϵ' To 'LSR'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL' } U 'LSR First Set' { 'LSR' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
--------  Operators->  ROR  ShiftAddressingModes--------
Is 'ϵ' Not Contained in 'ROR First Set'
			Compare 'ϵ' To 'ROR'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR' } U 'ROR First Set' { 'ROR' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
--------  Operators->  BCC  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BCC First Set'
			Compare 'ϵ' To 'BCC'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR' } U 'BCC First Set' { 'BCC' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
--------  Operators->  BCS  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BCS First Set'
			Compare 'ϵ' To 'BCS'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC' } U 'BCS First Set' { 'BCS' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
--------  Operators->  BEQ  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BEQ First Set'
			Compare 'ϵ' To 'BEQ'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS' } U 'BEQ First Set' { 'BEQ' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
--------  Operators->  BMI  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BMI First Set'
			Compare 'ϵ' To 'BMI'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ' } U 'BMI First Set' { 'BMI' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
--------  Operators->  BNE  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BNE First Set'
			Compare 'ϵ' To 'BNE'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI' } U 'BNE First Set' { 'BNE' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
--------  Operators->  BPL  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BPL First Set'
			Compare 'ϵ' To 'BPL'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE' } U 'BPL First Set' { 'BPL' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
--------  Operators->  BVC  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BVC First Set'
			Compare 'ϵ' To 'BVC'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL' } U 'BVC First Set' { 'BVC' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
--------  Operators->  BVS  RelAddressingMode--------
Is 'ϵ' Not Contained in 'BVS First Set'
			Compare 'ϵ' To 'BVS'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC' } U 'BVS First Set' { 'BVS' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
--------  Operators->  BIT  BitAddressModes--------
Is 'ϵ' Not Contained in 'BIT First Set'
			Compare 'ϵ' To 'BIT'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS' } U 'BIT First Set' { 'BIT' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
--------  Operators->  BRK--------
Is 'ϵ' Not Contained in 'BRK First Set'
			Compare 'ϵ' To 'BRK'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT' } U 'BRK First Set' { 'BRK' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
--------  Operators->  CLC--------
Is 'ϵ' Not Contained in 'CLC First Set'
			Compare 'ϵ' To 'CLC'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK' } U 'CLC First Set' { 'CLC' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
--------  Operators->  CLD--------
Is 'ϵ' Not Contained in 'CLD First Set'
			Compare 'ϵ' To 'CLD'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC' } U 'CLD First Set' { 'CLD' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
--------  Operators->  CLI--------
Is 'ϵ' Not Contained in 'CLI First Set'
			Compare 'ϵ' To 'CLI'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD' } U 'CLI First Set' { 'CLI' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
--------  Operators->  CLV--------
Is 'ϵ' Not Contained in 'CLV First Set'
			Compare 'ϵ' To 'CLV'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI' } U 'CLV First Set' { 'CLV' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
--------  Operators->  DEX--------
Is 'ϵ' Not Contained in 'DEX First Set'
			Compare 'ϵ' To 'DEX'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV' } U 'DEX First Set' { 'DEX' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
--------  Operators->  DEY--------
Is 'ϵ' Not Contained in 'DEY First Set'
			Compare 'ϵ' To 'DEY'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX' } U 'DEY First Set' { 'DEY' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
--------  Operators->  INX--------
Is 'ϵ' Not Contained in 'INX First Set'
			Compare 'ϵ' To 'INX'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY' } U 'INX First Set' { 'INX' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
--------  Operators->  INY--------
Is 'ϵ' Not Contained in 'INY First Set'
			Compare 'ϵ' To 'INY'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX' } U 'INY First Set' { 'INY' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
--------  Operators->  NOP--------
Is 'ϵ' Not Contained in 'NOP First Set'
			Compare 'ϵ' To 'NOP'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY' } U 'NOP First Set' { 'NOP' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
--------  Operators->  PHA--------
Is 'ϵ' Not Contained in 'PHA First Set'
			Compare 'ϵ' To 'PHA'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP' } U 'PHA First Set' { 'PHA' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
--------  Operators->  PLA--------
Is 'ϵ' Not Contained in 'PLA First Set'
			Compare 'ϵ' To 'PLA'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA' } U 'PLA First Set' { 'PLA' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
--------  Operators->  PHP--------
Is 'ϵ' Not Contained in 'PHP First Set'
			Compare 'ϵ' To 'PHP'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA' } U 'PHP First Set' { 'PHP' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
--------  Operators->  PLP--------
Is 'ϵ' Not Contained in 'PLP First Set'
			Compare 'ϵ' To 'PLP'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP' } U 'PLP First Set' { 'PLP' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
--------  Operators->  RTI--------
Is 'ϵ' Not Contained in 'RTI First Set'
			Compare 'ϵ' To 'RTI'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP' } U 'RTI First Set' { 'RTI' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
--------  Operators->  RTS--------
Is 'ϵ' Not Contained in 'RTS First Set'
			Compare 'ϵ' To 'RTS'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI' } U 'RTS First Set' { 'RTS' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
--------  Operators->  SEC--------
Is 'ϵ' Not Contained in 'SEC First Set'
			Compare 'ϵ' To 'SEC'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS' } U 'SEC First Set' { 'SEC' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
--------  Operators->  SED--------
Is 'ϵ' Not Contained in 'SED First Set'
			Compare 'ϵ' To 'SED'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC' } U 'SED First Set' { 'SED' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
--------  Operators->  SEI--------
Is 'ϵ' Not Contained in 'SEI First Set'
			Compare 'ϵ' To 'SEI'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED' } U 'SEI First Set' { 'SEI' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
--------  Operators->  TAX--------
Is 'ϵ' Not Contained in 'TAX First Set'
			Compare 'ϵ' To 'TAX'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI' } U 'TAX First Set' { 'TAX' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
--------  Operators->  TAY--------
Is 'ϵ' Not Contained in 'TAY First Set'
			Compare 'ϵ' To 'TAY'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX' } U 'TAY First Set' { 'TAY' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
--------  Operators->  TXA--------
Is 'ϵ' Not Contained in 'TXA First Set'
			Compare 'ϵ' To 'TXA'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY' } U 'TXA First Set' { 'TXA' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
--------  Operators->  TYA--------
Is 'ϵ' Not Contained in 'TYA First Set'
			Compare 'ϵ' To 'TYA'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA' } U 'TYA First Set' { 'TYA' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
--------  Operators->  TXS--------
Is 'ϵ' Not Contained in 'TXS First Set'
			Compare 'ϵ' To 'TXS'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA' } U 'TXS First Set' { 'TXS' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
--------  Operators->  TSX--------
Is 'ϵ' Not Contained in 'TSX First Set'
			Compare 'ϵ' To 'TSX'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS' } U 'TSX First Set' { 'TSX' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
--------  Operators->  INC  IncAddressingMOdes--------
Is 'ϵ' Not Contained in 'INC First Set'
			Compare 'ϵ' To 'INC'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX' } U 'INC First Set' { 'INC' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
--------  Operators->  DEC  IncAddressingMOdes--------
Is 'ϵ' Not Contained in 'DEC First Set'
			Compare 'ϵ' To 'DEC'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC' } U 'DEC First Set' { 'DEC' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
--------  Operators->  JMP  JumpAddressingModes--------
Is 'ϵ' Not Contained in 'JMP First Set'
			Compare 'ϵ' To 'JMP'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC' } U 'JMP First Set' { 'JMP' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
--------  Operators->  JSR  CallAddressingMode--------
Is 'ϵ' Not Contained in 'JSR First Set'
			Compare 'ϵ' To 'JSR'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP' } U 'JSR First Set' { 'JSR' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
 'JSR'
--------  Operators->  CPX  CPXAddressingMode--------
Is 'ϵ' Not Contained in 'CPX First Set'
			Compare 'ϵ' To 'CPX'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR' } U 'CPX First Set' { 'CPX' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
 'JSR'
 'CPX'
--------  Operators->  CPY  CPXAddressingMode--------
Is 'ϵ' Not Contained in 'CPY First Set'
			Compare 'ϵ' To 'CPY'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX' } U 'CPY First Set' { 'CPY' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
 'JSR'
 'CPX'
 'CPY'
--------  Operators->  LDX  LdxAddressingMode--------
Is 'ϵ' Not Contained in 'LDX First Set'
			Compare 'ϵ' To 'LDX'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY' } U 'LDX First Set' { 'LDX' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
 'JSR'
 'CPX'
 'CPY'
 'LDX'
--------  Operators->  LDY  LdyAddressingMOde--------
Is 'ϵ' Not Contained in 'LDY First Set'
			Compare 'ϵ' To 'LDY'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX' } U 'LDY First Set' { 'LDY' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
 'JSR'
 'CPX'
 'CPY'
 'LDX'
 'LDY'
--------  Operators->  STX  StxAddressingMode--------
Is 'ϵ' Not Contained in 'STX First Set'
			Compare 'ϵ' To 'STX'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY' } U 'STX First Set' { 'STX' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
 'JSR'
 'CPX'
 'CPY'
 'LDX'
 'LDY'
 'STX'
--------  Operators->  STY  StyAddressingMode--------
Is 'ϵ' Not Contained in 'STY First Set'
			Compare 'ϵ' To 'STY'
TRUE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX' } U 'STY First Set' { 'STY' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
 'JSR'
 'CPX'
 'CPY'
 'LDX'
 'LDY'
 'STX'
 'STY'
--------  Operators->  ϵ--------
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
Is ϵ in Set TempFirstY
TRUE
Is $ in Set Operators Follow Set
FALSE
'TempFirstY' { 'ADC','AND','EOR','ORA','CMP','SBC','LDA','STA','ASL','ROL','LSR','ROR','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','DEX','DEY','INX','INY','NOP','PHA','PLA','PHP','PLP','RTI','RTS','SEC','SED','SEI','TAX','TAY','TXA','TYA','TXS','TSX','INC','DEC','JMP','JSR','CPX','CPY','LDX','LDY','STX','STY','ϵ' }
 'ADC'
 'AND'
 'EOR'
 'ORA'
 'CMP'
 'SBC'
 'LDA'
 'STA'
 'ASL'
 'ROL'
 'LSR'
 'ROR'
 'BCC'
 'BCS'
 'BEQ'
 'BMI'
 'BNE'
 'BPL'
 'BVC'
 'BVS'
 'BIT'
 'BRK'
 'CLC'
 'CLD'
 'CLI'
 'CLV'
 'DEX'
 'DEY'
 'INX'
 'INY'
 'NOP'
 'PHA'
 'PLA'
 'PHP'
 'PLP'
 'RTI'
 'RTS'
 'SEC'
 'SED'
 'SEI'
 'TAX'
 'TAY'
 'TXA'
 'TYA'
 'TXS'
 'TSX'
 'INC'
 'DEC'
 'JMP'
 'JSR'
 'CPX'
 'CPY'
 'LDX'
 'LDY'
 'STX'
 'STY'
 'ϵ'
------- DefineStorage --------
################> Rule 1 <#################
--------  DefineStorage->  DS  AsmConstant--------
Is 'ϵ' Not Contained in 'DS First Set'
			Compare 'ϵ' To 'DS'
TRUE
'TempFirstY' { } U 'DS First Set' { 'DS' } => 'TempFirstY' { 'DS' }
******* DS ******
^^^^^^^ DS ^^^^^^^
'DefineStorage Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  DefineStorage->  DS  AsmConstant--------
Is 'ϵ' Not Contained in 'DS First Set'
			Compare 'ϵ' To 'DS'
TRUE
'TempFirstY' { } U 'DS First Set' { 'DS' } => 'TempFirstY' { 'DS' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'DS' }
 'DS'
------- DefineMemory --------
################> Rule 1 <#################
--------  DefineMemory->  DB  AsmConstList--------
Is 'ϵ' Not Contained in 'DB First Set'
			Compare 'ϵ' To 'DB'
TRUE
'TempFirstY' { } U 'DB First Set' { 'DB' } => 'TempFirstY' { 'DB' }
******* DB ******
^^^^^^^ DB ^^^^^^^
--------  DefineMemory->  DW  AsmConstList--------
Is 'ϵ' Not Contained in 'DW First Set'
			Compare 'ϵ' To 'DW'
TRUE
'TempFirstY' { } U 'DW First Set' { 'DW' } => 'TempFirstY' { 'DW' }
******* DW ******
^^^^^^^ DW ^^^^^^^
--------  DefineMemory->  DL  AsmConstList--------
Is 'ϵ' Not Contained in 'DL First Set'
			Compare 'ϵ' To 'DL'
TRUE
'TempFirstY' { } U 'DL First Set' { 'DL' } => 'TempFirstY' { 'DL' }
******* DL ******
^^^^^^^ DL ^^^^^^^
'DefineMemory Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  DefineMemory->  DB  AsmConstList--------
Is 'ϵ' Not Contained in 'DB First Set'
			Compare 'ϵ' To 'DB'
TRUE
'TempFirstY' { } U 'DB First Set' { 'DB' } => 'TempFirstY' { 'DB' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'DB' }
 'DB'
--------  DefineMemory->  DW  AsmConstList--------
Is 'ϵ' Not Contained in 'DW First Set'
			Compare 'ϵ' To 'DW'
TRUE
'TempFirstY' { 'DB' } U 'DW First Set' { 'DW' } => 'TempFirstY' { 'DB','DW' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'DB','DW' }
 'DB'
 'DW'
--------  DefineMemory->  DL  AsmConstList--------
Is 'ϵ' Not Contained in 'DL First Set'
			Compare 'ϵ' To 'DL'
TRUE
'TempFirstY' { 'DB','DW' } U 'DL First Set' { 'DL' } => 'TempFirstY' { 'DB','DW','DL' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'DB','DW','DL' }
 'DB'
 'DW'
 'DL'
------- Control --------
################> Rule 1 <#################
--------  Control->  SECTIONTOKEN  STRING--------
Is 'ϵ' Not Contained in 'SECTIONTOKEN First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
TRUE
'TempFirstY' { } U 'SECTIONTOKEN First Set' { 'SECTIONTOKEN' } => 'TempFirstY' { 'SECTIONTOKEN' }
******* SECTIONTOKEN ******
^^^^^^^ SECTIONTOKEN ^^^^^^^
--------  Control->  ORG  AsmConstant--------
Is 'ϵ' Not Contained in 'ORG First Set'
			Compare 'ϵ' To 'ORG'
TRUE
'TempFirstY' { } U 'ORG First Set' { 'ORG' } => 'TempFirstY' { 'ORG' }
******* ORG ******
^^^^^^^ ORG ^^^^^^^
--------  Control->  PROCESSOR  ProcessorType--------
Is 'ϵ' Not Contained in 'PROCESSOR First Set'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'TempFirstY' { } U 'PROCESSOR First Set' { 'PROCESSOR' } => 'TempFirstY' { 'PROCESSOR' }
******* PROCESSOR ******
^^^^^^^ PROCESSOR ^^^^^^^
'Control Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  Control->  SECTIONTOKEN  STRING--------
Is 'ϵ' Not Contained in 'SECTIONTOKEN First Set'
			Compare 'ϵ' To 'SECTIONTOKEN'
TRUE
'TempFirstY' { } U 'SECTIONTOKEN First Set' { 'SECTIONTOKEN' } => 'TempFirstY' { 'SECTIONTOKEN' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'SECTIONTOKEN' }
 'SECTIONTOKEN'
--------  Control->  ORG  AsmConstant--------
Is 'ϵ' Not Contained in 'ORG First Set'
			Compare 'ϵ' To 'ORG'
TRUE
'TempFirstY' { 'SECTIONTOKEN' } U 'ORG First Set' { 'ORG' } => 'TempFirstY' { 'SECTIONTOKEN','ORG' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'SECTIONTOKEN','ORG' }
 'SECTIONTOKEN'
 'ORG'
--------  Control->  PROCESSOR  ProcessorType--------
Is 'ϵ' Not Contained in 'PROCESSOR First Set'
			Compare 'ϵ' To 'PROCESSOR'
TRUE
'TempFirstY' { 'SECTIONTOKEN','ORG' } U 'PROCESSOR First Set' { 'PROCESSOR' } => 'TempFirstY' { 'SECTIONTOKEN','ORG','PROCESSOR' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'SECTIONTOKEN','ORG','PROCESSOR' }
 'SECTIONTOKEN'
 'ORG'
 'PROCESSOR'
------- AluAdrModes --------
################> Rule 1 <#################
--------  AluAdrModes->  AsmConstant  OptIndexReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
--------  AluAdrModes->  AluAdrModes_1--------
Is 'ϵ' Not Contained in 'AluAdrModes_1 First Set'
			Compare 'ϵ' To '#'
			Compare 'ϵ' To '('
TRUE
'TempFirstY' { } U 'AluAdrModes_1 First Set' { '#','(' } => 'TempFirstY' { '#','(' }
******* # ******
^^^^^^^ # ^^^^^^^
******* ( ******
^^^^^^^ ( ^^^^^^^
'AluAdrModes Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  AluAdrModes->  AsmConstant  OptIndexReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
--------  AluAdrModes->  AluAdrModes_1--------
Is 'ϵ' Not Contained in 'AluAdrModes_1 First Set'
			Compare 'ϵ' To '#'
			Compare 'ϵ' To '('
TRUE
'TempFirstY' { 'NUMBER','*' } U 'AluAdrModes_1 First Set' { '#','(' } => 'TempFirstY' { 'NUMBER','*','#','(' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*','#','(' }
 'NUMBER'
 '*'
 '#'
 '('
------- AluAdrModes_1 --------
################> Rule 1 <#################
--------  AluAdrModes_1->  #  AsmConstant--------
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'TempFirstY' { } U '# First Set' { '#' } => 'TempFirstY' { '#' }
******* # ******
^^^^^^^ # ^^^^^^^
--------  AluAdrModes_1->  (  Indirect--------
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'TempFirstY' { } U '( First Set' { '(' } => 'TempFirstY' { '(' }
******* ( ******
^^^^^^^ ( ^^^^^^^
'AluAdrModes_1 Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  AluAdrModes_1->  #  AsmConstant--------
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'TempFirstY' { } U '# First Set' { '#' } => 'TempFirstY' { '#' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { '#' }
 '#'
--------  AluAdrModes_1->  (  Indirect--------
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'TempFirstY' { '#' } U '( First Set' { '(' } => 'TempFirstY' { '#','(' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { '#','(' }
 '#'
 '('
------- Indirect --------
################> Rule 1 <#################
--------  Indirect->  AsmConstant  Indirect_1  Indirect_1--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
--------  Indirect->  )  ,  YREG--------
Is 'ϵ' Not Contained in ') First Set'
			Compare 'ϵ' To ')'
TRUE
'TempFirstY' { } U ') First Set' { ')' } => 'TempFirstY' { ')' }
******* ) ******
^^^^^^^ ) ^^^^^^^
--------  Indirect->  ,  XREG  )--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { } U ', First Set' { ',' } => 'TempFirstY' { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
'Indirect Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  Indirect->  AsmConstant  Indirect_1  Indirect_1--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
--------  Indirect->  )  ,  YREG--------
Is 'ϵ' Not Contained in ') First Set'
			Compare 'ϵ' To ')'
TRUE
'TempFirstY' { 'NUMBER','*' } U ') First Set' { ')' } => 'TempFirstY' { 'NUMBER','*',')' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*',')' }
 'NUMBER'
 '*'
 ')'
--------  Indirect->  ,  XREG  )--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { 'NUMBER','*',')' } U ', First Set' { ',' } => 'TempFirstY' { 'NUMBER','*',')',',' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*',')',',' }
 'NUMBER'
 '*'
 ')'
 ','
------- StaAddressingModes --------
################> Rule 1 <#################
--------  StaAddressingModes->  AsmConstant  OptIndexReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
--------  StaAddressingModes->  (  Indirect--------
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'TempFirstY' { } U '( First Set' { '(' } => 'TempFirstY' { '(' }
******* ( ******
^^^^^^^ ( ^^^^^^^
'StaAddressingModes Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  StaAddressingModes->  AsmConstant  OptIndexReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
--------  StaAddressingModes->  (  Indirect--------
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'TempFirstY' { 'NUMBER','*' } U '( First Set' { '(' } => 'TempFirstY' { 'NUMBER','*','(' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*','(' }
 'NUMBER'
 '*'
 '('
------- ShiftAddressingModes --------
################> Rule 1 <#################
--------  ShiftAddressingModes->  AREG--------
Is 'ϵ' Not Contained in 'AREG First Set'
TRUE
'TempFirstY' { } U 'AREG First Set' { } => 'TempFirstY' { }
--------  ShiftAddressingModes->  AsmConstant  OptXReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
'ShiftAddressingModes Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  ShiftAddressingModes->  AREG--------
Is 'ϵ' Not Contained in 'AREG First Set'
TRUE
'TempFirstY' { } U 'AREG First Set' { } => 'TempFirstY' { }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { }
--------  ShiftAddressingModes->  AsmConstant  OptXReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
------- RelAddressingMode --------
################> Rule 1 <#################
--------  RelAddressingMode->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
'RelAddressingMode Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  RelAddressingMode->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
------- BitAddressModes --------
################> Rule 1 <#################
--------  BitAddressModes->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
'BitAddressModes Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  BitAddressModes->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
------- IncAddressingMOdes --------
################> Rule 1 <#################
--------  IncAddressingMOdes->  AsmConstant  OptXReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
'IncAddressingMOdes Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  IncAddressingMOdes->  AsmConstant  OptXReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
------- JumpAddressingModes --------
################> Rule 1 <#################
--------  JumpAddressingModes->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
--------  JumpAddressingModes->  (  AsmConstant  )--------
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'TempFirstY' { } U '( First Set' { '(' } => 'TempFirstY' { '(' }
******* ( ******
^^^^^^^ ( ^^^^^^^
'JumpAddressingModes Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  JumpAddressingModes->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
--------  JumpAddressingModes->  (  AsmConstant  )--------
Is 'ϵ' Not Contained in '( First Set'
			Compare 'ϵ' To '('
TRUE
'TempFirstY' { 'NUMBER','*' } U '( First Set' { '(' } => 'TempFirstY' { 'NUMBER','*','(' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*','(' }
 'NUMBER'
 '*'
 '('
------- CallAddressingMode --------
################> Rule 1 <#################
--------  CallAddressingMode->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
'CallAddressingMode Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  CallAddressingMode->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
------- LdxAddressingMode --------
################> Rule 1 <#################
--------  LdxAddressingMode->  AsmConstant  OptYReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
--------  LdxAddressingMode->  #  AsmConstant--------
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'TempFirstY' { } U '# First Set' { '#' } => 'TempFirstY' { '#' }
******* # ******
^^^^^^^ # ^^^^^^^
'LdxAddressingMode Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  LdxAddressingMode->  AsmConstant  OptYReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
--------  LdxAddressingMode->  #  AsmConstant--------
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'TempFirstY' { 'NUMBER','*' } U '# First Set' { '#' } => 'TempFirstY' { 'NUMBER','*','#' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*','#' }
 'NUMBER'
 '*'
 '#'
------- CPXAddressingMode --------
################> Rule 1 <#################
--------  CPXAddressingMode->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
--------  CPXAddressingMode->  #  AsmConstant--------
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'TempFirstY' { } U '# First Set' { '#' } => 'TempFirstY' { '#' }
******* # ******
^^^^^^^ # ^^^^^^^
'CPXAddressingMode Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  CPXAddressingMode->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
--------  CPXAddressingMode->  #  AsmConstant--------
Is 'ϵ' Not Contained in '# First Set'
			Compare 'ϵ' To '#'
TRUE
'TempFirstY' { 'NUMBER','*' } U '# First Set' { '#' } => 'TempFirstY' { 'NUMBER','*','#' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*','#' }
 'NUMBER'
 '*'
 '#'
------- StxAddressingMode --------
################> Rule 1 <#################
--------  StxAddressingMode->  AsmConstant  OptYReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
'StxAddressingMode Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  StxAddressingMode->  AsmConstant  OptYReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
------- StyAddressingMode --------
################> Rule 1 <#################
--------  StyAddressingMode->  AsmConstant  OptXReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
'StyAddressingMode Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  StyAddressingMode->  AsmConstant  OptXReg--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
------- OptIndexReg --------
################> Rule 1 <#################
--------  OptIndexReg->  ,  OptIndexReg_1--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { } U ', First Set' { ',' } => 'TempFirstY' { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
--------  OptIndexReg->  ϵ--------
'TempFirstY' { } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
'TempFirstY' { 'ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
'OptIndexReg Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  OptIndexReg->  ,  OptIndexReg_1--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { } U ', First Set' { ',' } => 'TempFirstY' { ',' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { ',' }
 ','
--------  OptIndexReg->  ϵ--------
'TempFirstY' { ',' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { ',','ϵ' }
'TempFirstY' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { ',','ϵ' }
Is ϵ in Set TempFirstY
TRUE
Is $ in Set OptIndexReg Follow Set
FALSE
'TempFirstY' { ',','ϵ' }
 ','
 'ϵ'
------- OptIndexReg_1 --------
################> Rule 1 <#################
--------  OptIndexReg_1->  XREG--------
Is 'ϵ' Not Contained in 'XREG First Set'
			Compare 'ϵ' To 'XREG'
TRUE
'TempFirstY' { } U 'XREG First Set' { 'XREG' } => 'TempFirstY' { 'XREG' }
******* XREG ******
^^^^^^^ XREG ^^^^^^^
--------  OptIndexReg_1->  YREG--------
Is 'ϵ' Not Contained in 'YREG First Set'
			Compare 'ϵ' To 'YREG'
TRUE
'TempFirstY' { } U 'YREG First Set' { 'YREG' } => 'TempFirstY' { 'YREG' }
******* YREG ******
^^^^^^^ YREG ^^^^^^^
'OptIndexReg_1 Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  OptIndexReg_1->  XREG--------
Is 'ϵ' Not Contained in 'XREG First Set'
			Compare 'ϵ' To 'XREG'
TRUE
'TempFirstY' { } U 'XREG First Set' { 'XREG' } => 'TempFirstY' { 'XREG' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'XREG' }
 'XREG'
--------  OptIndexReg_1->  YREG--------
Is 'ϵ' Not Contained in 'YREG First Set'
			Compare 'ϵ' To 'YREG'
TRUE
'TempFirstY' { 'XREG' } U 'YREG First Set' { 'YREG' } => 'TempFirstY' { 'XREG','YREG' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'XREG','YREG' }
 'XREG'
 'YREG'
------- OptXReg --------
################> Rule 1 <#################
--------  OptXReg->  ,  XREG--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { } U ', First Set' { ',' } => 'TempFirstY' { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
--------  OptXReg->  ϵ--------
'TempFirstY' { } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
'TempFirstY' { 'ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
'OptXReg Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  OptXReg->  ,  XREG--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { } U ', First Set' { ',' } => 'TempFirstY' { ',' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { ',' }
 ','
--------  OptXReg->  ϵ--------
'TempFirstY' { ',' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { ',','ϵ' }
'TempFirstY' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { ',','ϵ' }
Is ϵ in Set TempFirstY
TRUE
Is $ in Set OptXReg Follow Set
FALSE
'TempFirstY' { ',','ϵ' }
 ','
 'ϵ'
------- OptYReg --------
################> Rule 1 <#################
--------  OptYReg->  ,  YREG--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { } U ', First Set' { ',' } => 'TempFirstY' { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
--------  OptYReg->  ϵ--------
'TempFirstY' { } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
'TempFirstY' { 'ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { 'ϵ' }
******* ϵ ******
^^^^^^^ ϵ ^^^^^^^
'OptYReg Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  OptYReg->  ,  YREG--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { } U ', First Set' { ',' } => 'TempFirstY' { ',' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { ',' }
 ','
--------  OptYReg->  ϵ--------
'TempFirstY' { ',' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { ',','ϵ' }
'TempFirstY' { ',','ϵ' } U 'ϵ First Set' { 'ϵ' } => 'TempFirstY' { ',','ϵ' }
Is ϵ in Set TempFirstY
TRUE
Is $ in Set OptYReg Follow Set
FALSE
'TempFirstY' { ',','ϵ' }
 ','
 'ϵ'
------- AsmConstList --------
################> Rule 1 <#################
--------  AsmConstList->  UpperLower  AsmConstList_1  AsmConstList_1--------
Is 'ϵ' Not Contained in 'UpperLower First Set'
			Compare 'ϵ' To '>'
			Compare 'ϵ' To '<'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'UpperLower First Set' { '>','<','NUMBER','*' } => 'TempFirstY' { '>','<','NUMBER','*' }
******* > ******
^^^^^^^ > ^^^^^^^
******* < ******
^^^^^^^ < ^^^^^^^
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
--------  AsmConstList->  ,  UpperLower  AsmConstList_1--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { } U ', First Set' { ',' } => 'TempFirstY' { ',' }
******* , ******
^^^^^^^ , ^^^^^^^
'AsmConstList Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  AsmConstList->  UpperLower  AsmConstList_1  AsmConstList_1--------
Is 'ϵ' Not Contained in 'UpperLower First Set'
			Compare 'ϵ' To '>'
			Compare 'ϵ' To '<'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'UpperLower First Set' { '>','<','NUMBER','*' } => 'TempFirstY' { '>','<','NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { '>','<','NUMBER','*' }
 '>'
 '<'
 'NUMBER'
 '*'
--------  AsmConstList->  ,  UpperLower  AsmConstList_1--------
Is 'ϵ' Not Contained in ', First Set'
			Compare 'ϵ' To ','
TRUE
'TempFirstY' { '>','<','NUMBER','*' } U ', First Set' { ',' } => 'TempFirstY' { '>','<','NUMBER','*',',' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { '>','<','NUMBER','*',',' }
 '>'
 '<'
 'NUMBER'
 '*'
 ','
------- UpperLower --------
################> Rule 1 <#################
--------  UpperLower->  >  UpperLower--------
Is 'ϵ' Not Contained in '> First Set'
			Compare 'ϵ' To '>'
TRUE
'TempFirstY' { } U '> First Set' { '>' } => 'TempFirstY' { '>' }
******* > ******
^^^^^^^ > ^^^^^^^
--------  UpperLower->  <  UpperLower--------
Is 'ϵ' Not Contained in '< First Set'
			Compare 'ϵ' To '<'
TRUE
'TempFirstY' { } U '< First Set' { '<' } => 'TempFirstY' { '<' }
******* < ******
^^^^^^^ < ^^^^^^^
--------  UpperLower->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { 'NUMBER','*' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
******* * ******
^^^^^^^ * ^^^^^^^
'UpperLower Follow Set' { }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  UpperLower->  >  UpperLower--------
Is 'ϵ' Not Contained in '> First Set'
			Compare 'ϵ' To '>'
TRUE
'TempFirstY' { } U '> First Set' { '>' } => 'TempFirstY' { '>' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { '>' }
 '>'
--------  UpperLower->  <  UpperLower--------
Is 'ϵ' Not Contained in '< First Set'
			Compare 'ϵ' To '<'
TRUE
'TempFirstY' { '>' } U '< First Set' { '<' } => 'TempFirstY' { '>','<' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { '>','<' }
 '>'
 '<'
--------  UpperLower->  AsmConstant--------
Is 'ϵ' Not Contained in 'AsmConstant First Set'
			Compare 'ϵ' To 'NUMBER'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { '>','<' } U 'AsmConstant First Set' { 'NUMBER','*' } => 'TempFirstY' { '>','<','NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { '>','<','NUMBER','*' }
 '>'
 '<'
 'NUMBER'
 '*'
------- AsmConstant --------
################> Rule 1 <#################
--------  AsmConstant->  IDENT--------
Is 'ϵ' Not Contained in 'IDENT First Set'
TRUE
'TempFirstY' { } U 'IDENT First Set' { } => 'TempFirstY' { }
--------  AsmConstant->  LABLE--------
Is 'ϵ' Not Contained in 'LABLE First Set'
TRUE
'TempFirstY' { } U 'LABLE First Set' { } => 'TempFirstY' { }
--------  AsmConstant->  NUMBER--------
Is 'ϵ' Not Contained in 'NUMBER First Set'
			Compare 'ϵ' To 'NUMBER'
TRUE
'TempFirstY' { } U 'NUMBER First Set' { 'NUMBER' } => 'TempFirstY' { 'NUMBER' }
******* NUMBER ******
^^^^^^^ NUMBER ^^^^^^^
--------  AsmConstant->  *--------
Is 'ϵ' Not Contained in '* First Set'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { } U '* First Set' { '*' } => 'TempFirstY' { '*' }
******* * ******
^^^^^^^ * ^^^^^^^
'AsmConstant Follow Set' { ',',')' }
'Terminals' { 'ADC','AND','ASL','BCC','BCS','BEQ','BMI','BNE','BPL','BVC','BVS','BIT','BRK','CLC','CLD','CLI','CLV','CMP','CPX','CPY','DEC','DEX','DEY','EOR','INC','INX','INY','JMP','JSR','LDA','LDX','LDY','LSR','NOP','ORA','PHA','PLA','PHP','PLP','ROL','ROR','RTI','RTS','SBC','STA','SEC','SED','SEI','STX','STY','TAX','TAY','TXA','TYA','TXS','TSX','ENDOFOPCODES','ACCUM','XREG','YREG','LABEL','STRING','SYMBOL','NUMBER','ORG','DB','DW','DL','DS','HEX_NUMBER','CHAR_CONSTANT','INCLUDE','SECTIONTOKEN','START','SIZE','MODE','READ_WRTE','READ_ONLY','R6502','PROCESSOR','WD65C02','WD65C816','VALUE','OR_OP','AND_OP','RIGHT_SHIFT','LEFT_SHIFT','MOD','#','(',')',',',';','<','>','*','ENDOFTOKENS','$' }
############< Rule 2 >############
--------  AsmConstant->  IDENT--------
Is 'ϵ' Not Contained in 'IDENT First Set'
TRUE
'TempFirstY' { } U 'IDENT First Set' { } => 'TempFirstY' { }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { }
--------  AsmConstant->  LABLE--------
Is 'ϵ' Not Contained in 'LABLE First Set'
TRUE
'TempFirstY' { } U 'LABLE First Set' { } => 'TempFirstY' { }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { }
--------  AsmConstant->  NUMBER--------
Is 'ϵ' Not Contained in 'NUMBER First Set'
			Compare 'ϵ' To 'NUMBER'
TRUE
'TempFirstY' { } U 'NUMBER First Set' { 'NUMBER' } => 'TempFirstY' { 'NUMBER' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER' }
 'NUMBER'
--------  AsmConstant->  *--------
Is 'ϵ' Not Contained in '* First Set'
			Compare 'ϵ' To '*'
TRUE
'TempFirstY' { 'NUMBER' } U '* First Set' { '*' } => 'TempFirstY' { 'NUMBER','*' }
Is ϵ in Set TempFirstY
FALSE
'TempFirstY' { 'NUMBER','*' }
 'NUMBER'
 '*'
xxxxxxxxxxxx Parse Table xxxxxxxxxxxxxxxxx
('CodeLineList_1','ADC')   CodeLineList_1->  ϵ
('CodeLineList_1',';')   CodeLineList_1->  ;  CodeLine  CodeLineList_1
('CodeLineList_1','$')   CodeLineList_1->  ϵ
('CodeLine_1','ADC')   CodeLine_1->  Operators
('CodeLine_1','ORG')   CodeLine_1->  Control
('CodeLine_1','DB')   CodeLine_1->  DefineMemory
('CodeLine_1','DW')   CodeLine_1->  DefineMemory
('CodeLine_1','DL')   CodeLine_1->  DefineMemory
('CodeLine_1','DS')   CodeLine_1->  DefineStorage
('CodeLine_1','SECTIONTOKEN')   CodeLine_1->  Control
('CodeLine_1','PROCESSOR')   CodeLine_1->  Control
('Operators','ADC')   Operators->  ADC  AluAdrModes
  Operators->  ϵ
('Operators','AND')   Operators->  AND  AluAdrModes
('Operators','ASL')   Operators->  ASL  ShiftAddressingModes
('Operators','BCC')   Operators->  BCC  RelAddressingMode
('Operators','BCS')   Operators->  BCS  RelAddressingMode
('Operators','BEQ')   Operators->  BEQ  RelAddressingMode
('Operators','BMI')   Operators->  BMI  RelAddressingMode
('Operators','BNE')   Operators->  BNE  RelAddressingMode
('Operators','BPL')   Operators->  BPL  RelAddressingMode
('Operators','BVC')   Operators->  BVC  RelAddressingMode
('Operators','BVS')   Operators->  BVS  RelAddressingMode
('Operators','BIT')   Operators->  BIT  BitAddressModes
('Operators','BRK')   Operators->  BRK
('Operators','CLC')   Operators->  CLC
('Operators','CLD')   Operators->  CLD
('Operators','CLI')   Operators->  CLI
('Operators','CLV')   Operators->  CLV
('Operators','CMP')   Operators->  CMP  AluAdrModes
('Operators','CPX')   Operators->  CPX  CPXAddressingMode
('Operators','CPY')   Operators->  CPY  CPXAddressingMode
('Operators','DEC')   Operators->  DEC  IncAddressingMOdes
('Operators','DEX')   Operators->  DEX
('Operators','DEY')   Operators->  DEY
('Operators','EOR')   Operators->  EOR  AluAdrModes
('Operators','INC')   Operators->  INC  IncAddressingMOdes
('Operators','INX')   Operators->  INX
('Operators','INY')   Operators->  INY
('Operators','JMP')   Operators->  JMP  JumpAddressingModes
('Operators','JSR')   Operators->  JSR  CallAddressingMode
('Operators','LDA')   Operators->  LDA  AluAdrModes
('Operators','LDX')   Operators->  LDX  LdxAddressingMode
('Operators','LDY')   Operators->  LDY  LdyAddressingMOde
('Operators','LSR')   Operators->  LSR  ShiftAddressingModes
('Operators','NOP')   Operators->  NOP
('Operators','ORA')   Operators->  ORA  AluAdrModes
('Operators','PHA')   Operators->  PHA
('Operators','PLA')   Operators->  PLA
('Operators','PHP')   Operators->  PHP
('Operators','PLP')   Operators->  PLP
('Operators','ROL')   Operators->  ROL  ShiftAddressingModes
('Operators','ROR')   Operators->  ROR  ShiftAddressingModes
('Operators','RTI')   Operators->  RTI
('Operators','RTS')   Operators->  RTS
('Operators','SBC')   Operators->  SBC  AluAdrModes
('Operators','STA')   Operators->  STA  StaAddressingModes
('Operators','SEC')   Operators->  SEC
('Operators','SED')   Operators->  SED
('Operators','SEI')   Operators->  SEI
('Operators','STX')   Operators->  STX  StxAddressingMode
('Operators','STY')   Operators->  STY  StyAddressingMode
('Operators','TAX')   Operators->  TAX
('Operators','TAY')   Operators->  TAY
('Operators','TXA')   Operators->  TXA
('Operators','TYA')   Operators->  TYA
('Operators','TXS')   Operators->  TXS
('Operators','TSX')   Operators->  TSX
('DefineStorage','DS')   DefineStorage->  DS  AsmConstant
('DefineMemory','DB')   DefineMemory->  DB  AsmConstList
('DefineMemory','DW')   DefineMemory->  DW  AsmConstList
('DefineMemory','DL')   DefineMemory->  DL  AsmConstList
('Control','ORG')   Control->  ORG  AsmConstant
('Control','SECTIONTOKEN')   Control->  SECTIONTOKEN  STRING
('Control','PROCESSOR')   Control->  PROCESSOR  ProcessorType
('AluAdrModes','NUMBER')   AluAdrModes->  AsmConstant  OptIndexReg
('AluAdrModes','#')   AluAdrModes->  AluAdrModes_1
('AluAdrModes','(')   AluAdrModes->  AluAdrModes_1
('AluAdrModes','*')   AluAdrModes->  AsmConstant  OptIndexReg
('AluAdrModes_1','#')   AluAdrModes_1->  #  AsmConstant
('AluAdrModes_1','(')   AluAdrModes_1->  (  Indirect
('Indirect','NUMBER')   Indirect->  AsmConstant  Indirect_1  Indirect_1
('Indirect',')')   Indirect->  )  ,  YREG
('Indirect',',')   Indirect->  ,  XREG  )
('Indirect','*')   Indirect->  AsmConstant  Indirect_1  Indirect_1
('StaAddressingModes','NUMBER')   StaAddressingModes->  AsmConstant  OptIndexReg
('StaAddressingModes','(')   StaAddressingModes->  (  Indirect
('StaAddressingModes','*')   StaAddressingModes->  AsmConstant  OptIndexReg
('ShiftAddressingModes','NUMBER')   ShiftAddressingModes->  AsmConstant  OptXReg
('ShiftAddressingModes','*')   ShiftAddressingModes->  AsmConstant  OptXReg
('RelAddressingMode','NUMBER')   RelAddressingMode->  AsmConstant
('RelAddressingMode','*')   RelAddressingMode->  AsmConstant
('BitAddressModes','NUMBER')   BitAddressModes->  AsmConstant
('BitAddressModes','*')   BitAddressModes->  AsmConstant
('IncAddressingMOdes','NUMBER')   IncAddressingMOdes->  AsmConstant  OptXReg
('IncAddressingMOdes','*')   IncAddressingMOdes->  AsmConstant  OptXReg
('JumpAddressingModes','NUMBER')   JumpAddressingModes->  AsmConstant
('JumpAddressingModes','(')   JumpAddressingModes->  (  AsmConstant  )
('JumpAddressingModes','*')   JumpAddressingModes->  AsmConstant
('CallAddressingMode','NUMBER')   CallAddressingMode->  AsmConstant
('CallAddressingMode','*')   CallAddressingMode->  AsmConstant
('LdxAddressingMode','NUMBER')   LdxAddressingMode->  AsmConstant  OptYReg
('LdxAddressingMode','#')   LdxAddressingMode->  #  AsmConstant
('LdxAddressingMode','*')   LdxAddressingMode->  AsmConstant  OptYReg
('CPXAddressingMode','NUMBER')   CPXAddressingMode->  AsmConstant
('CPXAddressingMode','#')   CPXAddressingMode->  #  AsmConstant
('CPXAddressingMode','*')   CPXAddressingMode->  AsmConstant
('StxAddressingMode','NUMBER')   StxAddressingMode->  AsmConstant  OptYReg
('StxAddressingMode','*')   StxAddressingMode->  AsmConstant  OptYReg
('StyAddressingMode','NUMBER')   StyAddressingMode->  AsmConstant  OptXReg
('StyAddressingMode','*')   StyAddressingMode->  AsmConstant  OptXReg
('OptIndexReg','ADC')   OptIndexReg->  ϵ
('OptIndexReg',',')   OptIndexReg->  ,  OptIndexReg_1
('OptIndexReg_1','XREG')   OptIndexReg_1->  XREG
('OptIndexReg_1','YREG')   OptIndexReg_1->  YREG
('OptXReg','ADC')   OptXReg->  ϵ
('OptXReg',',')   OptXReg->  ,  XREG
('OptYReg','ADC')   OptYReg->  ϵ
('OptYReg',',')   OptYReg->  ,  YREG
('AsmConstList','NUMBER')   AsmConstList->  UpperLower  AsmConstList_1  AsmConstList_1
('AsmConstList',',')   AsmConstList->  ,  UpperLower  AsmConstList_1
('AsmConstList','<')   AsmConstList->  UpperLower  AsmConstList_1  AsmConstList_1
('AsmConstList','>')   AsmConstList->  UpperLower  AsmConstList_1  AsmConstList_1
('AsmConstList','*')   AsmConstList->  UpperLower  AsmConstList_1  AsmConstList_1
('UpperLower','NUMBER')   UpperLower->  AsmConstant
('UpperLower','<')   UpperLower->  <  UpperLower
('UpperLower','>')   UpperLower->  >  UpperLower
('UpperLower','*')   UpperLower->  AsmConstant
('AsmConstant','NUMBER')   AsmConstant->  NUMBER
('AsmConstant','*')   AsmConstant->  *
Table Entries = 130
