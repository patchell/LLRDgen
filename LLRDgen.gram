//---------------------------------------------
// Grammar for LLRDgen Parser Generator
//---------------------------------------------

KEYWORD		IDENT = 256			"IDENT" ;
KEYWORD		STRING				"STRING";
KEYWORD		NUMBER				"NUMBER";
KEYWORD		NONTERMINAL			"NONTERMINAL";
KEYWORD		TERMINAL			"TERMINAL";
KEYWORD		GRAMMAR				"GRAMMAR";
KEYWORD		REPLACEDBY			"->";
KEYWORD		KEYWORD				"KEYWORD"
KEYWORD		FIELD				"FIELD"
KEYWORD		FIELD_TYPE			"TYPE"
KEYWORD		TOKEN				"TOKEN"
KEYWORD		EMPTY				"e"
KEYWORD		ENDOFTOKENSTREAM	"$"
KEYWORD		ENDOFTOKENS			"ENDOFTOKENS"


GRAMMAR
LLRDgramer -> ParserGrammar;

ParserGrammar	-> FIELD FieldDef ParserGrammar
				-> KEYWORD KeywordDef ParserGrammar
				-> GRAMMAR GrammarDef ParserGrammar
				-> .
				;


FieldToken	-> 

KeyWordDef		-> GrammarSection KeyWordDef_1;
KeyWordDef_1	-> KEYWORD TokenIdent GrammarSection KeyWordDef_1
				-> .
				;

KewWordField	-> GrammarSection KewWordField_1;
KewWordField_1	-> FIELD FieldDef GrammarSection KewWordField_1
				-> .
				;

FieldDef		-> FieldValue FieldDef_1;
FieldDef_1		-> IDENT FieldValue FieldDef_1
				-> .
				;
FieldType		->  
GrammarSection	-> GRAMMAR GrammarStmts
				-> .
				;

GrammarStmts	-> GrammarStmt GrammarStmts_1;
GrammarStmts_1	-> ';' GrammarStmt GrammarStmts_1
				-> .
				;

GrammarStmt		-> IDENT RHSide
				-> NONTERMINAL RHSide
				-> .
				;

RHSide			-> Rule RHSide_1;
RHSide_1		-> REPLACED_BY Rule RHSide_1
				-> .
				;

Rule			-> IDENT Rule
				-> NONTERMINAL Rule
				-> TERMINAL Rule
				-> .
				;


Embedded	-> '{'  '}'
			-> .
			;


ReturnValue			-> ':' 'IDENT'
					-> .
					;

TokenIdent		-> TokenToken TokenIdent_1;
TokenIdent_1		-> IDENT OptInit TokenToken TokenIdent_1
				-> .
				;

OptInit			-> '=' NUMBER
				-> .
				;

TokenToken		-> STRING
				-> .
				;
	